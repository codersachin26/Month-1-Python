2022-04-08 21:16:01,660 : INFO -> start generate_xml() func
2022-04-08 21:16:01,661 : INFO -> start get_object_list() func
2022-04-08 21:16:01,661 : INFO -> start get_object_ids() func
2022-04-08 21:16:01,661 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects
2022-04-08 21:18:23,779 : INFO -> api response status : 200
2022-04-08 21:18:23,834 : INFO -> get called get_object_ids() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects 
2022-04-08 21:18:23,834 : INFO -> start get_object_by_id() func
2022-04-08 21:18:23,834 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 1
2022-04-08 21:18:26,441 : INFO -> api response status : 200
2022-04-08 21:18:26,442 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 1
2022-04-08 21:18:26,443 : INFO -> start get_object_by_id() func
2022-04-08 21:18:26,443 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 2
2022-04-08 21:18:27,665 : INFO -> api response status : 200
2022-04-08 21:18:27,665 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 2
2022-04-08 21:18:27,665 : INFO -> start get_object_by_id() func
2022-04-08 21:18:27,665 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 3
2022-04-08 21:18:28,692 : INFO -> api response status : 200
2022-04-08 21:18:28,694 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 3
2022-04-08 21:18:28,694 : INFO -> start get_object_by_id() func
2022-04-08 21:18:28,694 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 4
2022-04-08 21:18:29,717 : INFO -> api response status : 200
2022-04-08 21:18:29,719 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 4
2022-04-08 21:18:29,719 : INFO -> start get_object_by_id() func
2022-04-08 21:18:29,719 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 5
2022-04-08 21:18:30,942 : INFO -> api response status : 200
2022-04-08 21:18:30,943 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 5
2022-04-08 21:18:30,943 : INFO -> start get_object_by_id() func
2022-04-08 21:18:30,943 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 6
2022-04-08 21:18:32,379 : INFO -> api response status : 200
2022-04-08 21:18:32,380 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 6
2022-04-08 21:18:32,381 : INFO -> start get_object_by_id() func
2022-04-08 21:18:32,381 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 7
2022-04-08 21:18:33,400 : INFO -> api response status : 200
2022-04-08 21:18:33,401 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 7
2022-04-08 21:18:33,401 : INFO -> start get_object_by_id() func
2022-04-08 21:18:33,401 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 8
2022-04-08 21:18:34,427 : INFO -> api response status : 200
2022-04-08 21:18:34,428 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 8
2022-04-08 21:18:34,428 : INFO -> start get_object_by_id() func
2022-04-08 21:18:34,428 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 9
2022-04-08 21:18:35,242 : INFO -> api response status : 200
2022-04-08 21:18:35,242 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 9
2022-04-08 21:18:35,243 : INFO -> start get_object_by_id() func
2022-04-08 21:18:35,243 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 10
2022-04-08 21:18:36,270 : INFO -> api response status : 200
2022-04-08 21:18:36,271 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 10
2022-04-08 21:18:36,272 : INFO -> start get_object_by_id() func
2022-04-08 21:18:36,272 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 11
2022-04-08 21:18:37,295 : INFO -> api response status : 200
2022-04-08 21:18:37,296 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 11
2022-04-08 21:18:37,296 : INFO -> start get_object_by_id() func
2022-04-08 21:18:37,297 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 12
2022-04-08 21:18:38,315 : INFO -> api response status : 200
2022-04-08 21:18:38,315 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 12
2022-04-08 21:18:38,316 : INFO -> start get_object_by_id() func
2022-04-08 21:18:38,316 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 13
2022-04-08 21:18:39,747 : INFO -> api response status : 200
2022-04-08 21:18:39,748 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 13
2022-04-08 21:18:39,748 : INFO -> start get_object_by_id() func
2022-04-08 21:18:39,748 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 14
2022-04-08 21:18:40,568 : INFO -> api response status : 200
2022-04-08 21:18:40,569 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 14
2022-04-08 21:18:40,569 : INFO -> start get_object_by_id() func
2022-04-08 21:18:40,570 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 15
2022-04-08 21:18:41,590 : INFO -> api response status : 200
2022-04-08 21:18:41,591 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 15
2022-04-08 21:18:41,591 : INFO -> start get_object_by_id() func
2022-04-08 21:18:41,591 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 16
2022-04-08 21:18:42,617 : INFO -> api response status : 200
2022-04-08 21:18:42,619 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 16
2022-04-08 21:18:42,619 : INFO -> start get_object_by_id() func
2022-04-08 21:18:42,619 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 17
2022-04-08 21:18:43,641 : INFO -> api response status : 200
2022-04-08 21:18:43,642 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 17
2022-04-08 21:18:43,642 : INFO -> start get_object_by_id() func
2022-04-08 21:18:43,642 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 18
2022-04-08 21:18:44,461 : INFO -> api response status : 200
2022-04-08 21:18:44,461 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 18
2022-04-08 21:18:44,461 : INFO -> start get_object_by_id() func
2022-04-08 21:18:44,461 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 19
2022-04-08 21:18:45,482 : INFO -> api response status : 200
2022-04-08 21:18:45,483 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 19
2022-04-08 21:18:45,483 : INFO -> start get_object_by_id() func
2022-04-08 21:18:45,483 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 20
2022-04-08 21:18:47,123 : INFO -> api response status : 200
2022-04-08 21:18:47,123 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 20
2022-04-08 21:18:47,123 : INFO -> start get_object_by_id() func
2022-04-08 21:18:47,123 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 21
2022-04-08 21:18:47,940 : INFO -> api response status : 200
2022-04-08 21:18:47,940 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 21
2022-04-08 21:18:47,941 : INFO -> start get_object_by_id() func
2022-04-08 21:18:47,941 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 22
2022-04-08 21:18:48,762 : INFO -> api response status : 200
2022-04-08 21:18:48,764 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 22
2022-04-08 21:18:48,764 : INFO -> start get_object_by_id() func
2022-04-08 21:18:48,764 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 23
2022-04-08 21:18:49,580 : INFO -> api response status : 200
2022-04-08 21:18:49,581 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 23
2022-04-08 21:18:49,581 : INFO -> start get_object_by_id() func
2022-04-08 21:18:49,581 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 24
2022-04-08 21:18:50,605 : INFO -> api response status : 200
2022-04-08 21:18:50,606 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 24
2022-04-08 21:18:50,606 : INFO -> start get_object_by_id() func
2022-04-08 21:18:50,607 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 25
2022-04-08 21:18:51,625 : INFO -> api response status : 200
2022-04-08 21:18:51,625 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 25
2022-04-08 21:18:51,625 : INFO -> start get_object_by_id() func
2022-04-08 21:18:51,625 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 26
2022-04-08 21:18:52,444 : INFO -> api response status : 200
2022-04-08 21:18:52,445 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 26
2022-04-08 21:18:52,445 : INFO -> start get_object_by_id() func
2022-04-08 21:18:52,445 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 27
2022-04-08 21:18:53,473 : INFO -> api response status : 200
2022-04-08 21:18:53,475 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 27
2022-04-08 21:18:53,475 : INFO -> start get_object_by_id() func
2022-04-08 21:18:53,475 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 28
2022-04-08 21:18:54,495 : INFO -> api response status : 200
2022-04-08 21:18:54,496 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 28
2022-04-08 21:18:54,496 : INFO -> start get_object_by_id() func
2022-04-08 21:18:54,496 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 29
2022-04-08 21:18:55,519 : INFO -> api response status : 200
2022-04-08 21:18:55,520 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 29
2022-04-08 21:18:55,520 : INFO -> start get_object_by_id() func
2022-04-08 21:18:55,520 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 30
2022-04-08 21:18:56,545 : INFO -> api response status : 200
2022-04-08 21:18:56,546 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 30
2022-04-08 21:18:56,546 : INFO -> start get_object_by_id() func
2022-04-08 21:18:56,547 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 31
2022-04-08 21:18:57,567 : INFO -> api response status : 200
2022-04-08 21:18:57,568 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 31
2022-04-08 21:18:57,568 : INFO -> start get_object_by_id() func
2022-04-08 21:18:57,568 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 32
2022-04-08 21:18:58,591 : INFO -> api response status : 200
2022-04-08 21:18:58,591 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 32
2022-04-08 21:18:58,591 : INFO -> start get_object_by_id() func
2022-04-08 21:18:58,591 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 33
2022-04-08 21:18:59,616 : INFO -> api response status : 200
2022-04-08 21:18:59,616 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 33
2022-04-08 21:18:59,616 : INFO -> start get_object_by_id() func
2022-04-08 21:18:59,616 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 34
2022-04-08 21:19:00,639 : INFO -> api response status : 200
2022-04-08 21:19:00,639 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 34
2022-04-08 21:19:00,639 : INFO -> start get_object_by_id() func
2022-04-08 21:19:00,640 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 35
2022-04-08 21:19:01,867 : INFO -> api response status : 200
2022-04-08 21:19:01,868 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 35
2022-04-08 21:19:01,868 : INFO -> start get_object_by_id() func
2022-04-08 21:19:01,868 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 36
2022-04-08 21:19:02,687 : INFO -> api response status : 200
2022-04-08 21:19:02,687 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 36
2022-04-08 21:19:02,687 : INFO -> start get_object_by_id() func
2022-04-08 21:19:02,688 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 37
2022-04-08 21:19:03,908 : INFO -> api response status : 200
2022-04-08 21:19:03,910 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 37
2022-04-08 21:19:03,910 : INFO -> start get_object_by_id() func
2022-04-08 21:19:03,910 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 38
2022-04-08 21:19:04,732 : INFO -> api response status : 200
2022-04-08 21:19:04,732 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 38
2022-04-08 21:19:04,732 : INFO -> start get_object_by_id() func
2022-04-08 21:19:04,732 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 39
2022-04-08 21:19:05,758 : INFO -> api response status : 200
2022-04-08 21:19:05,758 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 39
2022-04-08 21:19:05,758 : INFO -> start get_object_by_id() func
2022-04-08 21:19:05,758 : INFO -> call api endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ with Id : 40
2022-04-08 21:19:06,784 : INFO -> api response status : 200
2022-04-08 21:19:06,786 : INFO -> get called get_object_by_id() func with api Endpoint : https://collectionapi.metmuseum.org/public/collection/v1/objects/ & Id : 40
2022-04-08 21:19:06,801 : INFO -> get called get_object_list() func 
2022-04-08 21:19:06,804 : INFO -> get_object_list() func return : [{'objectID': 1, 'isHighlight': False, 'accessionNumber': '1979.486.1', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 164292, 'role': 'Maker', 'name': 'James Barton Longacre', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'One-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'James Barton Longacre', 'artistDisplayBio': 'American, Delaware County, Pennsylvania 1794–1869 Philadelphia, Pennsylvania', 'artistSuffix': '', 'artistAlphaSort': 'Longacre, James Barton', 'artistNationality': 'American', 'artistBeginDate': '1794', 'artistEndDate': '1869', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'objectDate': '1853', 'objectBeginDate': 1853, 'objectEndDate': 1853, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': None, 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/1', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 2, 'isHighlight': False, 'accessionNumber': '1980.264.5', 'accessionYear': '1980', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Ten-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Christian Gobrecht', 'artistDisplayBio': '1785–1844', 'artistSuffix': '', 'artistAlphaSort': 'Gobrecht, Christian', 'artistNationality': '', 'artistBeginDate': '1785', 'artistEndDate': '1844', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'objectDate': '1901', 'objectBeginDate': 1901, 'objectEndDate': 1901, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': None, 'creditLine': 'Gift of Heinz L. Stoppelmann, 1980', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/2', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 3, 'isHighlight': False, 'accessionNumber': '67.265.9', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/3', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 4, 'isHighlight': False, 'accessionNumber': '67.265.10', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/4', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 5, 'isHighlight': False, 'accessionNumber': '67.265.11', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/5', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 6, 'isHighlight': False, 'accessionNumber': '67.265.12', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/6', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 7, 'isHighlight': False, 'accessionNumber': '67.265.13', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/7', 'tags': [{'term': 'Birds', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300266506', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q5113'}, {'term': 'Coins', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037222', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q41207'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 8, 'isHighlight': False, 'accessionNumber': '67.265.14', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/8', 'tags': [{'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}, {'term': 'Profiles', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300123319', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q4382010'}, {'term': 'Eagles', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300250049', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q2092297'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 9, 'isHighlight': False, 'accessionNumber': '67.265.15', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/9', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 10, 'isHighlight': False, 'accessionNumber': '1979.486.3', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1080, 'role': 'Maker', 'name': 'Bela Lyon Pratt', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-half-dollar Indian Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Bela Lyon Pratt', 'artistDisplayBio': '1867–1917', 'artistSuffix': '', 'artistAlphaSort': 'Pratt, Bela Lyon', 'artistNationality': '', 'artistBeginDate': '1867', 'artistEndDate': '1917', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'objectDate': '1912', 'objectBeginDate': 1912, 'objectEndDate': 1912, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/10', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 11, 'isHighlight': False, 'accessionNumber': '1979.486.2', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-half-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Christian Gobrecht', 'artistDisplayBio': '1785–1844', 'artistSuffix': '', 'artistAlphaSort': 'Gobrecht, Christian', 'artistNationality': '', 'artistBeginDate': '1785', 'artistEndDate': '1844', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'objectDate': '1907', 'objectBeginDate': 1907, 'objectEndDate': 1907, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/11', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 12, 'isHighlight': False, 'accessionNumber': '1979.486.7', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 164292, 'role': 'Maker', 'name': 'James Barton Longacre', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Twenty-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'James Barton Longacre', 'artistDisplayBio': 'American, Delaware County, Pennsylvania 1794–1869 Philadelphia, Pennsylvania', 'artistSuffix': '', 'artistAlphaSort': 'Longacre, James Barton', 'artistNationality': 'American', 'artistBeginDate': '1794', 'artistEndDate': '1869', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'objectDate': '1876', 'objectBeginDate': 1876, 'objectEndDate': 1876, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/12', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 13, 'isHighlight': False, 'accessionNumber': '1979.486.4', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1080, 'role': 'Maker', 'name': 'Bela Lyon Pratt', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Five-dollar Indian Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Bela Lyon Pratt', 'artistDisplayBio': '1867–1917', 'artistSuffix': '', 'artistAlphaSort': 'Pratt, Bela Lyon', 'artistNationality': '', 'artistBeginDate': '1867', 'artistEndDate': '1917', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'objectDate': '1910', 'objectBeginDate': 1910, 'objectEndDate': 1910, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/13', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 14, 'isHighlight': False, 'accessionNumber': '1979.486.5', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Five-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Christian Gobrecht', 'artistDisplayBio': '1785–1844', 'artistSuffix': '', 'artistAlphaSort': 'Gobrecht, Christian', 'artistNationality': '', 'artistBeginDate': '1785', 'artistEndDate': '1844', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'objectDate': '1907', 'objectBeginDate': 1907, 'objectEndDate': 1907, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/14', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 15, 'isHighlight': False, 'accessionNumber': '16.74.49', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Coin, 1/2 Real', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1665–1700', 'objectBeginDate': 1665, 'objectEndDate': 1700, 'medium': 'Silver', 'dimensions': 'Diam. 1/2 in. (1.3 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/15', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 16, 'isHighlight': False, 'accessionNumber': '16.74.27', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1800–1900', 'objectBeginDate': 1800, 'objectEndDate': 1900, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/16', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 17, 'isHighlight': False, 'accessionNumber': '16.74.28', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1867', 'objectBeginDate': 1867, 'objectEndDate': 1867, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/17', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 18, 'isHighlight': False, 'accessionNumber': '16.74.29', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860', 'objectBeginDate': 1860, 'objectEndDate': 1860, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/18', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 19, 'isHighlight': False, 'accessionNumber': '16.74.30', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1859', 'objectBeginDate': 1859, 'objectEndDate': 1859, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/19', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 20, 'isHighlight': False, 'accessionNumber': '16.74.31', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860', 'objectBeginDate': 1860, 'objectEndDate': 1860, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/20', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 21, 'isHighlight': False, 'accessionNumber': '16.74.32', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1859', 'objectBeginDate': 1859, 'objectEndDate': 1859, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/21', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 22, 'isHighlight': False, 'accessionNumber': '16.74.43', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Coin, 1/4 Real', 'culture': 'Guatemalan', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1881', 'objectBeginDate': 1881, 'objectEndDate': 1881, 'medium': 'Silver', 'dimensions': 'Diam. 1/2 in. (1.3 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Guatemala', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/22', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 23, 'isHighlight': False, 'accessionNumber': '16.74.44', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Coin, 1/4 Real', 'culture': 'Guatemalan', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1878', 'objectBeginDate': 1878, 'objectEndDate': 1878, 'medium': 'Silver', 'dimensions': 'Diam. 1/2 in. (1.3 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Guatemala', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/23', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 24, 'isHighlight': False, 'accessionNumber': '16.74.33', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/24', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 25, 'isHighlight': False, 'accessionNumber': '16.74.34', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/25', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 26, 'isHighlight': False, 'accessionNumber': '16.74.35', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/26', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 27, 'isHighlight': False, 'accessionNumber': '16.74.36', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/27', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 28, 'isHighlight': False, 'accessionNumber': '16.74.38', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/28', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 29, 'isHighlight': False, 'accessionNumber': '16.74.39', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/29', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 30, 'isHighlight': False, 'accessionNumber': '16.74.37', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1885', 'objectBeginDate': 1885, 'objectEndDate': 1885, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/30', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 31, 'isHighlight': False, 'accessionNumber': '16.74.40', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1885', 'objectBeginDate': 1885, 'objectEndDate': 1885, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/31', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 32, 'isHighlight': False, 'accessionNumber': '09.9.15', 'accessionYear': '1909', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Pesos', 'title': 'Coin, 20 Pesos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1866', 'objectBeginDate': 1866, 'objectEndDate': 1866, 'medium': 'Gold', 'dimensions': 'Diam. 2 1/8 in. (5.4 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 5.3975}}], 'creditLine': 'Gift of H. R. Ickelheimer, 1909', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/32', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 33, 'isHighlight': False, 'accessionNumber': '64.62', 'accessionYear': '1964', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 164590, 'role': 'Maker', 'name': 'James Gillinder and Sons', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500524407', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q99264077', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Bust', 'title': 'Bust of Abraham Lincoln', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'James Gillinder and Sons', 'artistDisplayBio': 'American, 1861–ca. 1930', 'artistSuffix': '', 'artistAlphaSort': 'Gillinder and Sons, James', 'artistNationality': 'American', 'artistBeginDate': '1861', 'artistEndDate': '1930', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q99264077', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500524407', 'objectDate': '1876', 'objectBeginDate': 1876, 'objectEndDate': 1876, 'medium': 'Pressed glass', 'dimensions': '2 3/4 x 3 1/2 x 2 3/4 in. (7 x 8.9 x 7 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 7, 'Height': 7, 'Width': 8.9}}], 'creditLine': 'Gift of Teunis G. B. Cortelyou, 1964', 'geographyType': 'Made in', 'city': 'Philadelphia', 'state': 'Pennsylvania', 'county': '', 'country': 'United States', 'region': 'Mid-Atlantic', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2022-02-09T04:42:08.947Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/33', 'tags': [{'term': 'Abraham Lincoln', 'AAT_URL': 'http://vocab.getty.edu/page/ulan/500344436', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q91'}, {'term': 'Portraits', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300015637', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q134307'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}, {'objectID': 34, 'isHighlight': False, 'accessionNumber': '1970.289.6', 'accessionYear': '1970', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/204788.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/204788.jpg', 'additionalImages': [], 'constituents': [{'constituentID': 1082, 'role': 'Maker', 'name': 'Forestville Manufacturing Company', 'constituentULAN_URL': '', 'constituentWikidata_URL': '', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Clock', 'title': 'Acorn Clock', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Forestville Manufacturing Company', 'artistDisplayBio': '1835–1853', 'artistSuffix': '', 'artistAlphaSort': 'Forestville Manufacturing Company', 'artistNationality': '', 'artistBeginDate': '1835', 'artistEndDate': '1853', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1847–50', 'objectBeginDate': 1847, 'objectEndDate': 1850, 'medium': 'Mahogany, laminated', 'dimensions': '24 3/8 x 14 5/8 x 5 1/8 in. (61.9 x 37.1 x 13 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 13.0175, 'Height': 61.9, 'Width': 37.1}}], 'creditLine': 'Gift of Mrs. Paul Moore, 1970', 'geographyType': 'Made in', 'city': 'Bristol', 'state': 'Connecticut', 'county': '', 'country': 'United States', 'region': 'New England', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-06-30T04:39:57.037Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/34', 'tags': [{'term': 'Boats', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300178749', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q35872'}, {'term': 'Landscapes', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300132294', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q191163'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}, {'objectID': 35, 'isHighlight': True, 'accessionNumber': '04.1a–c', 'accessionYear': '1904', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1083, 'role': 'Designer', 'name': 'Designed by Paulding Farnham', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500336597', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q13476260', 'gender': ''}, {'constituentID': 162539, 'role': 'Manufacturer', 'name': 'Manufactured by Tiffany &amp; Co.', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500330306', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q1066858', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Vase', 'title': 'The Adams Vase', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Designer', 'artistPrefix': 'Designed by', 'artistDisplayName': 'Paulding Farnham', 'artistDisplayBio': '1859–1927', 'artistSuffix': '', 'artistAlphaSort': 'Farnham, Paulding', 'artistNationality': '', 'artistBeginDate': '1859', 'artistEndDate': '1927', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q13476260', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500336597', 'objectDate': '1893–95', 'objectBeginDate': 1893, 'objectEndDate': 1895, 'medium': 'Gold, amethysts, spessartites, tourmalines, fresh water pearls, quartzes, rock crystal, and enamel', 'dimensions': 'Overall: 19 7/16 x 13 x 9 1/4 in. (49.4 x 33 x 23.5 cm); 352 oz. 18 dwt. (10977 g)\r\nBody: H. 18 7/8 in. (47.9 cm)\r\nCover: 4 1/4 x 4 13/16 in. (10.8 x 12.2 cm); 19 oz. 6 dwt. (600.1 g)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 23.495, 'Height': 49.3713, 'Weight': 10.977, 'Width': 33}}, {'elementName': 'Other', 'elementDescription': 'Cover', 'elementMeasurements': {'Diameter': 12.2238, 'Height': 10.795, 'Weight': 0.6001}}, {'elementName': 'Other', 'elementDescription': 'Body', 'elementMeasurements': {'Height': 47.9426}}], 'creditLine': 'Gift of Edward D. Adams, 1904', 'geographyType': 'Made in', 'city': 'New York', 'state': 'New York', 'county': '', 'country': 'United States', 'region': 'Mid-Atlantic', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/35', 'tags': [{'term': 'Birds', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300266506', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q5113'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}, {'term': 'Animals', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300249525', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q729'}, {'term': 'Garlands', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300167386', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q756600'}], 'objectWikidata_URL': 'https://www.wikidata.org/wiki/Q83545838', 'isTimelineWork': True, 'GalleryNumber': '706'}, {'objectID': 36, 'isHighlight': False, 'accessionNumber': '1976.319', 'accessionYear': '1976', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1085, 'role': 'Maker', 'name': 'Conrad Henninger', 'constituentULAN_URL': '', 'constituentWikidata_URL': '', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Side Chair', 'title': 'Side Chair', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Conrad Henninger', 'artistDisplayBio': 'active ca. 1888–1932', 'artistSuffix': '', 'artistAlphaSort': 'Henninger, Conrad', 'artistNationality': '', 'artistBeginDate': '1885', 'artistEndDate': '1932', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': 'ca. 1887', 'objectBeginDate': 1884, 'objectEndDate': 1887, 'medium': 'Oak, tulip poplar', 'dimensions': '40 x 25 1/2 x 34 1/2 in. (101.6 x 64.8 x 87.6 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 87.6302, 'Height': 101.6, 'Width': 64.8}}], 'creditLine': 'Gift of Charlotte Pickman-Gertz, 1976', 'geographyType': 'Made in', 'city': 'Lebanon', 'state': 'Pennsylvania', 'county': '', 'country': 'United States', 'region': 'Mid-Atlantic', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/36', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}, {'objectID': 37, 'isHighlight': False, 'accessionNumber': '38.165.51', 'accessionYear': '1938', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/DP247752.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/DP247752.jpg', 'additionalImages': ['https://images.metmuseum.org/CRDImages/ad/original/DP247756.jpg', 'https://images.metmuseum.org/CRDImages/ad/original/117430.jpg'], 'constituents': [{'constituentID': 164285, 'role': 'Maker', 'name': 'Pierre Stephan', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'constituentWikidata_URL': '', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Figure', 'title': 'Figure of Admiral George Rodney', 'culture': 'British (American market)', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Pierre Stephan', 'artistDisplayBio': 'French, active ca. 1770–95', 'artistSuffix': '', 'artistAlphaSort': 'Stephan, Pierre', 'artistNationality': 'French', 'artistBeginDate': '1765', 'artistEndDate': '1795', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'objectDate': 'ca. 1785', 'objectBeginDate': 1782, 'objectEndDate': 1785, 'medium': 'Earthenware, basalt', 'dimensions': 'H. 12 in. (30.5 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 30.5}}], 'creditLine': 'Harris Brisbane Dick Fund, 1938', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': 'Staffordshire', 'country': 'England', 'region': 'West Midlands', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/37', 'tags': [{'term': 'Cannons', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300036936', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q81103'}, {'term': 'Swords', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037048', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q12791'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}, {'objectID': 38, 'isHighlight': False, 'accessionNumber': '38.165.50', 'accessionYear': '1938', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/DP247753.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/DP247753.jpg', 'additionalImages': ['https://images.metmuseum.org/CRDImages/ad/original/DP247755.jpg'], 'constituents': [{'constituentID': 164285, 'role': 'Maker', 'name': 'Pierre Stephan', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'constituentWikidata_URL': '', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Figure', 'title': 'Figure of Admiral Samuel Hood', 'culture': 'British (American market)', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Pierre Stephan', 'artistDisplayBio': 'French, active ca. 1770–95', 'artistSuffix': '', 'artistAlphaSort': 'Stephan, Pierre', 'artistNationality': 'French', 'artistBeginDate': '1765', 'artistEndDate': '1795', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'objectDate': 'ca. 1785', 'objectBeginDate': 1782, 'objectEndDate': 1785, 'medium': 'Earthenware, basalt', 'dimensions': 'H. 12 3/8 in. (31.4 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 31.4}}], 'creditLine': 'Harris Brisbane Dick Fund, 1938', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': 'Staffordshire', 'country': 'England', 'region': 'West Midlands', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/38', 'tags': [{'term': 'Cannons', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300036936', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q81103'}, {'term': 'Swords', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037048', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q12791'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}, {'term': 'Admirals', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300236014', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q132851'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}, {'objectID': 39, 'isHighlight': False, 'accessionNumber': '18.11.10', 'accessionYear': '1918', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/37808.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/37808.jpg', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Advertisement', 'title': 'Advertisement for Norwich Stone Ware Factory', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1770–1800', 'objectBeginDate': 1770, 'objectEndDate': 1800, 'medium': 'Paper', 'dimensions': '11 x 9 in. (27.9 x 22.9 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 27.9, 'Width': 22.86}}], 'creditLine': 'Rogers Fund, 1918', 'geographyType': 'Made in', 'city': 'Norwich', 'state': 'Connecticut', 'county': '', 'country': 'United States', 'region': 'New England', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/39', 'tags': [{'term': 'Advertisements', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300193993', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q39911916'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 40, 'isHighlight': False, 'accessionNumber': '46.140.143', 'accessionYear': '1946', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/174118.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/174118.jpg', 'additionalImages': [], 'constituents': [{'constituentID': 1087, 'role': 'Maker', 'name': 'New England Glass Company', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500356007', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q17083157', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Ale glass', 'title': 'Ale Glass', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'New England Glass Company', 'artistDisplayBio': 'American, East Cambridge, Massachusetts, 1818–1888', 'artistSuffix': '', 'artistAlphaSort': 'New England Glass Company', 'artistNationality': '', 'artistBeginDate': '1818', 'artistEndDate': '1888', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q17083157', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500356007', 'objectDate': '1830–70', 'objectBeginDate': 1830, 'objectEndDate': 1870, 'medium': 'Pressed glass', 'dimensions': 'H. 6 9/16 in. (16.7 cm); Diam. 3 in. (7.6 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': None, 'elementMeasurements': {'Diameter': 7.62, 'Height': 16.6688}}], 'creditLine': 'Gift of Mrs. Emily Winthrop Miles, 1946', 'geographyType': 'Made in', 'city': 'East Cambridge', 'state': 'Massachusetts', 'county': '', 'country': 'United States', 'region': 'New England', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2022-02-09T04:42:08.947Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/40', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}]
2022-04-08 21:19:06,807 : INFO -> Inside dicttoxml(): type(obj) is: "list", obj="[{'objectID': 1, 'isHighlight': False, 'accessionNumber': '1979.486.1', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 164292, 'role': 'Maker', 'name': 'James Barton Longacre', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'One-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'James Barton Longacre', 'artistDisplayBio': 'American, Delaware County, Pennsylvania 1794–1869 Philadelphia, Pennsylvania', 'artistSuffix': '', 'artistAlphaSort': 'Longacre, James Barton', 'artistNationality': 'American', 'artistBeginDate': '1794', 'artistEndDate': '1869', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'objectDate': '1853', 'objectBeginDate': 1853, 'objectEndDate': 1853, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': None, 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/1', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 2, 'isHighlight': False, 'accessionNumber': '1980.264.5', 'accessionYear': '1980', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Ten-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Christian Gobrecht', 'artistDisplayBio': '1785–1844', 'artistSuffix': '', 'artistAlphaSort': 'Gobrecht, Christian', 'artistNationality': '', 'artistBeginDate': '1785', 'artistEndDate': '1844', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'objectDate': '1901', 'objectBeginDate': 1901, 'objectEndDate': 1901, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': None, 'creditLine': 'Gift of Heinz L. Stoppelmann, 1980', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/2', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 3, 'isHighlight': False, 'accessionNumber': '67.265.9', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/3', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 4, 'isHighlight': False, 'accessionNumber': '67.265.10', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/4', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 5, 'isHighlight': False, 'accessionNumber': '67.265.11', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/5', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 6, 'isHighlight': False, 'accessionNumber': '67.265.12', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/6', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 7, 'isHighlight': False, 'accessionNumber': '67.265.13', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/7', 'tags': [{'term': 'Birds', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300266506', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q5113'}, {'term': 'Coins', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037222', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q41207'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 8, 'isHighlight': False, 'accessionNumber': '67.265.14', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/8', 'tags': [{'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}, {'term': 'Profiles', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300123319', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q4382010'}, {'term': 'Eagles', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300250049', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q2092297'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 9, 'isHighlight': False, 'accessionNumber': '67.265.15', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/9', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 10, 'isHighlight': False, 'accessionNumber': '1979.486.3', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1080, 'role': 'Maker', 'name': 'Bela Lyon Pratt', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-half-dollar Indian Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Bela Lyon Pratt', 'artistDisplayBio': '1867–1917', 'artistSuffix': '', 'artistAlphaSort': 'Pratt, Bela Lyon', 'artistNationality': '', 'artistBeginDate': '1867', 'artistEndDate': '1917', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'objectDate': '1912', 'objectBeginDate': 1912, 'objectEndDate': 1912, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/10', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 11, 'isHighlight': False, 'accessionNumber': '1979.486.2', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-half-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Christian Gobrecht', 'artistDisplayBio': '1785–1844', 'artistSuffix': '', 'artistAlphaSort': 'Gobrecht, Christian', 'artistNationality': '', 'artistBeginDate': '1785', 'artistEndDate': '1844', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'objectDate': '1907', 'objectBeginDate': 1907, 'objectEndDate': 1907, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/11', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 12, 'isHighlight': False, 'accessionNumber': '1979.486.7', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 164292, 'role': 'Maker', 'name': 'James Barton Longacre', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Twenty-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'James Barton Longacre', 'artistDisplayBio': 'American, Delaware County, Pennsylvania 1794–1869 Philadelphia, Pennsylvania', 'artistSuffix': '', 'artistAlphaSort': 'Longacre, James Barton', 'artistNationality': 'American', 'artistBeginDate': '1794', 'artistEndDate': '1869', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'objectDate': '1876', 'objectBeginDate': 1876, 'objectEndDate': 1876, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/12', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 13, 'isHighlight': False, 'accessionNumber': '1979.486.4', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1080, 'role': 'Maker', 'name': 'Bela Lyon Pratt', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Five-dollar Indian Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Bela Lyon Pratt', 'artistDisplayBio': '1867–1917', 'artistSuffix': '', 'artistAlphaSort': 'Pratt, Bela Lyon', 'artistNationality': '', 'artistBeginDate': '1867', 'artistEndDate': '1917', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'objectDate': '1910', 'objectBeginDate': 1910, 'objectEndDate': 1910, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/13', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 14, 'isHighlight': False, 'accessionNumber': '1979.486.5', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Five-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Christian Gobrecht', 'artistDisplayBio': '1785–1844', 'artistSuffix': '', 'artistAlphaSort': 'Gobrecht, Christian', 'artistNationality': '', 'artistBeginDate': '1785', 'artistEndDate': '1844', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'objectDate': '1907', 'objectBeginDate': 1907, 'objectEndDate': 1907, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/14', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 15, 'isHighlight': False, 'accessionNumber': '16.74.49', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Coin, 1/2 Real', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1665–1700', 'objectBeginDate': 1665, 'objectEndDate': 1700, 'medium': 'Silver', 'dimensions': 'Diam. 1/2 in. (1.3 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/15', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 16, 'isHighlight': False, 'accessionNumber': '16.74.27', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1800–1900', 'objectBeginDate': 1800, 'objectEndDate': 1900, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/16', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 17, 'isHighlight': False, 'accessionNumber': '16.74.28', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1867', 'objectBeginDate': 1867, 'objectEndDate': 1867, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/17', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 18, 'isHighlight': False, 'accessionNumber': '16.74.29', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860', 'objectBeginDate': 1860, 'objectEndDate': 1860, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/18', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 19, 'isHighlight': False, 'accessionNumber': '16.74.30', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1859', 'objectBeginDate': 1859, 'objectEndDate': 1859, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/19', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 20, 'isHighlight': False, 'accessionNumber': '16.74.31', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860', 'objectBeginDate': 1860, 'objectEndDate': 1860, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/20', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 21, 'isHighlight': False, 'accessionNumber': '16.74.32', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1859', 'objectBeginDate': 1859, 'objectEndDate': 1859, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/21', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 22, 'isHighlight': False, 'accessionNumber': '16.74.43', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Coin, 1/4 Real', 'culture': 'Guatemalan', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1881', 'objectBeginDate': 1881, 'objectEndDate': 1881, 'medium': 'Silver', 'dimensions': 'Diam. 1/2 in. (1.3 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Guatemala', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/22', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 23, 'isHighlight': False, 'accessionNumber': '16.74.44', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Coin, 1/4 Real', 'culture': 'Guatemalan', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1878', 'objectBeginDate': 1878, 'objectEndDate': 1878, 'medium': 'Silver', 'dimensions': 'Diam. 1/2 in. (1.3 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Guatemala', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/23', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 24, 'isHighlight': False, 'accessionNumber': '16.74.33', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/24', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 25, 'isHighlight': False, 'accessionNumber': '16.74.34', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/25', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 26, 'isHighlight': False, 'accessionNumber': '16.74.35', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/26', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 27, 'isHighlight': False, 'accessionNumber': '16.74.36', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/27', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 28, 'isHighlight': False, 'accessionNumber': '16.74.38', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/28', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 29, 'isHighlight': False, 'accessionNumber': '16.74.39', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/29', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 30, 'isHighlight': False, 'accessionNumber': '16.74.37', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1885', 'objectBeginDate': 1885, 'objectEndDate': 1885, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/30', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 31, 'isHighlight': False, 'accessionNumber': '16.74.40', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1885', 'objectBeginDate': 1885, 'objectEndDate': 1885, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/31', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 32, 'isHighlight': False, 'accessionNumber': '09.9.15', 'accessionYear': '1909', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Pesos', 'title': 'Coin, 20 Pesos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1866', 'objectBeginDate': 1866, 'objectEndDate': 1866, 'medium': 'Gold', 'dimensions': 'Diam. 2 1/8 in. (5.4 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 5.3975}}], 'creditLine': 'Gift of H. R. Ickelheimer, 1909', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/32', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 33, 'isHighlight': False, 'accessionNumber': '64.62', 'accessionYear': '1964', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 164590, 'role': 'Maker', 'name': 'James Gillinder and Sons', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500524407', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q99264077', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Bust', 'title': 'Bust of Abraham Lincoln', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'James Gillinder and Sons', 'artistDisplayBio': 'American, 1861–ca. 1930', 'artistSuffix': '', 'artistAlphaSort': 'Gillinder and Sons, James', 'artistNationality': 'American', 'artistBeginDate': '1861', 'artistEndDate': '1930', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q99264077', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500524407', 'objectDate': '1876', 'objectBeginDate': 1876, 'objectEndDate': 1876, 'medium': 'Pressed glass', 'dimensions': '2 3/4 x 3 1/2 x 2 3/4 in. (7 x 8.9 x 7 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 7, 'Height': 7, 'Width': 8.9}}], 'creditLine': 'Gift of Teunis G. B. Cortelyou, 1964', 'geographyType': 'Made in', 'city': 'Philadelphia', 'state': 'Pennsylvania', 'county': '', 'country': 'United States', 'region': 'Mid-Atlantic', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2022-02-09T04:42:08.947Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/33', 'tags': [{'term': 'Abraham Lincoln', 'AAT_URL': 'http://vocab.getty.edu/page/ulan/500344436', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q91'}, {'term': 'Portraits', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300015637', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q134307'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}, {'objectID': 34, 'isHighlight': False, 'accessionNumber': '1970.289.6', 'accessionYear': '1970', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/204788.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/204788.jpg', 'additionalImages': [], 'constituents': [{'constituentID': 1082, 'role': 'Maker', 'name': 'Forestville Manufacturing Company', 'constituentULAN_URL': '', 'constituentWikidata_URL': '', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Clock', 'title': 'Acorn Clock', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Forestville Manufacturing Company', 'artistDisplayBio': '1835–1853', 'artistSuffix': '', 'artistAlphaSort': 'Forestville Manufacturing Company', 'artistNationality': '', 'artistBeginDate': '1835', 'artistEndDate': '1853', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1847–50', 'objectBeginDate': 1847, 'objectEndDate': 1850, 'medium': 'Mahogany, laminated', 'dimensions': '24 3/8 x 14 5/8 x 5 1/8 in. (61.9 x 37.1 x 13 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 13.0175, 'Height': 61.9, 'Width': 37.1}}], 'creditLine': 'Gift of Mrs. Paul Moore, 1970', 'geographyType': 'Made in', 'city': 'Bristol', 'state': 'Connecticut', 'county': '', 'country': 'United States', 'region': 'New England', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-06-30T04:39:57.037Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/34', 'tags': [{'term': 'Boats', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300178749', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q35872'}, {'term': 'Landscapes', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300132294', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q191163'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}, {'objectID': 35, 'isHighlight': True, 'accessionNumber': '04.1a–c', 'accessionYear': '1904', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1083, 'role': 'Designer', 'name': 'Designed by Paulding Farnham', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500336597', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q13476260', 'gender': ''}, {'constituentID': 162539, 'role': 'Manufacturer', 'name': 'Manufactured by Tiffany &amp; Co.', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500330306', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q1066858', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Vase', 'title': 'The Adams Vase', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Designer', 'artistPrefix': 'Designed by', 'artistDisplayName': 'Paulding Farnham', 'artistDisplayBio': '1859–1927', 'artistSuffix': '', 'artistAlphaSort': 'Farnham, Paulding', 'artistNationality': '', 'artistBeginDate': '1859', 'artistEndDate': '1927', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q13476260', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500336597', 'objectDate': '1893–95', 'objectBeginDate': 1893, 'objectEndDate': 1895, 'medium': 'Gold, amethysts, spessartites, tourmalines, fresh water pearls, quartzes, rock crystal, and enamel', 'dimensions': 'Overall: 19 7/16 x 13 x 9 1/4 in. (49.4 x 33 x 23.5 cm); 352 oz. 18 dwt. (10977 g)\r\nBody: H. 18 7/8 in. (47.9 cm)\r\nCover: 4 1/4 x 4 13/16 in. (10.8 x 12.2 cm); 19 oz. 6 dwt. (600.1 g)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 23.495, 'Height': 49.3713, 'Weight': 10.977, 'Width': 33}}, {'elementName': 'Other', 'elementDescription': 'Cover', 'elementMeasurements': {'Diameter': 12.2238, 'Height': 10.795, 'Weight': 0.6001}}, {'elementName': 'Other', 'elementDescription': 'Body', 'elementMeasurements': {'Height': 47.9426}}], 'creditLine': 'Gift of Edward D. Adams, 1904', 'geographyType': 'Made in', 'city': 'New York', 'state': 'New York', 'county': '', 'country': 'United States', 'region': 'Mid-Atlantic', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/35', 'tags': [{'term': 'Birds', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300266506', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q5113'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}, {'term': 'Animals', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300249525', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q729'}, {'term': 'Garlands', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300167386', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q756600'}], 'objectWikidata_URL': 'https://www.wikidata.org/wiki/Q83545838', 'isTimelineWork': True, 'GalleryNumber': '706'}, {'objectID': 36, 'isHighlight': False, 'accessionNumber': '1976.319', 'accessionYear': '1976', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1085, 'role': 'Maker', 'name': 'Conrad Henninger', 'constituentULAN_URL': '', 'constituentWikidata_URL': '', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Side Chair', 'title': 'Side Chair', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Conrad Henninger', 'artistDisplayBio': 'active ca. 1888–1932', 'artistSuffix': '', 'artistAlphaSort': 'Henninger, Conrad', 'artistNationality': '', 'artistBeginDate': '1885', 'artistEndDate': '1932', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': 'ca. 1887', 'objectBeginDate': 1884, 'objectEndDate': 1887, 'medium': 'Oak, tulip poplar', 'dimensions': '40 x 25 1/2 x 34 1/2 in. (101.6 x 64.8 x 87.6 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 87.6302, 'Height': 101.6, 'Width': 64.8}}], 'creditLine': 'Gift of Charlotte Pickman-Gertz, 1976', 'geographyType': 'Made in', 'city': 'Lebanon', 'state': 'Pennsylvania', 'county': '', 'country': 'United States', 'region': 'Mid-Atlantic', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/36', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}, {'objectID': 37, 'isHighlight': False, 'accessionNumber': '38.165.51', 'accessionYear': '1938', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/DP247752.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/DP247752.jpg', 'additionalImages': ['https://images.metmuseum.org/CRDImages/ad/original/DP247756.jpg', 'https://images.metmuseum.org/CRDImages/ad/original/117430.jpg'], 'constituents': [{'constituentID': 164285, 'role': 'Maker', 'name': 'Pierre Stephan', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'constituentWikidata_URL': '', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Figure', 'title': 'Figure of Admiral George Rodney', 'culture': 'British (American market)', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Pierre Stephan', 'artistDisplayBio': 'French, active ca. 1770–95', 'artistSuffix': '', 'artistAlphaSort': 'Stephan, Pierre', 'artistNationality': 'French', 'artistBeginDate': '1765', 'artistEndDate': '1795', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'objectDate': 'ca. 1785', 'objectBeginDate': 1782, 'objectEndDate': 1785, 'medium': 'Earthenware, basalt', 'dimensions': 'H. 12 in. (30.5 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 30.5}}], 'creditLine': 'Harris Brisbane Dick Fund, 1938', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': 'Staffordshire', 'country': 'England', 'region': 'West Midlands', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/37', 'tags': [{'term': 'Cannons', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300036936', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q81103'}, {'term': 'Swords', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037048', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q12791'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}, {'objectID': 38, 'isHighlight': False, 'accessionNumber': '38.165.50', 'accessionYear': '1938', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/DP247753.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/DP247753.jpg', 'additionalImages': ['https://images.metmuseum.org/CRDImages/ad/original/DP247755.jpg'], 'constituents': [{'constituentID': 164285, 'role': 'Maker', 'name': 'Pierre Stephan', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'constituentWikidata_URL': '', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Figure', 'title': 'Figure of Admiral Samuel Hood', 'culture': 'British (American market)', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Pierre Stephan', 'artistDisplayBio': 'French, active ca. 1770–95', 'artistSuffix': '', 'artistAlphaSort': 'Stephan, Pierre', 'artistNationality': 'French', 'artistBeginDate': '1765', 'artistEndDate': '1795', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'objectDate': 'ca. 1785', 'objectBeginDate': 1782, 'objectEndDate': 1785, 'medium': 'Earthenware, basalt', 'dimensions': 'H. 12 3/8 in. (31.4 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 31.4}}], 'creditLine': 'Harris Brisbane Dick Fund, 1938', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': 'Staffordshire', 'country': 'England', 'region': 'West Midlands', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/38', 'tags': [{'term': 'Cannons', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300036936', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q81103'}, {'term': 'Swords', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037048', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q12791'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}, {'term': 'Admirals', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300236014', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q132851'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}, {'objectID': 39, 'isHighlight': False, 'accessionNumber': '18.11.10', 'accessionYear': '1918', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/37808.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/37808.jpg', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Advertisement', 'title': 'Advertisement for Norwich Stone Ware Factory', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1770–1800', 'objectBeginDate': 1770, 'objectEndDate': 1800, 'medium': 'Paper', 'dimensions': '11 x 9 in. (27.9 x 22.9 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 27.9, 'Width': 22.86}}], 'creditLine': 'Rogers Fund, 1918', 'geographyType': 'Made in', 'city': 'Norwich', 'state': 'Connecticut', 'county': '', 'country': 'United States', 'region': 'New England', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/39', 'tags': [{'term': 'Advertisements', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300193993', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q39911916'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 40, 'isHighlight': False, 'accessionNumber': '46.140.143', 'accessionYear': '1946', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/174118.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/174118.jpg', 'additionalImages': [], 'constituents': [{'constituentID': 1087, 'role': 'Maker', 'name': 'New England Glass Company', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500356007', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q17083157', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Ale glass', 'title': 'Ale Glass', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'New England Glass Company', 'artistDisplayBio': 'American, East Cambridge, Massachusetts, 1818–1888', 'artistSuffix': '', 'artistAlphaSort': 'New England Glass Company', 'artistNationality': '', 'artistBeginDate': '1818', 'artistEndDate': '1888', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q17083157', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500356007', 'objectDate': '1830–70', 'objectBeginDate': 1830, 'objectEndDate': 1870, 'medium': 'Pressed glass', 'dimensions': 'H. 6 9/16 in. (16.7 cm); Diam. 3 in. (7.6 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': None, 'elementMeasurements': {'Diameter': 7.62, 'Height': 16.6688}}], 'creditLine': 'Gift of Mrs. Emily Winthrop Miles, 1946', 'geographyType': 'Made in', 'city': 'East Cambridge', 'state': 'Massachusetts', 'county': '', 'country': 'United States', 'region': 'New England', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2022-02-09T04:42:08.947Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/40', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}]"
2022-04-08 21:19:06,809 : INFO -> Inside convert(). obj type is: "list", obj="[{'objectID': 1, 'isHighlight': False, 'accessionNumber': '1979.486.1', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 164292, 'role': 'Maker', 'name': 'James Barton Longacre', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'One-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'James Barton Longacre', 'artistDisplayBio': 'American, Delaware County, Pennsylvania 1794–1869 Philadelphia, Pennsylvania', 'artistSuffix': '', 'artistAlphaSort': 'Longacre, James Barton', 'artistNationality': 'American', 'artistBeginDate': '1794', 'artistEndDate': '1869', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'objectDate': '1853', 'objectBeginDate': 1853, 'objectEndDate': 1853, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': None, 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/1', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 2, 'isHighlight': False, 'accessionNumber': '1980.264.5', 'accessionYear': '1980', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Ten-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Christian Gobrecht', 'artistDisplayBio': '1785–1844', 'artistSuffix': '', 'artistAlphaSort': 'Gobrecht, Christian', 'artistNationality': '', 'artistBeginDate': '1785', 'artistEndDate': '1844', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'objectDate': '1901', 'objectBeginDate': 1901, 'objectEndDate': 1901, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': None, 'creditLine': 'Gift of Heinz L. Stoppelmann, 1980', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/2', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 3, 'isHighlight': False, 'accessionNumber': '67.265.9', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/3', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 4, 'isHighlight': False, 'accessionNumber': '67.265.10', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/4', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 5, 'isHighlight': False, 'accessionNumber': '67.265.11', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/5', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 6, 'isHighlight': False, 'accessionNumber': '67.265.12', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/6', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 7, 'isHighlight': False, 'accessionNumber': '67.265.13', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/7', 'tags': [{'term': 'Birds', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300266506', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q5113'}, {'term': 'Coins', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037222', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q41207'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 8, 'isHighlight': False, 'accessionNumber': '67.265.14', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/8', 'tags': [{'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}, {'term': 'Profiles', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300123319', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q4382010'}, {'term': 'Eagles', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300250049', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q2092297'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 9, 'isHighlight': False, 'accessionNumber': '67.265.15', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/9', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 10, 'isHighlight': False, 'accessionNumber': '1979.486.3', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1080, 'role': 'Maker', 'name': 'Bela Lyon Pratt', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-half-dollar Indian Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Bela Lyon Pratt', 'artistDisplayBio': '1867–1917', 'artistSuffix': '', 'artistAlphaSort': 'Pratt, Bela Lyon', 'artistNationality': '', 'artistBeginDate': '1867', 'artistEndDate': '1917', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'objectDate': '1912', 'objectBeginDate': 1912, 'objectEndDate': 1912, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/10', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 11, 'isHighlight': False, 'accessionNumber': '1979.486.2', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-half-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Christian Gobrecht', 'artistDisplayBio': '1785–1844', 'artistSuffix': '', 'artistAlphaSort': 'Gobrecht, Christian', 'artistNationality': '', 'artistBeginDate': '1785', 'artistEndDate': '1844', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'objectDate': '1907', 'objectBeginDate': 1907, 'objectEndDate': 1907, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/11', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 12, 'isHighlight': False, 'accessionNumber': '1979.486.7', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 164292, 'role': 'Maker', 'name': 'James Barton Longacre', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Twenty-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'James Barton Longacre', 'artistDisplayBio': 'American, Delaware County, Pennsylvania 1794–1869 Philadelphia, Pennsylvania', 'artistSuffix': '', 'artistAlphaSort': 'Longacre, James Barton', 'artistNationality': 'American', 'artistBeginDate': '1794', 'artistEndDate': '1869', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'objectDate': '1876', 'objectBeginDate': 1876, 'objectEndDate': 1876, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/12', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 13, 'isHighlight': False, 'accessionNumber': '1979.486.4', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1080, 'role': 'Maker', 'name': 'Bela Lyon Pratt', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Five-dollar Indian Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Bela Lyon Pratt', 'artistDisplayBio': '1867–1917', 'artistSuffix': '', 'artistAlphaSort': 'Pratt, Bela Lyon', 'artistNationality': '', 'artistBeginDate': '1867', 'artistEndDate': '1917', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'objectDate': '1910', 'objectBeginDate': 1910, 'objectEndDate': 1910, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/13', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 14, 'isHighlight': False, 'accessionNumber': '1979.486.5', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Five-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Christian Gobrecht', 'artistDisplayBio': '1785–1844', 'artistSuffix': '', 'artistAlphaSort': 'Gobrecht, Christian', 'artistNationality': '', 'artistBeginDate': '1785', 'artistEndDate': '1844', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'objectDate': '1907', 'objectBeginDate': 1907, 'objectEndDate': 1907, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/14', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 15, 'isHighlight': False, 'accessionNumber': '16.74.49', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Coin, 1/2 Real', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1665–1700', 'objectBeginDate': 1665, 'objectEndDate': 1700, 'medium': 'Silver', 'dimensions': 'Diam. 1/2 in. (1.3 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/15', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 16, 'isHighlight': False, 'accessionNumber': '16.74.27', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1800–1900', 'objectBeginDate': 1800, 'objectEndDate': 1900, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/16', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 17, 'isHighlight': False, 'accessionNumber': '16.74.28', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1867', 'objectBeginDate': 1867, 'objectEndDate': 1867, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/17', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 18, 'isHighlight': False, 'accessionNumber': '16.74.29', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860', 'objectBeginDate': 1860, 'objectEndDate': 1860, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/18', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 19, 'isHighlight': False, 'accessionNumber': '16.74.30', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1859', 'objectBeginDate': 1859, 'objectEndDate': 1859, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/19', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 20, 'isHighlight': False, 'accessionNumber': '16.74.31', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860', 'objectBeginDate': 1860, 'objectEndDate': 1860, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/20', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 21, 'isHighlight': False, 'accessionNumber': '16.74.32', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1859', 'objectBeginDate': 1859, 'objectEndDate': 1859, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/21', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 22, 'isHighlight': False, 'accessionNumber': '16.74.43', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Coin, 1/4 Real', 'culture': 'Guatemalan', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1881', 'objectBeginDate': 1881, 'objectEndDate': 1881, 'medium': 'Silver', 'dimensions': 'Diam. 1/2 in. (1.3 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Guatemala', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/22', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 23, 'isHighlight': False, 'accessionNumber': '16.74.44', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Coin, 1/4 Real', 'culture': 'Guatemalan', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1878', 'objectBeginDate': 1878, 'objectEndDate': 1878, 'medium': 'Silver', 'dimensions': 'Diam. 1/2 in. (1.3 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Guatemala', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/23', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 24, 'isHighlight': False, 'accessionNumber': '16.74.33', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/24', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 25, 'isHighlight': False, 'accessionNumber': '16.74.34', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/25', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 26, 'isHighlight': False, 'accessionNumber': '16.74.35', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/26', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 27, 'isHighlight': False, 'accessionNumber': '16.74.36', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/27', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 28, 'isHighlight': False, 'accessionNumber': '16.74.38', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/28', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 29, 'isHighlight': False, 'accessionNumber': '16.74.39', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/29', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 30, 'isHighlight': False, 'accessionNumber': '16.74.37', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1885', 'objectBeginDate': 1885, 'objectEndDate': 1885, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/30', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 31, 'isHighlight': False, 'accessionNumber': '16.74.40', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1885', 'objectBeginDate': 1885, 'objectEndDate': 1885, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/31', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 32, 'isHighlight': False, 'accessionNumber': '09.9.15', 'accessionYear': '1909', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Pesos', 'title': 'Coin, 20 Pesos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1866', 'objectBeginDate': 1866, 'objectEndDate': 1866, 'medium': 'Gold', 'dimensions': 'Diam. 2 1/8 in. (5.4 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 5.3975}}], 'creditLine': 'Gift of H. R. Ickelheimer, 1909', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/32', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 33, 'isHighlight': False, 'accessionNumber': '64.62', 'accessionYear': '1964', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 164590, 'role': 'Maker', 'name': 'James Gillinder and Sons', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500524407', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q99264077', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Bust', 'title': 'Bust of Abraham Lincoln', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'James Gillinder and Sons', 'artistDisplayBio': 'American, 1861–ca. 1930', 'artistSuffix': '', 'artistAlphaSort': 'Gillinder and Sons, James', 'artistNationality': 'American', 'artistBeginDate': '1861', 'artistEndDate': '1930', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q99264077', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500524407', 'objectDate': '1876', 'objectBeginDate': 1876, 'objectEndDate': 1876, 'medium': 'Pressed glass', 'dimensions': '2 3/4 x 3 1/2 x 2 3/4 in. (7 x 8.9 x 7 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 7, 'Height': 7, 'Width': 8.9}}], 'creditLine': 'Gift of Teunis G. B. Cortelyou, 1964', 'geographyType': 'Made in', 'city': 'Philadelphia', 'state': 'Pennsylvania', 'county': '', 'country': 'United States', 'region': 'Mid-Atlantic', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2022-02-09T04:42:08.947Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/33', 'tags': [{'term': 'Abraham Lincoln', 'AAT_URL': 'http://vocab.getty.edu/page/ulan/500344436', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q91'}, {'term': 'Portraits', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300015637', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q134307'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}, {'objectID': 34, 'isHighlight': False, 'accessionNumber': '1970.289.6', 'accessionYear': '1970', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/204788.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/204788.jpg', 'additionalImages': [], 'constituents': [{'constituentID': 1082, 'role': 'Maker', 'name': 'Forestville Manufacturing Company', 'constituentULAN_URL': '', 'constituentWikidata_URL': '', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Clock', 'title': 'Acorn Clock', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Forestville Manufacturing Company', 'artistDisplayBio': '1835–1853', 'artistSuffix': '', 'artistAlphaSort': 'Forestville Manufacturing Company', 'artistNationality': '', 'artistBeginDate': '1835', 'artistEndDate': '1853', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1847–50', 'objectBeginDate': 1847, 'objectEndDate': 1850, 'medium': 'Mahogany, laminated', 'dimensions': '24 3/8 x 14 5/8 x 5 1/8 in. (61.9 x 37.1 x 13 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 13.0175, 'Height': 61.9, 'Width': 37.1}}], 'creditLine': 'Gift of Mrs. Paul Moore, 1970', 'geographyType': 'Made in', 'city': 'Bristol', 'state': 'Connecticut', 'county': '', 'country': 'United States', 'region': 'New England', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-06-30T04:39:57.037Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/34', 'tags': [{'term': 'Boats', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300178749', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q35872'}, {'term': 'Landscapes', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300132294', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q191163'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}, {'objectID': 35, 'isHighlight': True, 'accessionNumber': '04.1a–c', 'accessionYear': '1904', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1083, 'role': 'Designer', 'name': 'Designed by Paulding Farnham', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500336597', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q13476260', 'gender': ''}, {'constituentID': 162539, 'role': 'Manufacturer', 'name': 'Manufactured by Tiffany &amp; Co.', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500330306', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q1066858', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Vase', 'title': 'The Adams Vase', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Designer', 'artistPrefix': 'Designed by', 'artistDisplayName': 'Paulding Farnham', 'artistDisplayBio': '1859–1927', 'artistSuffix': '', 'artistAlphaSort': 'Farnham, Paulding', 'artistNationality': '', 'artistBeginDate': '1859', 'artistEndDate': '1927', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q13476260', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500336597', 'objectDate': '1893–95', 'objectBeginDate': 1893, 'objectEndDate': 1895, 'medium': 'Gold, amethysts, spessartites, tourmalines, fresh water pearls, quartzes, rock crystal, and enamel', 'dimensions': 'Overall: 19 7/16 x 13 x 9 1/4 in. (49.4 x 33 x 23.5 cm); 352 oz. 18 dwt. (10977 g)\r\nBody: H. 18 7/8 in. (47.9 cm)\r\nCover: 4 1/4 x 4 13/16 in. (10.8 x 12.2 cm); 19 oz. 6 dwt. (600.1 g)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 23.495, 'Height': 49.3713, 'Weight': 10.977, 'Width': 33}}, {'elementName': 'Other', 'elementDescription': 'Cover', 'elementMeasurements': {'Diameter': 12.2238, 'Height': 10.795, 'Weight': 0.6001}}, {'elementName': 'Other', 'elementDescription': 'Body', 'elementMeasurements': {'Height': 47.9426}}], 'creditLine': 'Gift of Edward D. Adams, 1904', 'geographyType': 'Made in', 'city': 'New York', 'state': 'New York', 'county': '', 'country': 'United States', 'region': 'Mid-Atlantic', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/35', 'tags': [{'term': 'Birds', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300266506', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q5113'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}, {'term': 'Animals', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300249525', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q729'}, {'term': 'Garlands', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300167386', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q756600'}], 'objectWikidata_URL': 'https://www.wikidata.org/wiki/Q83545838', 'isTimelineWork': True, 'GalleryNumber': '706'}, {'objectID': 36, 'isHighlight': False, 'accessionNumber': '1976.319', 'accessionYear': '1976', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1085, 'role': 'Maker', 'name': 'Conrad Henninger', 'constituentULAN_URL': '', 'constituentWikidata_URL': '', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Side Chair', 'title': 'Side Chair', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Conrad Henninger', 'artistDisplayBio': 'active ca. 1888–1932', 'artistSuffix': '', 'artistAlphaSort': 'Henninger, Conrad', 'artistNationality': '', 'artistBeginDate': '1885', 'artistEndDate': '1932', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': 'ca. 1887', 'objectBeginDate': 1884, 'objectEndDate': 1887, 'medium': 'Oak, tulip poplar', 'dimensions': '40 x 25 1/2 x 34 1/2 in. (101.6 x 64.8 x 87.6 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 87.6302, 'Height': 101.6, 'Width': 64.8}}], 'creditLine': 'Gift of Charlotte Pickman-Gertz, 1976', 'geographyType': 'Made in', 'city': 'Lebanon', 'state': 'Pennsylvania', 'county': '', 'country': 'United States', 'region': 'Mid-Atlantic', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/36', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}, {'objectID': 37, 'isHighlight': False, 'accessionNumber': '38.165.51', 'accessionYear': '1938', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/DP247752.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/DP247752.jpg', 'additionalImages': ['https://images.metmuseum.org/CRDImages/ad/original/DP247756.jpg', 'https://images.metmuseum.org/CRDImages/ad/original/117430.jpg'], 'constituents': [{'constituentID': 164285, 'role': 'Maker', 'name': 'Pierre Stephan', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'constituentWikidata_URL': '', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Figure', 'title': 'Figure of Admiral George Rodney', 'culture': 'British (American market)', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Pierre Stephan', 'artistDisplayBio': 'French, active ca. 1770–95', 'artistSuffix': '', 'artistAlphaSort': 'Stephan, Pierre', 'artistNationality': 'French', 'artistBeginDate': '1765', 'artistEndDate': '1795', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'objectDate': 'ca. 1785', 'objectBeginDate': 1782, 'objectEndDate': 1785, 'medium': 'Earthenware, basalt', 'dimensions': 'H. 12 in. (30.5 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 30.5}}], 'creditLine': 'Harris Brisbane Dick Fund, 1938', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': 'Staffordshire', 'country': 'England', 'region': 'West Midlands', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/37', 'tags': [{'term': 'Cannons', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300036936', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q81103'}, {'term': 'Swords', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037048', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q12791'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}, {'objectID': 38, 'isHighlight': False, 'accessionNumber': '38.165.50', 'accessionYear': '1938', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/DP247753.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/DP247753.jpg', 'additionalImages': ['https://images.metmuseum.org/CRDImages/ad/original/DP247755.jpg'], 'constituents': [{'constituentID': 164285, 'role': 'Maker', 'name': 'Pierre Stephan', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'constituentWikidata_URL': '', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Figure', 'title': 'Figure of Admiral Samuel Hood', 'culture': 'British (American market)', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Pierre Stephan', 'artistDisplayBio': 'French, active ca. 1770–95', 'artistSuffix': '', 'artistAlphaSort': 'Stephan, Pierre', 'artistNationality': 'French', 'artistBeginDate': '1765', 'artistEndDate': '1795', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'objectDate': 'ca. 1785', 'objectBeginDate': 1782, 'objectEndDate': 1785, 'medium': 'Earthenware, basalt', 'dimensions': 'H. 12 3/8 in. (31.4 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 31.4}}], 'creditLine': 'Harris Brisbane Dick Fund, 1938', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': 'Staffordshire', 'country': 'England', 'region': 'West Midlands', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/38', 'tags': [{'term': 'Cannons', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300036936', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q81103'}, {'term': 'Swords', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037048', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q12791'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}, {'term': 'Admirals', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300236014', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q132851'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}, {'objectID': 39, 'isHighlight': False, 'accessionNumber': '18.11.10', 'accessionYear': '1918', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/37808.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/37808.jpg', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Advertisement', 'title': 'Advertisement for Norwich Stone Ware Factory', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1770–1800', 'objectBeginDate': 1770, 'objectEndDate': 1800, 'medium': 'Paper', 'dimensions': '11 x 9 in. (27.9 x 22.9 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 27.9, 'Width': 22.86}}], 'creditLine': 'Rogers Fund, 1918', 'geographyType': 'Made in', 'city': 'Norwich', 'state': 'Connecticut', 'county': '', 'country': 'United States', 'region': 'New England', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/39', 'tags': [{'term': 'Advertisements', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300193993', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q39911916'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}, {'objectID': 40, 'isHighlight': False, 'accessionNumber': '46.140.143', 'accessionYear': '1946', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/174118.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/174118.jpg', 'additionalImages': [], 'constituents': [{'constituentID': 1087, 'role': 'Maker', 'name': 'New England Glass Company', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500356007', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q17083157', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Ale glass', 'title': 'Ale Glass', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'New England Glass Company', 'artistDisplayBio': 'American, East Cambridge, Massachusetts, 1818–1888', 'artistSuffix': '', 'artistAlphaSort': 'New England Glass Company', 'artistNationality': '', 'artistBeginDate': '1818', 'artistEndDate': '1888', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q17083157', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500356007', 'objectDate': '1830–70', 'objectBeginDate': 1830, 'objectEndDate': 1870, 'medium': 'Pressed glass', 'dimensions': 'H. 6 9/16 in. (16.7 cm); Diam. 3 in. (7.6 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': None, 'elementMeasurements': {'Diameter': 7.62, 'Height': 16.6688}}], 'creditLine': 'Gift of Mrs. Emily Winthrop Miles, 1946', 'geographyType': 'Made in', 'city': 'East Cambridge', 'state': 'Massachusetts', 'county': '', 'country': 'United States', 'region': 'New England', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2022-02-09T04:42:08.947Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/40', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}]"
2022-04-08 21:19:06,810 : INFO -> Inside convert_list()
2022-04-08 21:19:06,810 : INFO -> Looping inside convert_list(): item="{'objectID': 1, 'isHighlight': False, 'accessionNumber': '1979.486.1', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 164292, 'role': 'Maker', 'name': 'James Barton Longacre', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'One-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'James Barton Longacre', 'artistDisplayBio': 'American, Delaware County, Pennsylvania 1794–1869 Philadelphia, Pennsylvania', 'artistSuffix': '', 'artistAlphaSort': 'Longacre, James Barton', 'artistNationality': 'American', 'artistBeginDate': '1794', 'artistEndDate': '1869', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'objectDate': '1853', 'objectBeginDate': 1853, 'objectEndDate': 1853, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': None, 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/1', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:06,810 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 1, 'isHighlight': False, 'accessionNumber': '1979.486.1', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 164292, 'role': 'Maker', 'name': 'James Barton Longacre', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'One-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'James Barton Longacre', 'artistDisplayBio': 'American, Delaware County, Pennsylvania 1794–1869 Philadelphia, Pennsylvania', 'artistSuffix': '', 'artistAlphaSort': 'Longacre, James Barton', 'artistNationality': 'American', 'artistBeginDate': '1794', 'artistEndDate': '1869', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'objectDate': '1853', 'objectBeginDate': 1853, 'objectEndDate': 1853, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': None, 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/1', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:06,811 : INFO -> Looping inside convert_dict(): key="objectID", val="1", type(val)="int"
2022-04-08 21:19:06,811 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:06,811 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:06,814 : INFO -> Inside convert_kv(): key="objectID", val="1", type(val) is: "int"
2022-04-08 21:19:06,814 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:06,814 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:06,814 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:06,814 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:06,815 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:06,815 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:06,815 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:06,815 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:06,815 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="1979.486.1", type(val)="str"
2022-04-08 21:19:06,815 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:06,815 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:06,815 : INFO -> Inside convert_kv(): key="accessionNumber", val="1979.486.1", type(val) is: "str"
2022-04-08 21:19:06,816 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:06,816 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:06,816 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1979", type(val)="str"
2022-04-08 21:19:06,816 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:06,816 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:06,816 : INFO -> Inside convert_kv(): key="accessionYear", val="1979", type(val) is: "str"
2022-04-08 21:19:06,816 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:06,816 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:06,816 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:06,816 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:06,816 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:06,817 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:06,817 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:06,817 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:06,817 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:06,817 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:06,817 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:06,817 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:06,817 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:06,817 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:06,817 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:06,817 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:06,817 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:06,818 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:06,818 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:06,818 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:06,818 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:06,818 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:06,818 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:06,818 : INFO -> Inside convert_list()
2022-04-08 21:19:06,818 : INFO -> Looping inside convert_dict(): key="constituents", val="[{'constituentID': 164292, 'role': 'Maker', 'name': 'James Barton Longacre', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'gender': ''}]", type(val)="list"
2022-04-08 21:19:06,818 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:06,818 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:06,818 : INFO -> Inside convert_list()
2022-04-08 21:19:06,819 : INFO -> Looping inside convert_list(): item="{'constituentID': 164292, 'role': 'Maker', 'name': 'James Barton Longacre', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'gender': ''}", item_name="item", type="dict"
2022-04-08 21:19:06,819 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'constituentID': 164292, 'role': 'Maker', 'name': 'James Barton Longacre', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'gender': ''}"
2022-04-08 21:19:06,819 : INFO -> Looping inside convert_dict(): key="constituentID", val="164292", type(val)="int"
2022-04-08 21:19:06,819 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:06,819 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:06,819 : INFO -> Inside convert_kv(): key="constituentID", val="164292", type(val) is: "int"
2022-04-08 21:19:06,819 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:06,819 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:06,819 : INFO -> Looping inside convert_dict(): key="role", val="Maker", type(val)="str"
2022-04-08 21:19:06,819 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:06,819 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:06,820 : INFO -> Inside convert_kv(): key="role", val="Maker", type(val) is: "str"
2022-04-08 21:19:06,820 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:06,820 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:06,820 : INFO -> Looping inside convert_dict(): key="name", val="James Barton Longacre", type(val)="str"
2022-04-08 21:19:06,820 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:06,820 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:06,820 : INFO -> Inside convert_kv(): key="name", val="James Barton Longacre", type(val) is: "str"
2022-04-08 21:19:06,820 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:06,820 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:06,820 : INFO -> Looping inside convert_dict(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500011409", type(val)="str"
2022-04-08 21:19:06,820 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:06,820 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:06,820 : INFO -> Inside convert_kv(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500011409", type(val) is: "str"
2022-04-08 21:19:06,820 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:06,821 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:06,821 : INFO -> Looping inside convert_dict(): key="constituentWikidata_URL", val="https://www.wikidata.org/wiki/Q3806459", type(val)="str"
2022-04-08 21:19:06,821 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:06,821 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:06,821 : INFO -> Inside convert_kv(): key="constituentWikidata_URL", val="https://www.wikidata.org/wiki/Q3806459", type(val) is: "str"
2022-04-08 21:19:06,821 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:06,821 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:06,821 : INFO -> Looping inside convert_dict(): key="gender", val="", type(val)="str"
2022-04-08 21:19:06,821 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:06,821 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:06,821 : INFO -> Inside convert_kv(): key="gender", val="", type(val) is: "str"
2022-04-08 21:19:06,821 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:06,821 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:06,821 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:06,822 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:06,822 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:06,822 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:06,822 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:06,822 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:06,822 : INFO -> Looping inside convert_dict(): key="objectName", val="Coin", type(val)="str"
2022-04-08 21:19:06,822 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:06,822 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:06,822 : INFO -> Inside convert_kv(): key="objectName", val="Coin", type(val) is: "str"
2022-04-08 21:19:06,822 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:06,822 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:06,822 : INFO -> Looping inside convert_dict(): key="title", val="One-dollar Liberty Head Coin", type(val)="str"
2022-04-08 21:19:06,822 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:06,822 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:06,823 : INFO -> Inside convert_kv(): key="title", val="One-dollar Liberty Head Coin", type(val) is: "str"
2022-04-08 21:19:06,823 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:06,823 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:06,823 : INFO -> Looping inside convert_dict(): key="culture", val="", type(val)="str"
2022-04-08 21:19:06,823 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:06,823 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:06,823 : INFO -> Inside convert_kv(): key="culture", val="", type(val) is: "str"
2022-04-08 21:19:06,823 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:06,823 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:06,823 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:06,823 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:06,823 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:06,823 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:06,823 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:06,824 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:06,824 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:06,824 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:06,824 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:06,824 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:06,824 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:06,824 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:06,824 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:06,824 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:06,824 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:06,824 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:06,824 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:06,824 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:06,824 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:06,824 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:06,825 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:06,825 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:06,825 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:06,825 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:06,825 : INFO -> Looping inside convert_dict(): key="artistRole", val="Maker", type(val)="str"
2022-04-08 21:19:06,825 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:06,825 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:06,825 : INFO -> Inside convert_kv(): key="artistRole", val="Maker", type(val) is: "str"
2022-04-08 21:19:06,825 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:06,825 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:06,825 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:06,825 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:06,825 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:06,825 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:06,825 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:06,825 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:06,826 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="James Barton Longacre", type(val)="str"
2022-04-08 21:19:06,826 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:06,826 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:06,826 : INFO -> Inside convert_kv(): key="artistDisplayName", val="James Barton Longacre", type(val) is: "str"
2022-04-08 21:19:06,826 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:06,826 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:06,826 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="American, Delaware County, Pennsylvania 1794–1869 Philadelphia, Pennsylvania", type(val)="str"
2022-04-08 21:19:06,826 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:06,826 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:06,826 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="American, Delaware County, Pennsylvania 1794–1869 Philadelphia, Pennsylvania", type(val) is: "str"
2022-04-08 21:19:06,826 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:06,826 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:06,826 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:06,826 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:06,826 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:06,826 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:06,826 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:06,827 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:06,827 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="Longacre, James Barton", type(val)="str"
2022-04-08 21:19:06,827 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:06,827 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:06,827 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="Longacre, James Barton", type(val) is: "str"
2022-04-08 21:19:06,827 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:06,827 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:06,827 : INFO -> Looping inside convert_dict(): key="artistNationality", val="American", type(val)="str"
2022-04-08 21:19:06,827 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:06,827 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:06,827 : INFO -> Inside convert_kv(): key="artistNationality", val="American", type(val) is: "str"
2022-04-08 21:19:06,827 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:06,827 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:06,827 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="1794", type(val)="str"
2022-04-08 21:19:06,827 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:06,827 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:06,827 : INFO -> Inside convert_kv(): key="artistBeginDate", val="1794", type(val) is: "str"
2022-04-08 21:19:06,828 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:06,828 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:06,828 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="1869", type(val)="str"
2022-04-08 21:19:06,828 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:06,828 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:06,828 : INFO -> Inside convert_kv(): key="artistEndDate", val="1869", type(val) is: "str"
2022-04-08 21:19:06,828 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:06,828 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:06,828 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:06,828 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:06,828 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:06,828 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:06,828 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:06,828 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:06,828 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="https://www.wikidata.org/wiki/Q3806459", type(val)="str"
2022-04-08 21:19:06,828 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:06,828 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:06,829 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="https://www.wikidata.org/wiki/Q3806459", type(val) is: "str"
2022-04-08 21:19:06,829 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:06,829 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:06,829 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500011409", type(val)="str"
2022-04-08 21:19:06,829 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:06,829 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:06,829 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500011409", type(val) is: "str"
2022-04-08 21:19:06,829 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:06,829 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:06,829 : INFO -> Looping inside convert_dict(): key="objectDate", val="1853", type(val)="str"
2022-04-08 21:19:06,829 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:06,829 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:06,829 : INFO -> Inside convert_kv(): key="objectDate", val="1853", type(val) is: "str"
2022-04-08 21:19:06,829 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:06,829 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:06,830 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1853", type(val)="int"
2022-04-08 21:19:06,830 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:06,830 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:06,830 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1853", type(val) is: "int"
2022-04-08 21:19:06,830 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:06,830 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:06,830 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1853", type(val)="int"
2022-04-08 21:19:06,830 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:06,830 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:06,830 : INFO -> Inside convert_kv(): key="objectEndDate", val="1853", type(val) is: "int"
2022-04-08 21:19:06,830 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:06,830 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:06,830 : INFO -> Looping inside convert_dict(): key="medium", val="Gold", type(val)="str"
2022-04-08 21:19:06,830 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:06,830 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:06,830 : INFO -> Inside convert_kv(): key="medium", val="Gold", type(val) is: "str"
2022-04-08 21:19:06,830 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:06,830 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:06,831 : INFO -> Looping inside convert_dict(): key="dimensions", val="Dimensions unavailable", type(val)="str"
2022-04-08 21:19:06,831 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:06,831 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:06,831 : INFO -> Inside convert_kv(): key="dimensions", val="Dimensions unavailable", type(val) is: "str"
2022-04-08 21:19:06,831 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:06,831 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:06,831 : INFO -> Looping inside convert_dict(): key="measurements", val="None", type(val)="NoneType"
2022-04-08 21:19:06,831 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:06,831 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:06,831 : INFO -> Inside convert_none(): key="measurements"
2022-04-08 21:19:06,831 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:06,832 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:06,832 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Heinz L. Stoppelmann, 1979", type(val)="str"
2022-04-08 21:19:06,832 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:06,832 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:06,832 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Heinz L. Stoppelmann, 1979", type(val) is: "str"
2022-04-08 21:19:06,832 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:06,832 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:06,832 : INFO -> Looping inside convert_dict(): key="geographyType", val="", type(val)="str"
2022-04-08 21:19:06,832 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:06,832 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:06,832 : INFO -> Inside convert_kv(): key="geographyType", val="", type(val) is: "str"
2022-04-08 21:19:06,832 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:06,832 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:06,832 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:06,832 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:06,832 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:06,833 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:06,833 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:06,833 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:06,833 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:06,833 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:06,833 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:06,833 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:06,833 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:06,833 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:06,833 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:06,833 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:06,833 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:06,833 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:06,833 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:06,833 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:06,833 : INFO -> Looping inside convert_dict(): key="country", val="", type(val)="str"
2022-04-08 21:19:06,833 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:06,833 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:06,834 : INFO -> Inside convert_kv(): key="country", val="", type(val) is: "str"
2022-04-08 21:19:06,834 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:06,834 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:06,834 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:06,834 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:06,834 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:06,834 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:06,834 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:06,834 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:06,834 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:06,834 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:06,834 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:06,834 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:06,834 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:06,834 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:06,834 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:06,834 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:06,834 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:06,835 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:06,835 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:06,835 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:06,835 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:06,835 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:06,835 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:06,835 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:06,835 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:06,835 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:06,835 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:06,835 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:06,835 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:06,835 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:06,835 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:06,835 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:06,835 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:06,836 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:06,836 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:06,836 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:06,836 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:06,836 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:06,836 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:06,836 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:06,836 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:06,836 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:06,836 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:06,836 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:06,836 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:06,836 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:06,836 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:06,836 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:06,836 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:06,836 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:06,837 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:06,837 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:06,837 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:06,837 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:06,837 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:06,837 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:06,837 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:06,837 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:06,837 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:06,837 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:06,837 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:06,837 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:06,837 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:06,837 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:06,837 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:06,837 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:06,837 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:06,838 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:06,838 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/1", type(val)="str"
2022-04-08 21:19:06,838 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:06,838 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:06,838 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/1", type(val) is: "str"
2022-04-08 21:19:06,838 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:06,838 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:06,838 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:06,838 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:06,838 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:06,838 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:06,838 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:06,838 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:06,838 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:06,838 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:06,838 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:06,838 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:06,839 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:06,839 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:06,839 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:06,839 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:06,839 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:06,839 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:06,839 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:06,839 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:06,839 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:06,839 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:06,839 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:06,839 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:06,839 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:06,839 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:06,839 : INFO -> Looping inside convert_list(): item="{'objectID': 2, 'isHighlight': False, 'accessionNumber': '1980.264.5', 'accessionYear': '1980', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Ten-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Christian Gobrecht', 'artistDisplayBio': '1785–1844', 'artistSuffix': '', 'artistAlphaSort': 'Gobrecht, Christian', 'artistNationality': '', 'artistBeginDate': '1785', 'artistEndDate': '1844', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'objectDate': '1901', 'objectBeginDate': 1901, 'objectEndDate': 1901, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': None, 'creditLine': 'Gift of Heinz L. Stoppelmann, 1980', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/2', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:06,839 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 2, 'isHighlight': False, 'accessionNumber': '1980.264.5', 'accessionYear': '1980', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Ten-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Christian Gobrecht', 'artistDisplayBio': '1785–1844', 'artistSuffix': '', 'artistAlphaSort': 'Gobrecht, Christian', 'artistNationality': '', 'artistBeginDate': '1785', 'artistEndDate': '1844', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'objectDate': '1901', 'objectBeginDate': 1901, 'objectEndDate': 1901, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': None, 'creditLine': 'Gift of Heinz L. Stoppelmann, 1980', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/2', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:06,840 : INFO -> Looping inside convert_dict(): key="objectID", val="2", type(val)="int"
2022-04-08 21:19:06,840 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:06,840 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:06,840 : INFO -> Inside convert_kv(): key="objectID", val="2", type(val) is: "int"
2022-04-08 21:19:06,840 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:06,840 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:06,840 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:06,840 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:06,840 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:06,840 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:06,840 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:06,840 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:06,840 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="1980.264.5", type(val)="str"
2022-04-08 21:19:06,840 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:06,840 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:06,840 : INFO -> Inside convert_kv(): key="accessionNumber", val="1980.264.5", type(val) is: "str"
2022-04-08 21:19:06,840 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:06,841 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:06,841 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1980", type(val)="str"
2022-04-08 21:19:06,841 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:06,841 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:06,841 : INFO -> Inside convert_kv(): key="accessionYear", val="1980", type(val) is: "str"
2022-04-08 21:19:06,841 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:06,841 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:06,841 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:06,841 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:06,841 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:06,841 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:06,841 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:06,841 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:06,841 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:06,841 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:06,841 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:06,841 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:06,842 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:06,842 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:06,842 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:06,842 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:06,842 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:06,842 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:06,842 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:06,842 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:06,842 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:06,842 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:06,842 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:06,842 : INFO -> Inside convert_list()
2022-04-08 21:19:06,842 : INFO -> Looping inside convert_dict(): key="constituents", val="[{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}]", type(val)="list"
2022-04-08 21:19:06,842 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:06,842 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:06,842 : INFO -> Inside convert_list()
2022-04-08 21:19:06,842 : INFO -> Looping inside convert_list(): item="{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}", item_name="item", type="dict"
2022-04-08 21:19:06,842 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}"
2022-04-08 21:19:06,843 : INFO -> Looping inside convert_dict(): key="constituentID", val="1079", type(val)="int"
2022-04-08 21:19:06,843 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:06,843 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:06,843 : INFO -> Inside convert_kv(): key="constituentID", val="1079", type(val) is: "int"
2022-04-08 21:19:06,843 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:06,843 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:06,843 : INFO -> Looping inside convert_dict(): key="role", val="Maker", type(val)="str"
2022-04-08 21:19:06,843 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:06,843 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:06,843 : INFO -> Inside convert_kv(): key="role", val="Maker", type(val) is: "str"
2022-04-08 21:19:06,843 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:06,843 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:06,843 : INFO -> Looping inside convert_dict(): key="name", val="Christian Gobrecht", type(val)="str"
2022-04-08 21:19:06,843 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:06,843 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:06,843 : INFO -> Inside convert_kv(): key="name", val="Christian Gobrecht", type(val) is: "str"
2022-04-08 21:19:06,843 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:06,844 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:06,844 : INFO -> Looping inside convert_dict(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500077295", type(val)="str"
2022-04-08 21:19:06,844 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:06,844 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:06,844 : INFO -> Inside convert_kv(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500077295", type(val) is: "str"
2022-04-08 21:19:06,844 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:06,844 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:06,844 : INFO -> Looping inside convert_dict(): key="constituentWikidata_URL", val="https://www.wikidata.org/wiki/Q5109648", type(val)="str"
2022-04-08 21:19:06,844 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:06,844 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:06,844 : INFO -> Inside convert_kv(): key="constituentWikidata_URL", val="https://www.wikidata.org/wiki/Q5109648", type(val) is: "str"
2022-04-08 21:19:06,844 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:06,844 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:06,844 : INFO -> Looping inside convert_dict(): key="gender", val="", type(val)="str"
2022-04-08 21:19:06,844 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:06,844 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:06,844 : INFO -> Inside convert_kv(): key="gender", val="", type(val) is: "str"
2022-04-08 21:19:06,845 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:06,845 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:06,845 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:06,845 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:06,845 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:06,845 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:06,845 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:06,845 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:06,845 : INFO -> Looping inside convert_dict(): key="objectName", val="Coin", type(val)="str"
2022-04-08 21:19:06,845 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:06,845 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:06,845 : INFO -> Inside convert_kv(): key="objectName", val="Coin", type(val) is: "str"
2022-04-08 21:19:06,845 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:06,845 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:06,845 : INFO -> Looping inside convert_dict(): key="title", val="Ten-dollar Liberty Head Coin", type(val)="str"
2022-04-08 21:19:06,845 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:06,845 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:06,846 : INFO -> Inside convert_kv(): key="title", val="Ten-dollar Liberty Head Coin", type(val) is: "str"
2022-04-08 21:19:06,846 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:06,846 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:06,846 : INFO -> Looping inside convert_dict(): key="culture", val="", type(val)="str"
2022-04-08 21:19:06,846 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:06,846 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:06,846 : INFO -> Inside convert_kv(): key="culture", val="", type(val) is: "str"
2022-04-08 21:19:06,846 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:06,846 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:06,846 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:06,846 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:06,846 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:06,846 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:06,846 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:06,846 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:06,846 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:06,846 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:06,847 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:06,847 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:06,847 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:06,847 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:06,847 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:06,847 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:06,847 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:06,847 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:06,847 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:06,847 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:06,847 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:06,847 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:06,847 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:06,847 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:06,847 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:06,848 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:06,848 : INFO -> Looping inside convert_dict(): key="artistRole", val="Maker", type(val)="str"
2022-04-08 21:19:06,848 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:06,848 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:06,848 : INFO -> Inside convert_kv(): key="artistRole", val="Maker", type(val) is: "str"
2022-04-08 21:19:06,848 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:06,848 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:06,848 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:06,848 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:06,848 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:06,848 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:06,848 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:06,848 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:06,848 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="Christian Gobrecht", type(val)="str"
2022-04-08 21:19:06,848 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:06,848 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:06,848 : INFO -> Inside convert_kv(): key="artistDisplayName", val="Christian Gobrecht", type(val) is: "str"
2022-04-08 21:19:06,849 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:06,849 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:06,849 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="1785–1844", type(val)="str"
2022-04-08 21:19:06,849 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:06,849 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:06,849 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="1785–1844", type(val) is: "str"
2022-04-08 21:19:06,849 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:06,849 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:06,849 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:06,849 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:06,849 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:06,849 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:06,849 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:06,849 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:06,849 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="Gobrecht, Christian", type(val)="str"
2022-04-08 21:19:06,849 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:06,849 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:06,850 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="Gobrecht, Christian", type(val) is: "str"
2022-04-08 21:19:06,850 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:06,850 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:06,850 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:06,850 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:06,850 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:06,850 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:06,850 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:06,850 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:06,850 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="1785", type(val)="str"
2022-04-08 21:19:06,850 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:06,850 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:06,850 : INFO -> Inside convert_kv(): key="artistBeginDate", val="1785", type(val) is: "str"
2022-04-08 21:19:06,850 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:06,850 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:06,850 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="1844", type(val)="str"
2022-04-08 21:19:06,850 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:06,850 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:06,851 : INFO -> Inside convert_kv(): key="artistEndDate", val="1844", type(val) is: "str"
2022-04-08 21:19:06,851 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:06,851 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:06,851 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:06,851 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:06,851 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:06,851 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:06,851 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:06,851 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:06,851 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="https://www.wikidata.org/wiki/Q5109648", type(val)="str"
2022-04-08 21:19:06,851 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:06,851 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:06,851 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="https://www.wikidata.org/wiki/Q5109648", type(val) is: "str"
2022-04-08 21:19:06,851 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:06,851 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:06,851 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500077295", type(val)="str"
2022-04-08 21:19:06,851 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:06,852 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:06,852 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500077295", type(val) is: "str"
2022-04-08 21:19:06,852 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:06,852 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:06,852 : INFO -> Looping inside convert_dict(): key="objectDate", val="1901", type(val)="str"
2022-04-08 21:19:06,852 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:06,852 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:06,852 : INFO -> Inside convert_kv(): key="objectDate", val="1901", type(val) is: "str"
2022-04-08 21:19:06,852 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:06,852 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:06,852 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1901", type(val)="int"
2022-04-08 21:19:06,852 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:06,852 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:06,852 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1901", type(val) is: "int"
2022-04-08 21:19:06,852 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:06,852 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:06,852 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1901", type(val)="int"
2022-04-08 21:19:06,853 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:06,853 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:06,853 : INFO -> Inside convert_kv(): key="objectEndDate", val="1901", type(val) is: "int"
2022-04-08 21:19:06,853 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:06,853 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:06,853 : INFO -> Looping inside convert_dict(): key="medium", val="Gold", type(val)="str"
2022-04-08 21:19:06,853 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:06,853 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:06,853 : INFO -> Inside convert_kv(): key="medium", val="Gold", type(val) is: "str"
2022-04-08 21:19:06,853 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:06,853 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:06,853 : INFO -> Looping inside convert_dict(): key="dimensions", val="Dimensions unavailable", type(val)="str"
2022-04-08 21:19:06,853 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:06,853 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:06,853 : INFO -> Inside convert_kv(): key="dimensions", val="Dimensions unavailable", type(val) is: "str"
2022-04-08 21:19:06,853 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:06,853 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:06,854 : INFO -> Looping inside convert_dict(): key="measurements", val="None", type(val)="NoneType"
2022-04-08 21:19:06,854 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:06,854 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:06,854 : INFO -> Inside convert_none(): key="measurements"
2022-04-08 21:19:06,854 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:06,854 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:06,854 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Heinz L. Stoppelmann, 1980", type(val)="str"
2022-04-08 21:19:06,854 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:06,854 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:06,854 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Heinz L. Stoppelmann, 1980", type(val) is: "str"
2022-04-08 21:19:06,854 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:06,854 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:06,854 : INFO -> Looping inside convert_dict(): key="geographyType", val="", type(val)="str"
2022-04-08 21:19:06,854 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:06,854 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:06,854 : INFO -> Inside convert_kv(): key="geographyType", val="", type(val) is: "str"
2022-04-08 21:19:06,854 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:06,854 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:06,855 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:06,855 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:06,855 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:06,855 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:06,855 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:06,855 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:06,855 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:06,855 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:06,855 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:06,855 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:06,855 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:06,855 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:06,855 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:06,855 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:06,855 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:06,855 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:06,855 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:06,856 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:06,856 : INFO -> Looping inside convert_dict(): key="country", val="", type(val)="str"
2022-04-08 21:19:06,856 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:06,856 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:06,856 : INFO -> Inside convert_kv(): key="country", val="", type(val) is: "str"
2022-04-08 21:19:06,856 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:06,856 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:06,856 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:06,856 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:06,856 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:06,856 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:06,856 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:06,856 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:06,856 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:06,856 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:06,856 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:06,856 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:06,857 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:06,857 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:06,857 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:06,857 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:06,857 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:06,857 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:06,857 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:06,857 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:06,857 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:06,857 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:06,857 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:06,857 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:06,857 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:06,857 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:06,857 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:06,857 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:06,857 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:06,858 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:06,858 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:06,858 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:06,858 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:06,858 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:06,858 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:06,858 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:06,858 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:06,858 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:06,858 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:06,858 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:06,858 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:06,858 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:06,858 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:06,858 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:06,858 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:06,858 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:06,858 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:06,859 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:06,859 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:06,859 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:06,859 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:06,859 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:06,859 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:06,859 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:06,859 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:06,859 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:06,859 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:06,859 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:06,859 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:06,859 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:06,859 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:06,859 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:06,859 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:06,859 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:06,860 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:06,860 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:06,860 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:06,860 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:06,860 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/2", type(val)="str"
2022-04-08 21:19:06,860 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:06,860 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:06,860 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/2", type(val) is: "str"
2022-04-08 21:19:06,860 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:06,860 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:06,860 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:06,860 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:06,860 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:06,860 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:06,860 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:06,860 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:06,860 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:06,861 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:06,861 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:06,861 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:06,861 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:06,861 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:06,861 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:06,861 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:06,861 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:06,861 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:06,861 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:06,861 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:06,861 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:06,861 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:06,861 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:06,861 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:06,861 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:06,861 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:06,862 : INFO -> Looping inside convert_list(): item="{'objectID': 3, 'isHighlight': False, 'accessionNumber': '67.265.9', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/3', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:06,862 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 3, 'isHighlight': False, 'accessionNumber': '67.265.9', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/3', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:06,862 : INFO -> Looping inside convert_dict(): key="objectID", val="3", type(val)="int"
2022-04-08 21:19:06,862 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:06,862 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:06,862 : INFO -> Inside convert_kv(): key="objectID", val="3", type(val) is: "int"
2022-04-08 21:19:06,862 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:06,862 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:06,862 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:06,862 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:06,862 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:06,862 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:06,862 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:06,862 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:06,862 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="67.265.9", type(val)="str"
2022-04-08 21:19:06,862 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:06,863 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:06,863 : INFO -> Inside convert_kv(): key="accessionNumber", val="67.265.9", type(val) is: "str"
2022-04-08 21:19:06,863 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:06,863 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:06,863 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1967", type(val)="str"
2022-04-08 21:19:06,863 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:06,863 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:06,863 : INFO -> Inside convert_kv(): key="accessionYear", val="1967", type(val) is: "str"
2022-04-08 21:19:06,863 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:06,863 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:06,863 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:06,863 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:06,863 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:06,863 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:06,863 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:06,863 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:06,863 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:06,864 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:06,864 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:06,864 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:06,864 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:06,864 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:06,864 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:06,864 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:06,864 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:06,864 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:06,864 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:06,864 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:06,864 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:06,864 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:06,864 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:06,864 : INFO -> Inside convert_list()
2022-04-08 21:19:06,865 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:06,865 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:06,865 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:06,865 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:06,865 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:06,865 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:06,865 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:06,865 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:06,865 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:06,865 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:06,865 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:06,865 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:06,865 : INFO -> Looping inside convert_dict(): key="objectName", val="Coin", type(val)="str"
2022-04-08 21:19:06,865 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:06,865 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:06,865 : INFO -> Inside convert_kv(): key="objectName", val="Coin", type(val) is: "str"
2022-04-08 21:19:06,865 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:06,865 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:06,866 : INFO -> Looping inside convert_dict(): key="title", val="Two-and-a-Half Dollar Coin", type(val)="str"
2022-04-08 21:19:06,866 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:06,866 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:06,866 : INFO -> Inside convert_kv(): key="title", val="Two-and-a-Half Dollar Coin", type(val) is: "str"
2022-04-08 21:19:06,866 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:06,866 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:06,866 : INFO -> Looping inside convert_dict(): key="culture", val="", type(val)="str"
2022-04-08 21:19:06,866 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:06,866 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:06,866 : INFO -> Inside convert_kv(): key="culture", val="", type(val) is: "str"
2022-04-08 21:19:06,866 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:06,866 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:06,866 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:06,866 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:06,866 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:06,866 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:06,866 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:06,867 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:06,867 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:06,867 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:06,867 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:06,867 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:06,867 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:06,867 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:06,867 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:06,867 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:06,867 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:06,867 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:06,867 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:06,867 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:06,867 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:06,867 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:06,867 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:06,867 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:06,868 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:06,868 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:06,868 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:06,868 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:06,868 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:06,868 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:06,868 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:06,868 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:06,868 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:06,868 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:06,868 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:06,868 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:06,868 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:06,868 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:06,868 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:06,868 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:06,868 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:06,869 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:06,869 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:06,869 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:06,869 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:06,869 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:06,869 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:06,869 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:06,869 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:06,869 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:06,869 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:06,869 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:06,869 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:06,869 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:06,869 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:06,869 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:06,869 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:06,869 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:06,869 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:06,870 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:06,870 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:06,870 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:06,870 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:06,870 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:06,870 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:06,870 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:06,870 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:06,870 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:06,870 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:06,870 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:06,870 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:06,870 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:06,870 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:06,870 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:06,870 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:06,870 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:06,871 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:06,871 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:06,871 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:06,871 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:06,871 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:06,871 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:06,871 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:06,871 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:06,871 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:06,871 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:06,871 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:06,871 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:06,871 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:06,871 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:06,871 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:06,871 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:06,871 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:06,872 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:06,872 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:06,872 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:06,872 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:06,872 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:06,872 : INFO -> Looping inside convert_dict(): key="objectDate", val="1909–27", type(val)="str"
2022-04-08 21:19:06,872 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:06,872 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:06,872 : INFO -> Inside convert_kv(): key="objectDate", val="1909–27", type(val) is: "str"
2022-04-08 21:19:06,872 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:06,872 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:06,872 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1909", type(val)="int"
2022-04-08 21:19:06,872 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:06,872 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:06,872 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1909", type(val) is: "int"
2022-04-08 21:19:06,872 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:06,872 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:06,873 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1927", type(val)="int"
2022-04-08 21:19:06,873 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:06,873 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:06,873 : INFO -> Inside convert_kv(): key="objectEndDate", val="1927", type(val) is: "int"
2022-04-08 21:19:06,873 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:06,873 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:06,873 : INFO -> Looping inside convert_dict(): key="medium", val="Gold", type(val)="str"
2022-04-08 21:19:06,873 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:06,873 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:06,873 : INFO -> Inside convert_kv(): key="medium", val="Gold", type(val) is: "str"
2022-04-08 21:19:06,873 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:06,873 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:06,873 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 11/16 in. (1.7 cm)", type(val)="str"
2022-04-08 21:19:06,873 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:06,873 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:06,873 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 11/16 in. (1.7 cm)", type(val) is: "str"
2022-04-08 21:19:06,873 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:06,873 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:06,874 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}]", type(val)="list"
2022-04-08 21:19:06,874 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:06,874 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:06,874 : INFO -> Inside convert_list()
2022-04-08 21:19:06,874 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}", item_name="item", type="dict"
2022-04-08 21:19:06,874 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}"
2022-04-08 21:19:06,874 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:06,874 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:06,874 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:06,874 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:06,874 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:06,874 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:06,874 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:06,874 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:06,874 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:06,874 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:06,874 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:06,874 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:06,875 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 1.7463}", type(val)="dict"
2022-04-08 21:19:06,875 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:06,875 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:06,875 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 1.7463}"
2022-04-08 21:19:06,875 : INFO -> Looping inside convert_dict(): key="Diameter", val="1.7463", type(val)="float"
2022-04-08 21:19:06,875 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:06,875 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:06,875 : INFO -> Inside convert_kv(): key="Diameter", val="1.7463", type(val) is: "float"
2022-04-08 21:19:06,875 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:06,875 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:06,875 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of C. Ruxton Love Jr., 1967", type(val)="str"
2022-04-08 21:19:06,875 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:06,875 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:06,875 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of C. Ruxton Love Jr., 1967", type(val) is: "str"
2022-04-08 21:19:06,875 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:06,875 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:06,876 : INFO -> Looping inside convert_dict(): key="geographyType", val="", type(val)="str"
2022-04-08 21:19:06,876 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:06,876 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:06,876 : INFO -> Inside convert_kv(): key="geographyType", val="", type(val) is: "str"
2022-04-08 21:19:06,876 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:06,876 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:06,876 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:06,876 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:06,876 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:06,876 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:06,876 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:06,876 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:06,876 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:06,876 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:06,876 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:06,876 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:06,876 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:06,877 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:06,877 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:06,877 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:06,877 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:06,877 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:06,877 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:06,877 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:06,877 : INFO -> Looping inside convert_dict(): key="country", val="", type(val)="str"
2022-04-08 21:19:06,877 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:06,877 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:06,877 : INFO -> Inside convert_kv(): key="country", val="", type(val) is: "str"
2022-04-08 21:19:06,877 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:06,877 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:06,877 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:06,877 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:06,877 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:06,877 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:06,878 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:06,878 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:06,878 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:06,878 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:06,878 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:06,878 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:06,878 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:06,878 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:06,878 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:06,878 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:06,878 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:06,878 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:06,878 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:06,878 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:06,878 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:06,878 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:06,878 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:06,879 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:06,879 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:06,879 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:06,879 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:06,879 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:06,879 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:06,879 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:06,879 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:06,879 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:06,879 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:06,879 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:06,879 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:06,879 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:06,879 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:06,879 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:06,879 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:06,879 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:06,879 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:06,880 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:06,880 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:06,880 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:06,880 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:06,880 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:06,880 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:06,880 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:06,880 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:06,880 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:06,880 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:06,880 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:06,880 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:06,880 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:06,880 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:06,880 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:06,880 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:06,880 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:06,881 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:06,881 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:06,881 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:06,881 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:06,881 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:06,881 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:06,881 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:06,881 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:06,881 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:06,881 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:06,881 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/3", type(val)="str"
2022-04-08 21:19:06,881 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:06,881 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:06,881 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/3", type(val) is: "str"
2022-04-08 21:19:06,881 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:06,882 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:06,882 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:06,882 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:06,882 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:06,882 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:06,882 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:06,882 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:06,882 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:06,882 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:06,882 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:06,882 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:06,882 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:06,882 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:06,882 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:06,882 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:06,882 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:06,882 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:06,883 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:06,883 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:06,883 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:06,883 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:06,883 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:06,883 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:06,883 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:06,883 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:06,883 : INFO -> Looping inside convert_list(): item="{'objectID': 4, 'isHighlight': False, 'accessionNumber': '67.265.10', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/4', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:06,883 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 4, 'isHighlight': False, 'accessionNumber': '67.265.10', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/4', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:06,883 : INFO -> Looping inside convert_dict(): key="objectID", val="4", type(val)="int"
2022-04-08 21:19:06,883 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:06,883 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:06,883 : INFO -> Inside convert_kv(): key="objectID", val="4", type(val) is: "int"
2022-04-08 21:19:06,883 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:06,883 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:06,884 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:06,884 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:06,884 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:06,884 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:06,884 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:06,884 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:06,884 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="67.265.10", type(val)="str"
2022-04-08 21:19:06,884 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:06,884 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:06,884 : INFO -> Inside convert_kv(): key="accessionNumber", val="67.265.10", type(val) is: "str"
2022-04-08 21:19:06,884 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:06,884 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:06,884 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1967", type(val)="str"
2022-04-08 21:19:06,884 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:06,884 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:06,884 : INFO -> Inside convert_kv(): key="accessionYear", val="1967", type(val) is: "str"
2022-04-08 21:19:06,884 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:06,884 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:06,885 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:06,885 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:06,885 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:06,885 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:06,885 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:06,885 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:06,885 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:06,885 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:06,885 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:06,885 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:06,885 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:06,885 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:06,885 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:06,885 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:06,885 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:06,885 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:06,886 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:06,886 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:06,886 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:06,886 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:06,886 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:06,886 : INFO -> Inside convert_list()
2022-04-08 21:19:06,886 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:06,886 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:06,886 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:06,886 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:06,886 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:06,886 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:06,886 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:06,886 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:06,886 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:06,886 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:06,886 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:06,886 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:06,887 : INFO -> Looping inside convert_dict(): key="objectName", val="Coin", type(val)="str"
2022-04-08 21:19:06,887 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:06,887 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:06,887 : INFO -> Inside convert_kv(): key="objectName", val="Coin", type(val) is: "str"
2022-04-08 21:19:06,887 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:06,887 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:06,887 : INFO -> Looping inside convert_dict(): key="title", val="Two-and-a-Half Dollar Coin", type(val)="str"
2022-04-08 21:19:06,887 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:06,887 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:06,887 : INFO -> Inside convert_kv(): key="title", val="Two-and-a-Half Dollar Coin", type(val) is: "str"
2022-04-08 21:19:06,887 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:06,887 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:06,887 : INFO -> Looping inside convert_dict(): key="culture", val="", type(val)="str"
2022-04-08 21:19:06,887 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:06,887 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:06,887 : INFO -> Inside convert_kv(): key="culture", val="", type(val) is: "str"
2022-04-08 21:19:06,887 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:06,888 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:06,888 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:06,888 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:06,888 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:06,888 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:06,888 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:06,888 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:06,888 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:06,888 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:06,888 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:06,888 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:06,888 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:06,888 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:06,888 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:06,888 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:06,888 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:06,888 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:06,889 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:06,889 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:06,889 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:06,889 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:06,889 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:06,889 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:06,889 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:06,889 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:06,889 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:06,889 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:06,889 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:06,889 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:06,889 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:06,889 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:06,889 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:06,889 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:06,889 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:06,890 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:06,890 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:06,890 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:06,890 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:06,890 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:06,890 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:06,890 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:06,890 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:06,890 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:06,890 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:06,890 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:06,890 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:06,890 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:06,890 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:06,890 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:06,890 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:06,890 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:06,890 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:06,891 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:06,891 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:06,891 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:06,891 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:06,891 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:06,891 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:06,891 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:06,891 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:06,891 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:06,891 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:06,891 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:06,891 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:06,891 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:06,891 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:06,891 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:06,891 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:06,891 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:06,892 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:06,892 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:06,892 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:06,892 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:06,892 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:06,892 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:06,892 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:06,892 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:06,892 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:06,892 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:06,892 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:06,892 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:06,892 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:06,892 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:06,892 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:06,892 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:06,892 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:06,893 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:06,893 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:06,893 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:06,893 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:06,893 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:06,893 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:06,893 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:06,893 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:06,893 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:06,893 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:06,893 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:06,893 : INFO -> Looping inside convert_dict(): key="objectDate", val="1909–27", type(val)="str"
2022-04-08 21:19:06,893 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:06,893 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:06,893 : INFO -> Inside convert_kv(): key="objectDate", val="1909–27", type(val) is: "str"
2022-04-08 21:19:06,893 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:06,893 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:06,894 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1909", type(val)="int"
2022-04-08 21:19:06,894 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:06,894 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:06,894 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1909", type(val) is: "int"
2022-04-08 21:19:06,894 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:06,894 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:06,894 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1927", type(val)="int"
2022-04-08 21:19:06,894 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:06,894 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:06,894 : INFO -> Inside convert_kv(): key="objectEndDate", val="1927", type(val) is: "int"
2022-04-08 21:19:06,894 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:06,894 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:06,894 : INFO -> Looping inside convert_dict(): key="medium", val="Gold", type(val)="str"
2022-04-08 21:19:06,894 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:06,894 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:06,894 : INFO -> Inside convert_kv(): key="medium", val="Gold", type(val) is: "str"
2022-04-08 21:19:06,894 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:06,894 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:06,895 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 11/16 in. (1.7 cm)", type(val)="str"
2022-04-08 21:19:06,895 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:06,895 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:06,895 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 11/16 in. (1.7 cm)", type(val) is: "str"
2022-04-08 21:19:06,895 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:06,895 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:06,895 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}]", type(val)="list"
2022-04-08 21:19:06,895 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:06,895 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:06,895 : INFO -> Inside convert_list()
2022-04-08 21:19:06,895 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}", item_name="item", type="dict"
2022-04-08 21:19:06,895 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}"
2022-04-08 21:19:06,895 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:06,895 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:06,895 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:06,895 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:06,895 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:06,895 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:06,896 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:06,896 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:06,896 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:06,896 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:06,896 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:06,896 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:06,896 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 1.7463}", type(val)="dict"
2022-04-08 21:19:06,896 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:06,896 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:06,896 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 1.7463}"
2022-04-08 21:19:06,896 : INFO -> Looping inside convert_dict(): key="Diameter", val="1.7463", type(val)="float"
2022-04-08 21:19:06,896 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:06,896 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:06,896 : INFO -> Inside convert_kv(): key="Diameter", val="1.7463", type(val) is: "float"
2022-04-08 21:19:06,896 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:06,896 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:06,897 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of C. Ruxton Love Jr., 1967", type(val)="str"
2022-04-08 21:19:06,897 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:06,897 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:06,897 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of C. Ruxton Love Jr., 1967", type(val) is: "str"
2022-04-08 21:19:06,897 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:06,897 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:06,897 : INFO -> Looping inside convert_dict(): key="geographyType", val="", type(val)="str"
2022-04-08 21:19:06,897 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:06,897 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:06,897 : INFO -> Inside convert_kv(): key="geographyType", val="", type(val) is: "str"
2022-04-08 21:19:06,897 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:06,897 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:06,897 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:06,897 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:06,897 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:06,897 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:06,897 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:06,897 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:06,898 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:06,898 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:06,898 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:06,898 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:06,898 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:06,898 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:06,898 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:06,898 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:06,898 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:06,898 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:06,898 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:06,898 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:06,898 : INFO -> Looping inside convert_dict(): key="country", val="", type(val)="str"
2022-04-08 21:19:06,898 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:06,898 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:06,899 : INFO -> Inside convert_kv(): key="country", val="", type(val) is: "str"
2022-04-08 21:19:06,899 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:06,899 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:06,899 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:06,899 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:06,899 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:06,899 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:06,899 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:06,899 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:06,899 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:06,899 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:06,899 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:06,899 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:06,899 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:06,899 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:06,899 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:06,899 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:06,900 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:06,900 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:06,900 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:06,900 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:06,900 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:06,900 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:06,900 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:06,900 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:06,900 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:06,900 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:06,900 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:06,900 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:06,900 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:06,900 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:06,900 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:06,900 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:06,900 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:06,901 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:06,901 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:06,901 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:06,901 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:06,901 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:06,901 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:06,901 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:06,901 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:06,901 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:06,901 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:06,901 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:06,901 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:06,901 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:06,901 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:06,901 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:06,901 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:06,901 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:06,901 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:06,902 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:06,902 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:06,902 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:06,902 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:06,902 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:06,902 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:06,902 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:06,902 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:06,902 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:06,902 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:06,902 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:06,902 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:06,902 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:06,902 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:06,902 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:06,902 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:06,902 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:06,903 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/4", type(val)="str"
2022-04-08 21:19:06,903 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:06,903 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:06,903 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/4", type(val) is: "str"
2022-04-08 21:19:06,903 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:06,903 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:06,903 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:06,903 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:06,903 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:06,903 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:06,903 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:06,903 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:06,903 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:06,903 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:06,903 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:06,903 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:06,903 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:06,904 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:06,904 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:06,904 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:06,904 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:06,904 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:06,904 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:06,904 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:06,904 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:06,904 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:06,904 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:06,904 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:06,904 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:06,904 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:06,904 : INFO -> Looping inside convert_list(): item="{'objectID': 5, 'isHighlight': False, 'accessionNumber': '67.265.11', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/5', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:06,904 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 5, 'isHighlight': False, 'accessionNumber': '67.265.11', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/5', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:06,904 : INFO -> Looping inside convert_dict(): key="objectID", val="5", type(val)="int"
2022-04-08 21:19:06,905 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:06,905 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:06,905 : INFO -> Inside convert_kv(): key="objectID", val="5", type(val) is: "int"
2022-04-08 21:19:06,905 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:06,905 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:06,905 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:06,905 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:06,905 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:06,905 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:06,905 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:06,905 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:06,905 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="67.265.11", type(val)="str"
2022-04-08 21:19:06,905 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:06,905 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:06,905 : INFO -> Inside convert_kv(): key="accessionNumber", val="67.265.11", type(val) is: "str"
2022-04-08 21:19:06,905 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:06,905 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:06,906 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1967", type(val)="str"
2022-04-08 21:19:06,906 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:06,906 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:06,906 : INFO -> Inside convert_kv(): key="accessionYear", val="1967", type(val) is: "str"
2022-04-08 21:19:06,906 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:06,906 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:06,906 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:06,906 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:06,906 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:06,906 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:06,906 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:06,906 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:06,906 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:06,906 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:06,906 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:06,906 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:06,906 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:06,906 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:06,907 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:06,907 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:06,907 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:06,907 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:06,907 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:06,907 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:06,907 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:06,907 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:06,907 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:06,907 : INFO -> Inside convert_list()
2022-04-08 21:19:06,907 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:06,907 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:06,907 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:06,907 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:06,907 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:06,907 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:06,907 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:06,908 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:06,908 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:06,908 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:06,908 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:06,908 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:06,908 : INFO -> Looping inside convert_dict(): key="objectName", val="Coin", type(val)="str"
2022-04-08 21:19:06,908 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:06,908 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:06,908 : INFO -> Inside convert_kv(): key="objectName", val="Coin", type(val) is: "str"
2022-04-08 21:19:06,908 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:06,908 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:06,908 : INFO -> Looping inside convert_dict(): key="title", val="Two-and-a-Half Dollar Coin", type(val)="str"
2022-04-08 21:19:06,908 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:06,908 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:06,908 : INFO -> Inside convert_kv(): key="title", val="Two-and-a-Half Dollar Coin", type(val) is: "str"
2022-04-08 21:19:06,908 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:06,908 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:06,909 : INFO -> Looping inside convert_dict(): key="culture", val="", type(val)="str"
2022-04-08 21:19:06,909 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:06,909 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:06,909 : INFO -> Inside convert_kv(): key="culture", val="", type(val) is: "str"
2022-04-08 21:19:06,909 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:06,909 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:06,909 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:06,909 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:06,909 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:06,909 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:06,909 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:06,909 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:06,909 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:06,909 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:06,909 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:06,909 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:06,909 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:06,909 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:06,910 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:06,910 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:06,910 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:06,910 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:06,910 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:06,910 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:06,910 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:06,910 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:06,910 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:06,910 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:06,910 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:06,910 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:06,910 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:06,910 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:06,910 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:06,910 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:06,910 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:06,911 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:06,911 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:06,911 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:06,911 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:06,911 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:06,911 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:06,911 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:06,911 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:06,911 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:06,911 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:06,911 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:06,911 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:06,911 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:06,911 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:06,911 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:06,911 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:06,911 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:06,912 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:06,912 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:06,912 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:06,912 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:06,912 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:06,912 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:06,912 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:06,912 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:06,912 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:06,912 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:06,912 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:06,912 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:06,912 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:06,912 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:06,912 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:06,912 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:06,912 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:06,913 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:06,913 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:06,913 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:06,913 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:06,913 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:06,913 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:06,913 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:06,913 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:06,913 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:06,913 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:06,913 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:06,913 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:06,913 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:06,913 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:06,913 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:06,913 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:06,913 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:06,914 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:06,914 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:06,914 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:06,914 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:06,914 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:06,914 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:06,914 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:06,914 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:06,914 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:06,914 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:06,914 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:06,914 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:06,914 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:06,914 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:06,914 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:06,914 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:06,914 : INFO -> Looping inside convert_dict(): key="objectDate", val="1909–27", type(val)="str"
2022-04-08 21:19:06,915 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:06,915 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:06,915 : INFO -> Inside convert_kv(): key="objectDate", val="1909–27", type(val) is: "str"
2022-04-08 21:19:06,915 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:06,915 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:06,915 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1909", type(val)="int"
2022-04-08 21:19:06,915 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:06,915 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:06,915 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1909", type(val) is: "int"
2022-04-08 21:19:06,915 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:06,915 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:06,915 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1927", type(val)="int"
2022-04-08 21:19:06,915 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:06,915 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:06,915 : INFO -> Inside convert_kv(): key="objectEndDate", val="1927", type(val) is: "int"
2022-04-08 21:19:06,915 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:06,915 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:06,916 : INFO -> Looping inside convert_dict(): key="medium", val="Gold", type(val)="str"
2022-04-08 21:19:06,916 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:06,916 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:06,916 : INFO -> Inside convert_kv(): key="medium", val="Gold", type(val) is: "str"
2022-04-08 21:19:06,916 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:06,916 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:06,916 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 11/16 in. (1.7 cm)", type(val)="str"
2022-04-08 21:19:06,916 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:06,916 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:06,916 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 11/16 in. (1.7 cm)", type(val) is: "str"
2022-04-08 21:19:06,916 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:06,916 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:06,916 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}]", type(val)="list"
2022-04-08 21:19:06,916 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:06,916 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:06,917 : INFO -> Inside convert_list()
2022-04-08 21:19:06,917 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}", item_name="item", type="dict"
2022-04-08 21:19:06,917 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}"
2022-04-08 21:19:06,917 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:06,917 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:06,917 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:06,917 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:06,917 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:06,917 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:06,917 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:06,917 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:06,917 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:06,917 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:06,917 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:06,917 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:06,917 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 1.7463}", type(val)="dict"
2022-04-08 21:19:06,917 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:06,917 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:06,918 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 1.7463}"
2022-04-08 21:19:06,918 : INFO -> Looping inside convert_dict(): key="Diameter", val="1.7463", type(val)="float"
2022-04-08 21:19:06,918 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:06,918 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:06,918 : INFO -> Inside convert_kv(): key="Diameter", val="1.7463", type(val) is: "float"
2022-04-08 21:19:06,918 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:06,918 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:06,918 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of C. Ruxton Love Jr., 1967", type(val)="str"
2022-04-08 21:19:06,918 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:06,918 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:06,918 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of C. Ruxton Love Jr., 1967", type(val) is: "str"
2022-04-08 21:19:06,918 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:06,918 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:06,918 : INFO -> Looping inside convert_dict(): key="geographyType", val="", type(val)="str"
2022-04-08 21:19:06,918 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:06,918 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:06,918 : INFO -> Inside convert_kv(): key="geographyType", val="", type(val) is: "str"
2022-04-08 21:19:06,919 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:06,919 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:06,919 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:06,919 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:06,919 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:06,919 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:06,919 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:06,919 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:06,919 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:06,919 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:06,919 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:06,919 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:06,919 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:06,919 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:06,919 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:06,919 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:06,919 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:06,920 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:06,920 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:06,920 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:06,920 : INFO -> Looping inside convert_dict(): key="country", val="", type(val)="str"
2022-04-08 21:19:06,920 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:06,920 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:06,920 : INFO -> Inside convert_kv(): key="country", val="", type(val) is: "str"
2022-04-08 21:19:06,920 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:06,920 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:06,920 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:06,920 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:06,920 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:06,920 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:06,920 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:06,920 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:06,920 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:06,920 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:06,920 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:06,921 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:06,921 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:06,921 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:06,921 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:06,921 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:06,921 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:06,921 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:06,921 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:06,921 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:06,921 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:06,921 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:06,921 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:06,921 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:06,921 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:06,921 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:06,921 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:06,921 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:06,921 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:06,922 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:06,922 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:06,922 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:06,922 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:06,922 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:06,922 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:06,922 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:06,922 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:06,922 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:06,922 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:06,922 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:06,922 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:06,922 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:06,922 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:06,922 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:06,922 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:06,922 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:06,923 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:06,923 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:06,923 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:06,923 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:06,923 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:06,923 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:06,923 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:06,923 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:06,923 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:06,923 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:06,923 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:06,923 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:06,923 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:06,923 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:06,923 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:06,923 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:06,923 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:06,924 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:06,924 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:06,924 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:06,924 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:06,924 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:06,924 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/5", type(val)="str"
2022-04-08 21:19:06,924 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:06,924 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:06,924 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/5", type(val) is: "str"
2022-04-08 21:19:06,924 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:06,924 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:06,924 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:06,924 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:06,924 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:06,924 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:06,924 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:06,924 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:06,925 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:06,925 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:06,925 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:06,925 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:06,925 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:06,925 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:06,925 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:06,925 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:06,925 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:06,925 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:06,925 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:06,925 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:06,925 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:06,925 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:06,925 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:06,925 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:06,925 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:06,925 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:06,926 : INFO -> Looping inside convert_list(): item="{'objectID': 6, 'isHighlight': False, 'accessionNumber': '67.265.12', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/6', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:06,926 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 6, 'isHighlight': False, 'accessionNumber': '67.265.12', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/6', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:06,926 : INFO -> Looping inside convert_dict(): key="objectID", val="6", type(val)="int"
2022-04-08 21:19:06,926 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:06,926 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:06,926 : INFO -> Inside convert_kv(): key="objectID", val="6", type(val) is: "int"
2022-04-08 21:19:06,926 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:06,926 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:06,926 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:06,926 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:06,926 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:06,926 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:06,926 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:06,926 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:06,926 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="67.265.12", type(val)="str"
2022-04-08 21:19:06,926 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:06,927 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:06,927 : INFO -> Inside convert_kv(): key="accessionNumber", val="67.265.12", type(val) is: "str"
2022-04-08 21:19:06,927 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:06,927 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:06,927 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1967", type(val)="str"
2022-04-08 21:19:06,927 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:06,927 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:06,927 : INFO -> Inside convert_kv(): key="accessionYear", val="1967", type(val) is: "str"
2022-04-08 21:19:06,927 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:06,927 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:06,927 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:06,927 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:06,927 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:06,927 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:06,927 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:06,927 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:06,927 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:06,928 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:06,928 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:06,928 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:06,928 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:06,928 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:06,928 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:06,928 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:06,928 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:06,928 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:06,928 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:06,928 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:06,928 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:06,928 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:06,928 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:06,928 : INFO -> Inside convert_list()
2022-04-08 21:19:06,928 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:06,928 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:06,928 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:06,929 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:06,929 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:06,929 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:06,929 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:06,929 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:06,929 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:06,929 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:06,929 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:06,929 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:06,929 : INFO -> Looping inside convert_dict(): key="objectName", val="Coin", type(val)="str"
2022-04-08 21:19:06,929 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:06,929 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:06,929 : INFO -> Inside convert_kv(): key="objectName", val="Coin", type(val) is: "str"
2022-04-08 21:19:06,929 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:06,929 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:06,929 : INFO -> Looping inside convert_dict(): key="title", val="Two-and-a-Half Dollar Coin", type(val)="str"
2022-04-08 21:19:06,929 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:06,930 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:06,930 : INFO -> Inside convert_kv(): key="title", val="Two-and-a-Half Dollar Coin", type(val) is: "str"
2022-04-08 21:19:06,930 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:06,930 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:06,930 : INFO -> Looping inside convert_dict(): key="culture", val="", type(val)="str"
2022-04-08 21:19:06,930 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:06,930 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:06,930 : INFO -> Inside convert_kv(): key="culture", val="", type(val) is: "str"
2022-04-08 21:19:06,930 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:06,930 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:06,930 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:06,930 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:06,930 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:06,930 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:06,930 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:06,930 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:06,930 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:06,930 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:06,931 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:06,931 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:06,931 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:06,931 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:06,931 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:06,931 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:06,931 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:06,931 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:06,931 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:06,931 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:06,931 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:06,931 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:06,931 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:06,931 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:06,931 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:06,931 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:06,931 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:06,932 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:06,932 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:06,932 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:06,932 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:06,932 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:06,932 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:06,932 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:06,932 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:06,932 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:06,932 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:06,932 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:06,932 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:06,932 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:06,932 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:06,932 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:06,932 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:06,932 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:06,933 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:06,933 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:06,933 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:06,933 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:06,933 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:06,933 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:06,933 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:06,933 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:06,933 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:06,933 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:06,933 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:06,933 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:06,933 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:06,933 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:06,933 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:06,934 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:06,934 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:06,934 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:06,934 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:06,934 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:06,934 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:06,934 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:06,934 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:06,934 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:06,934 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:06,934 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:06,934 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:06,934 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:06,934 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:06,934 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:06,934 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:06,934 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:06,935 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:06,935 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:06,935 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:06,935 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:06,935 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:06,935 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:06,935 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:06,935 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:06,935 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:06,935 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:06,935 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:06,935 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:06,935 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:06,935 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:06,935 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:06,935 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:06,935 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:06,936 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:06,936 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:06,936 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:06,936 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:06,936 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:06,936 : INFO -> Looping inside convert_dict(): key="objectDate", val="1909–27", type(val)="str"
2022-04-08 21:19:06,936 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:06,936 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:06,936 : INFO -> Inside convert_kv(): key="objectDate", val="1909–27", type(val) is: "str"
2022-04-08 21:19:06,936 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:06,936 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:06,936 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1909", type(val)="int"
2022-04-08 21:19:06,936 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:06,936 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:06,936 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1909", type(val) is: "int"
2022-04-08 21:19:06,936 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:06,936 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:06,937 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1927", type(val)="int"
2022-04-08 21:19:06,937 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:06,937 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:06,937 : INFO -> Inside convert_kv(): key="objectEndDate", val="1927", type(val) is: "int"
2022-04-08 21:19:06,937 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:06,937 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:06,937 : INFO -> Looping inside convert_dict(): key="medium", val="Gold", type(val)="str"
2022-04-08 21:19:06,937 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:06,937 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:06,937 : INFO -> Inside convert_kv(): key="medium", val="Gold", type(val) is: "str"
2022-04-08 21:19:06,937 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:06,937 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:06,937 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 11/16 in. (1.7 cm)", type(val)="str"
2022-04-08 21:19:06,937 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:06,937 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:06,937 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 11/16 in. (1.7 cm)", type(val) is: "str"
2022-04-08 21:19:06,937 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:06,938 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:06,938 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}]", type(val)="list"
2022-04-08 21:19:06,938 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:06,938 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:06,938 : INFO -> Inside convert_list()
2022-04-08 21:19:06,938 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}", item_name="item", type="dict"
2022-04-08 21:19:06,938 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}"
2022-04-08 21:19:06,938 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:06,938 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:06,938 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:06,938 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:06,938 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:06,938 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:06,938 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:06,938 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:06,938 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:06,938 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:06,938 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:06,939 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:06,939 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 1.7463}", type(val)="dict"
2022-04-08 21:19:06,939 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:06,939 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:06,939 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 1.7463}"
2022-04-08 21:19:06,939 : INFO -> Looping inside convert_dict(): key="Diameter", val="1.7463", type(val)="float"
2022-04-08 21:19:06,939 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:06,939 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:06,939 : INFO -> Inside convert_kv(): key="Diameter", val="1.7463", type(val) is: "float"
2022-04-08 21:19:06,939 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:06,939 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:06,939 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of C. Ruxton Love Jr., 1967", type(val)="str"
2022-04-08 21:19:06,939 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:06,939 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:06,939 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of C. Ruxton Love Jr., 1967", type(val) is: "str"
2022-04-08 21:19:06,939 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:06,939 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:06,940 : INFO -> Looping inside convert_dict(): key="geographyType", val="", type(val)="str"
2022-04-08 21:19:06,940 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:06,940 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:06,940 : INFO -> Inside convert_kv(): key="geographyType", val="", type(val) is: "str"
2022-04-08 21:19:06,940 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:06,940 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:06,940 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:06,940 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:06,940 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:06,940 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:06,940 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:06,940 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:06,940 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:06,940 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:06,940 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:06,940 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:06,940 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:06,941 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:06,941 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:06,941 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:06,941 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:06,941 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:06,941 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:06,941 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:06,941 : INFO -> Looping inside convert_dict(): key="country", val="", type(val)="str"
2022-04-08 21:19:06,941 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:06,941 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:06,941 : INFO -> Inside convert_kv(): key="country", val="", type(val) is: "str"
2022-04-08 21:19:06,941 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:06,941 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:06,941 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:06,941 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:06,941 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:06,941 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:06,942 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:06,942 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:06,942 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:06,942 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:06,942 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:06,942 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:06,942 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:06,942 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:06,942 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:06,942 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:06,942 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:06,942 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:06,942 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:06,942 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:06,942 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:06,942 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:06,942 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:06,942 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:06,943 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:06,943 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:06,943 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:06,943 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:06,943 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:06,943 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:06,943 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:06,943 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:06,943 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:06,943 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:06,943 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:06,943 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:06,943 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:06,943 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:06,943 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:06,943 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:06,943 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:06,944 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:06,944 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:06,944 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:06,944 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:06,944 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:06,944 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:06,944 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:06,944 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:06,944 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:06,944 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:06,944 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:06,944 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:06,944 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:06,944 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:06,944 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:06,944 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:06,944 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:06,945 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:06,945 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:06,945 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:06,945 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:06,945 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:06,945 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:06,945 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:06,945 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:06,945 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:06,945 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:06,945 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/6", type(val)="str"
2022-04-08 21:19:06,945 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:06,945 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:06,945 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/6", type(val) is: "str"
2022-04-08 21:19:06,945 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:06,945 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:06,945 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:06,946 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:06,946 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:06,946 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:06,946 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:06,946 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:06,946 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:06,946 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:06,946 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:06,946 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:06,946 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:06,946 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:06,946 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:06,946 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:06,946 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:06,946 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:06,946 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:06,946 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:06,946 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:06,947 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:06,947 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:06,947 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:06,947 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:06,947 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:06,947 : INFO -> Looping inside convert_list(): item="{'objectID': 7, 'isHighlight': False, 'accessionNumber': '67.265.13', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/7', 'tags': [{'term': 'Birds', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300266506', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q5113'}, {'term': 'Coins', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037222', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q41207'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:06,947 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 7, 'isHighlight': False, 'accessionNumber': '67.265.13', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/7', 'tags': [{'term': 'Birds', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300266506', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q5113'}, {'term': 'Coins', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037222', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q41207'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:06,947 : INFO -> Looping inside convert_dict(): key="objectID", val="7", type(val)="int"
2022-04-08 21:19:06,947 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:06,947 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:06,947 : INFO -> Inside convert_kv(): key="objectID", val="7", type(val) is: "int"
2022-04-08 21:19:06,947 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:06,947 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:06,947 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:06,947 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:06,947 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:06,948 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:06,948 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:06,948 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:06,948 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="67.265.13", type(val)="str"
2022-04-08 21:19:06,948 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:06,948 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:06,948 : INFO -> Inside convert_kv(): key="accessionNumber", val="67.265.13", type(val) is: "str"
2022-04-08 21:19:06,948 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:06,948 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:06,948 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1967", type(val)="str"
2022-04-08 21:19:06,948 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:06,948 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:06,948 : INFO -> Inside convert_kv(): key="accessionYear", val="1967", type(val) is: "str"
2022-04-08 21:19:06,948 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:06,948 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:06,948 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:06,948 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:06,949 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:06,949 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:06,949 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:06,949 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:06,949 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:06,949 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:06,949 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:06,949 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:06,949 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:06,949 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:06,949 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:06,949 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:06,949 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:06,949 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:06,949 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:06,949 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:06,949 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:06,950 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:06,950 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:06,950 : INFO -> Inside convert_list()
2022-04-08 21:19:06,950 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:06,950 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:06,950 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:06,950 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:06,950 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:06,950 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:06,950 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:06,950 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:06,950 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:06,950 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:06,950 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:06,950 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:06,950 : INFO -> Looping inside convert_dict(): key="objectName", val="Coin", type(val)="str"
2022-04-08 21:19:06,950 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:06,950 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:06,951 : INFO -> Inside convert_kv(): key="objectName", val="Coin", type(val) is: "str"
2022-04-08 21:19:06,951 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:06,951 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:06,951 : INFO -> Looping inside convert_dict(): key="title", val="Two-and-a-Half Dollar Coin", type(val)="str"
2022-04-08 21:19:06,951 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:06,951 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:06,951 : INFO -> Inside convert_kv(): key="title", val="Two-and-a-Half Dollar Coin", type(val) is: "str"
2022-04-08 21:19:06,951 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:06,951 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:06,951 : INFO -> Looping inside convert_dict(): key="culture", val="", type(val)="str"
2022-04-08 21:19:06,951 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:06,951 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:06,951 : INFO -> Inside convert_kv(): key="culture", val="", type(val) is: "str"
2022-04-08 21:19:06,951 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:06,951 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:06,952 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:06,952 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:06,952 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:06,952 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:06,952 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:06,952 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:06,952 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:06,952 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:06,952 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:06,952 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:06,952 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:06,952 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:06,952 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:06,952 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:06,952 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:06,952 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:06,952 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:06,953 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:06,953 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:06,953 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:06,953 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:06,953 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:06,953 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:06,953 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:06,953 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:06,953 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:06,953 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:06,953 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:06,953 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:06,953 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:06,953 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:06,953 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:06,953 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:06,953 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:06,953 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:06,954 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:06,954 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:06,954 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:06,954 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:06,954 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:06,954 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:06,954 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:06,954 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:06,954 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:06,954 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:06,954 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:06,954 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:06,954 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:06,954 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:06,954 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:06,954 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:06,954 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:06,955 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:06,955 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:06,955 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:06,955 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:06,955 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:06,955 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:06,955 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:06,955 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:06,955 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:06,955 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:06,955 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:06,955 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:06,955 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:06,955 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:06,955 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:06,955 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:06,955 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:06,956 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:06,956 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:06,956 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:06,956 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:06,956 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:06,956 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:06,956 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:06,956 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:06,956 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:06,956 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:06,956 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:06,956 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:06,956 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:06,956 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:06,956 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:06,956 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:06,956 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:06,956 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:06,957 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:06,957 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:06,957 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:06,957 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:06,957 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:06,957 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:06,957 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:06,957 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:06,957 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:06,957 : INFO -> Looping inside convert_dict(): key="objectDate", val="1909–27", type(val)="str"
2022-04-08 21:19:06,957 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:06,957 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:06,957 : INFO -> Inside convert_kv(): key="objectDate", val="1909–27", type(val) is: "str"
2022-04-08 21:19:06,957 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:06,957 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:06,957 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1909", type(val)="int"
2022-04-08 21:19:06,957 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:06,957 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:06,958 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1909", type(val) is: "int"
2022-04-08 21:19:06,958 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:06,958 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:06,958 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1927", type(val)="int"
2022-04-08 21:19:06,958 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:06,958 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:06,958 : INFO -> Inside convert_kv(): key="objectEndDate", val="1927", type(val) is: "int"
2022-04-08 21:19:06,958 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:06,958 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:06,958 : INFO -> Looping inside convert_dict(): key="medium", val="Gold", type(val)="str"
2022-04-08 21:19:06,958 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:06,958 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:06,958 : INFO -> Inside convert_kv(): key="medium", val="Gold", type(val) is: "str"
2022-04-08 21:19:06,958 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:06,958 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:06,958 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 11/16 in. (1.7 cm)", type(val)="str"
2022-04-08 21:19:06,958 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:06,959 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:06,959 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 11/16 in. (1.7 cm)", type(val) is: "str"
2022-04-08 21:19:06,959 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:06,959 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:06,959 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}]", type(val)="list"
2022-04-08 21:19:06,959 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:06,959 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:06,959 : INFO -> Inside convert_list()
2022-04-08 21:19:06,959 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}", item_name="item", type="dict"
2022-04-08 21:19:06,959 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}"
2022-04-08 21:19:06,959 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:06,959 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:06,959 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:06,959 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:06,959 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:06,959 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:06,959 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:06,960 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:06,960 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:06,960 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:06,960 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:06,960 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:06,960 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 1.7463}", type(val)="dict"
2022-04-08 21:19:06,960 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:06,960 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:06,960 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 1.7463}"
2022-04-08 21:19:06,960 : INFO -> Looping inside convert_dict(): key="Diameter", val="1.7463", type(val)="float"
2022-04-08 21:19:06,960 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:06,960 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:06,960 : INFO -> Inside convert_kv(): key="Diameter", val="1.7463", type(val) is: "float"
2022-04-08 21:19:06,960 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:06,960 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:06,960 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of C. Ruxton Love Jr., 1967", type(val)="str"
2022-04-08 21:19:06,960 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:06,960 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:06,961 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of C. Ruxton Love Jr., 1967", type(val) is: "str"
2022-04-08 21:19:06,961 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:06,961 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:06,961 : INFO -> Looping inside convert_dict(): key="geographyType", val="", type(val)="str"
2022-04-08 21:19:06,961 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:06,961 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:06,961 : INFO -> Inside convert_kv(): key="geographyType", val="", type(val) is: "str"
2022-04-08 21:19:06,961 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:06,961 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:06,961 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:06,961 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:06,961 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:06,961 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:06,961 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:06,961 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:06,961 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:06,961 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:06,962 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:06,962 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:06,962 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:06,962 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:06,962 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:06,962 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:06,962 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:06,962 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:06,962 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:06,962 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:06,962 : INFO -> Looping inside convert_dict(): key="country", val="", type(val)="str"
2022-04-08 21:19:06,962 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:06,962 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:06,962 : INFO -> Inside convert_kv(): key="country", val="", type(val) is: "str"
2022-04-08 21:19:06,962 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:06,962 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:06,962 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:06,963 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:06,963 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:06,963 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:06,963 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:06,963 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:06,963 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:06,963 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:06,963 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:06,963 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:06,963 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:06,963 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:06,963 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:06,963 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:06,963 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:06,963 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:06,963 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:06,963 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:06,964 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:06,964 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:06,964 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:06,964 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:06,964 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:06,964 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:06,964 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:06,964 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:06,964 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:06,964 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:06,964 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:06,964 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:06,964 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:06,964 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:06,964 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:06,964 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:06,964 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:06,964 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:06,965 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:06,965 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:06,965 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:06,965 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:06,965 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:06,965 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:06,965 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:06,965 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:06,965 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:06,965 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:06,965 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:06,965 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:06,965 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:06,965 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:06,965 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:06,965 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:06,965 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:06,965 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:06,966 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:06,966 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:06,966 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:06,966 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:06,966 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:06,966 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:06,966 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:06,966 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:06,966 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:06,966 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:06,966 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:06,966 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:06,966 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/7", type(val)="str"
2022-04-08 21:19:06,966 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:06,966 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:06,966 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/7", type(val) is: "str"
2022-04-08 21:19:06,966 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:06,967 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:06,967 : INFO -> Looping inside convert_dict(): key="tags", val="[{'term': 'Birds', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300266506', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q5113'}, {'term': 'Coins', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037222', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q41207'}]", type(val)="list"
2022-04-08 21:19:06,967 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:06,967 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:06,967 : INFO -> Inside convert_list()
2022-04-08 21:19:06,967 : INFO -> Looping inside convert_list(): item="{'term': 'Birds', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300266506', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q5113'}", item_name="item", type="dict"
2022-04-08 21:19:06,967 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'term': 'Birds', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300266506', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q5113'}"
2022-04-08 21:19:06,967 : INFO -> Looping inside convert_dict(): key="term", val="Birds", type(val)="str"
2022-04-08 21:19:06,967 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:06,967 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:06,967 : INFO -> Inside convert_kv(): key="term", val="Birds", type(val) is: "str"
2022-04-08 21:19:06,967 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:06,967 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:06,967 : INFO -> Looping inside convert_dict(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300266506", type(val)="str"
2022-04-08 21:19:06,967 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:06,967 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:06,967 : INFO -> Inside convert_kv(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300266506", type(val) is: "str"
2022-04-08 21:19:06,968 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:06,968 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:06,968 : INFO -> Looping inside convert_dict(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q5113", type(val)="str"
2022-04-08 21:19:06,968 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:06,968 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:06,968 : INFO -> Inside convert_kv(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q5113", type(val) is: "str"
2022-04-08 21:19:06,968 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:06,968 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:06,968 : INFO -> Looping inside convert_list(): item="{'term': 'Coins', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037222', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q41207'}", item_name="item", type="dict"
2022-04-08 21:19:06,968 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'term': 'Coins', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037222', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q41207'}"
2022-04-08 21:19:06,968 : INFO -> Looping inside convert_dict(): key="term", val="Coins", type(val)="str"
2022-04-08 21:19:06,968 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:06,968 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:06,968 : INFO -> Inside convert_kv(): key="term", val="Coins", type(val) is: "str"
2022-04-08 21:19:06,968 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:06,968 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:06,969 : INFO -> Looping inside convert_dict(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300037222", type(val)="str"
2022-04-08 21:19:06,969 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:06,969 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:06,969 : INFO -> Inside convert_kv(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300037222", type(val) is: "str"
2022-04-08 21:19:06,969 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:06,969 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:06,969 : INFO -> Looping inside convert_dict(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q41207", type(val)="str"
2022-04-08 21:19:06,969 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:06,969 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:06,969 : INFO -> Inside convert_kv(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q41207", type(val) is: "str"
2022-04-08 21:19:06,969 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:06,969 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:06,969 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:06,969 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:06,969 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:06,969 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:06,969 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:06,969 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:06,970 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:06,970 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:06,970 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:06,970 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:06,970 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:06,970 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:06,970 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:06,970 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:06,970 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:06,970 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:06,970 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:06,970 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:06,970 : INFO -> Looping inside convert_list(): item="{'objectID': 8, 'isHighlight': False, 'accessionNumber': '67.265.14', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/8', 'tags': [{'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}, {'term': 'Profiles', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300123319', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q4382010'}, {'term': 'Eagles', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300250049', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q2092297'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:06,970 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 8, 'isHighlight': False, 'accessionNumber': '67.265.14', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/8', 'tags': [{'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}, {'term': 'Profiles', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300123319', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q4382010'}, {'term': 'Eagles', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300250049', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q2092297'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:06,970 : INFO -> Looping inside convert_dict(): key="objectID", val="8", type(val)="int"
2022-04-08 21:19:06,970 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:06,971 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:06,971 : INFO -> Inside convert_kv(): key="objectID", val="8", type(val) is: "int"
2022-04-08 21:19:06,971 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:06,971 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:06,971 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:06,971 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:06,971 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:06,971 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:06,971 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:06,971 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:06,971 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="67.265.14", type(val)="str"
2022-04-08 21:19:06,971 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:06,971 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:06,971 : INFO -> Inside convert_kv(): key="accessionNumber", val="67.265.14", type(val) is: "str"
2022-04-08 21:19:06,971 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:06,971 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:06,971 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1967", type(val)="str"
2022-04-08 21:19:06,972 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:06,972 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:06,972 : INFO -> Inside convert_kv(): key="accessionYear", val="1967", type(val) is: "str"
2022-04-08 21:19:06,972 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:06,972 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:06,972 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:06,972 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:06,972 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:06,972 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:06,972 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:06,972 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:06,972 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:06,972 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:06,972 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:06,972 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:06,972 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:06,972 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:06,973 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:06,973 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:06,973 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:06,973 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:06,973 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:06,973 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:06,973 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:06,973 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:06,973 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:06,973 : INFO -> Inside convert_list()
2022-04-08 21:19:06,973 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:06,973 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:06,973 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:06,973 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:06,973 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:06,973 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:06,973 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:06,974 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:06,974 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:06,974 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:06,974 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:06,974 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:06,974 : INFO -> Looping inside convert_dict(): key="objectName", val="Coin", type(val)="str"
2022-04-08 21:19:06,974 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:06,974 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:06,974 : INFO -> Inside convert_kv(): key="objectName", val="Coin", type(val) is: "str"
2022-04-08 21:19:06,974 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:06,974 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:06,974 : INFO -> Looping inside convert_dict(): key="title", val="Two-and-a-Half Dollar Coin", type(val)="str"
2022-04-08 21:19:06,974 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:06,974 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:06,974 : INFO -> Inside convert_kv(): key="title", val="Two-and-a-Half Dollar Coin", type(val) is: "str"
2022-04-08 21:19:06,974 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:06,974 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:06,974 : INFO -> Looping inside convert_dict(): key="culture", val="", type(val)="str"
2022-04-08 21:19:06,975 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:06,975 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:06,975 : INFO -> Inside convert_kv(): key="culture", val="", type(val) is: "str"
2022-04-08 21:19:06,975 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:06,975 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:06,975 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:06,975 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:06,975 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:06,975 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:06,975 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:06,975 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:06,975 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:06,975 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:06,975 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:06,975 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:06,975 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:06,975 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:06,976 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:06,976 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:06,976 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:06,976 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:06,976 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:06,976 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:06,976 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:06,976 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:06,976 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:06,976 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:06,976 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:06,976 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:06,976 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:06,976 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:06,976 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:06,976 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:06,976 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:06,976 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:06,977 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:06,977 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:06,977 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:06,977 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:06,977 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:06,977 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:06,977 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:06,977 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:06,977 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:06,977 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:06,977 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:06,977 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:06,977 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:06,977 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:06,977 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:06,977 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:06,977 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:06,978 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:06,978 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:06,978 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:06,978 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:06,978 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:06,978 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:06,978 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:06,978 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:06,978 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:06,978 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:06,978 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:06,978 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:06,978 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:06,978 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:06,978 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:06,978 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:06,978 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:06,978 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:06,979 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:06,979 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:06,979 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:06,979 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:06,979 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:06,979 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:06,979 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:06,979 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:06,979 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:06,979 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:06,979 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:06,979 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:06,979 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:06,979 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:06,979 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:06,979 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:06,979 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:06,980 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:06,980 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:06,980 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:06,980 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:06,980 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:06,980 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:06,980 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:06,980 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:06,980 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:06,980 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:06,980 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:06,980 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:06,980 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:06,980 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:06,980 : INFO -> Looping inside convert_dict(): key="objectDate", val="1909–27", type(val)="str"
2022-04-08 21:19:06,980 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:06,980 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:06,981 : INFO -> Inside convert_kv(): key="objectDate", val="1909–27", type(val) is: "str"
2022-04-08 21:19:06,981 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:06,981 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:06,981 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1909", type(val)="int"
2022-04-08 21:19:06,981 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:06,981 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:06,981 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1909", type(val) is: "int"
2022-04-08 21:19:06,981 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:06,981 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:06,981 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1927", type(val)="int"
2022-04-08 21:19:06,981 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:06,981 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:06,981 : INFO -> Inside convert_kv(): key="objectEndDate", val="1927", type(val) is: "int"
2022-04-08 21:19:06,981 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:06,981 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:06,981 : INFO -> Looping inside convert_dict(): key="medium", val="Gold", type(val)="str"
2022-04-08 21:19:06,981 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:06,981 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:06,982 : INFO -> Inside convert_kv(): key="medium", val="Gold", type(val) is: "str"
2022-04-08 21:19:06,982 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:06,982 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:06,982 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 11/16 in. (1.7 cm)", type(val)="str"
2022-04-08 21:19:06,982 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:06,982 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:06,982 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 11/16 in. (1.7 cm)", type(val) is: "str"
2022-04-08 21:19:06,982 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:06,982 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:06,982 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}]", type(val)="list"
2022-04-08 21:19:06,982 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:06,982 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:06,982 : INFO -> Inside convert_list()
2022-04-08 21:19:06,982 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}", item_name="item", type="dict"
2022-04-08 21:19:06,982 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}"
2022-04-08 21:19:06,982 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:06,982 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:06,982 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:06,983 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:06,983 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:06,983 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:06,983 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:06,983 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:06,983 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:06,983 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:06,983 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:06,983 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:06,983 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 1.7463}", type(val)="dict"
2022-04-08 21:19:06,983 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:06,983 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:06,983 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 1.7463}"
2022-04-08 21:19:06,983 : INFO -> Looping inside convert_dict(): key="Diameter", val="1.7463", type(val)="float"
2022-04-08 21:19:06,983 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:06,983 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:06,984 : INFO -> Inside convert_kv(): key="Diameter", val="1.7463", type(val) is: "float"
2022-04-08 21:19:06,984 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:06,984 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:06,984 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of C. Ruxton Love Jr., 1967", type(val)="str"
2022-04-08 21:19:06,984 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:06,984 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:06,984 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of C. Ruxton Love Jr., 1967", type(val) is: "str"
2022-04-08 21:19:06,984 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:06,984 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:06,984 : INFO -> Looping inside convert_dict(): key="geographyType", val="", type(val)="str"
2022-04-08 21:19:06,984 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:06,984 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:06,984 : INFO -> Inside convert_kv(): key="geographyType", val="", type(val) is: "str"
2022-04-08 21:19:06,984 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:06,984 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:06,984 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:06,984 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:06,985 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:06,985 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:06,985 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:06,985 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:06,985 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:06,985 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:06,985 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:06,985 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:06,985 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:06,985 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:06,985 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:06,986 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:06,986 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:06,986 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:06,986 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:06,986 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:06,986 : INFO -> Looping inside convert_dict(): key="country", val="", type(val)="str"
2022-04-08 21:19:06,986 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:06,986 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:06,986 : INFO -> Inside convert_kv(): key="country", val="", type(val) is: "str"
2022-04-08 21:19:06,986 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:06,986 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:06,986 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:06,986 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:06,986 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:06,986 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:06,987 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:06,987 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:06,987 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:06,987 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:06,987 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:06,987 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:06,987 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:06,987 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:06,987 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:06,987 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:06,987 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:06,987 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:06,987 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:06,987 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:06,987 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:06,987 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:06,987 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:06,988 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:06,988 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:06,988 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:06,988 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:06,988 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:06,988 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:06,988 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:06,988 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:06,988 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:06,988 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:06,988 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:06,988 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:06,988 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:06,988 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:06,988 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:06,988 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:06,988 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:06,989 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:06,989 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:06,989 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:06,989 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:06,989 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:06,989 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:06,989 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:06,989 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:06,989 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:06,989 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:06,989 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:06,989 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:06,989 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:06,989 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:06,989 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:06,989 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:06,989 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:06,990 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:06,990 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:06,990 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:06,990 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:06,990 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:06,990 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:06,990 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:06,990 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:06,990 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:06,990 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:06,990 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:06,990 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/8", type(val)="str"
2022-04-08 21:19:06,990 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:06,990 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:06,990 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/8", type(val) is: "str"
2022-04-08 21:19:06,990 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:06,990 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:06,991 : INFO -> Looping inside convert_dict(): key="tags", val="[{'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}, {'term': 'Profiles', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300123319', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q4382010'}, {'term': 'Eagles', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300250049', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q2092297'}]", type(val)="list"
2022-04-08 21:19:06,991 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:06,991 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:06,991 : INFO -> Inside convert_list()
2022-04-08 21:19:06,991 : INFO -> Looping inside convert_list(): item="{'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}", item_name="item", type="dict"
2022-04-08 21:19:06,991 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}"
2022-04-08 21:19:06,991 : INFO -> Looping inside convert_dict(): key="term", val="Men", type(val)="str"
2022-04-08 21:19:06,991 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:06,991 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:06,991 : INFO -> Inside convert_kv(): key="term", val="Men", type(val) is: "str"
2022-04-08 21:19:06,991 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:06,991 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:06,991 : INFO -> Looping inside convert_dict(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300025928", type(val)="str"
2022-04-08 21:19:06,991 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:06,991 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:06,991 : INFO -> Inside convert_kv(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300025928", type(val) is: "str"
2022-04-08 21:19:06,991 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:06,992 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:06,992 : INFO -> Looping inside convert_dict(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q8441", type(val)="str"
2022-04-08 21:19:06,992 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:06,992 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:06,992 : INFO -> Inside convert_kv(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q8441", type(val) is: "str"
2022-04-08 21:19:06,992 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:06,992 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:06,992 : INFO -> Looping inside convert_list(): item="{'term': 'Profiles', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300123319', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q4382010'}", item_name="item", type="dict"
2022-04-08 21:19:06,992 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'term': 'Profiles', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300123319', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q4382010'}"
2022-04-08 21:19:06,992 : INFO -> Looping inside convert_dict(): key="term", val="Profiles", type(val)="str"
2022-04-08 21:19:06,992 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:06,992 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:06,992 : INFO -> Inside convert_kv(): key="term", val="Profiles", type(val) is: "str"
2022-04-08 21:19:06,992 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:06,992 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:06,992 : INFO -> Looping inside convert_dict(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300123319", type(val)="str"
2022-04-08 21:19:06,992 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:06,992 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:06,993 : INFO -> Inside convert_kv(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300123319", type(val) is: "str"
2022-04-08 21:19:06,993 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:06,993 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:06,993 : INFO -> Looping inside convert_dict(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q4382010", type(val)="str"
2022-04-08 21:19:06,993 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:06,993 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:06,993 : INFO -> Inside convert_kv(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q4382010", type(val) is: "str"
2022-04-08 21:19:06,993 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:06,993 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:06,993 : INFO -> Looping inside convert_list(): item="{'term': 'Eagles', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300250049', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q2092297'}", item_name="item", type="dict"
2022-04-08 21:19:06,993 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'term': 'Eagles', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300250049', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q2092297'}"
2022-04-08 21:19:06,993 : INFO -> Looping inside convert_dict(): key="term", val="Eagles", type(val)="str"
2022-04-08 21:19:06,993 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:06,993 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:06,993 : INFO -> Inside convert_kv(): key="term", val="Eagles", type(val) is: "str"
2022-04-08 21:19:06,993 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:06,993 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:06,994 : INFO -> Looping inside convert_dict(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300250049", type(val)="str"
2022-04-08 21:19:06,994 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:06,994 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:06,994 : INFO -> Inside convert_kv(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300250049", type(val) is: "str"
2022-04-08 21:19:06,994 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:06,994 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:06,994 : INFO -> Looping inside convert_dict(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q2092297", type(val)="str"
2022-04-08 21:19:06,994 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:06,994 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:06,994 : INFO -> Inside convert_kv(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q2092297", type(val) is: "str"
2022-04-08 21:19:06,994 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:06,994 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:06,994 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:06,994 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:06,994 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:06,994 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:06,995 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:06,995 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:06,995 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:06,995 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:06,995 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:06,995 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:06,995 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:06,995 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:06,995 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:06,995 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:06,995 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:06,995 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:06,995 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:06,995 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:06,995 : INFO -> Looping inside convert_list(): item="{'objectID': 9, 'isHighlight': False, 'accessionNumber': '67.265.15', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/9', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:06,996 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 9, 'isHighlight': False, 'accessionNumber': '67.265.15', 'accessionYear': '1967', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-Half Dollar Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1909–27', 'objectBeginDate': 1909, 'objectEndDate': 1927, 'medium': 'Gold', 'dimensions': 'Diam. 11/16 in. (1.7 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}], 'creditLine': 'Gift of C. Ruxton Love Jr., 1967', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/9', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:06,996 : INFO -> Looping inside convert_dict(): key="objectID", val="9", type(val)="int"
2022-04-08 21:19:06,996 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:06,996 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:06,996 : INFO -> Inside convert_kv(): key="objectID", val="9", type(val) is: "int"
2022-04-08 21:19:06,996 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:06,996 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:06,996 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:06,996 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:06,996 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:06,996 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:06,996 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:06,996 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:06,996 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="67.265.15", type(val)="str"
2022-04-08 21:19:06,996 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:06,996 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:06,996 : INFO -> Inside convert_kv(): key="accessionNumber", val="67.265.15", type(val) is: "str"
2022-04-08 21:19:06,996 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:06,997 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:06,997 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1967", type(val)="str"
2022-04-08 21:19:06,997 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:06,997 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:06,997 : INFO -> Inside convert_kv(): key="accessionYear", val="1967", type(val) is: "str"
2022-04-08 21:19:06,997 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:06,997 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:06,997 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:06,997 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:06,997 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:06,997 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:06,997 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:06,997 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:06,997 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:06,997 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:06,997 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:06,998 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:06,998 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:06,998 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:06,998 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:06,998 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:06,998 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:06,998 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:06,998 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:06,998 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:06,998 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:06,998 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:06,998 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:06,998 : INFO -> Inside convert_list()
2022-04-08 21:19:06,998 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:06,998 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:06,998 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:06,998 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:06,998 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:06,999 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:06,999 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:06,999 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:06,999 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:06,999 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:06,999 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:06,999 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:06,999 : INFO -> Looping inside convert_dict(): key="objectName", val="Coin", type(val)="str"
2022-04-08 21:19:06,999 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:06,999 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:06,999 : INFO -> Inside convert_kv(): key="objectName", val="Coin", type(val) is: "str"
2022-04-08 21:19:06,999 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:06,999 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:06,999 : INFO -> Looping inside convert_dict(): key="title", val="Two-and-a-Half Dollar Coin", type(val)="str"
2022-04-08 21:19:06,999 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,000 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,000 : INFO -> Inside convert_kv(): key="title", val="Two-and-a-Half Dollar Coin", type(val) is: "str"
2022-04-08 21:19:07,000 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,000 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,000 : INFO -> Looping inside convert_dict(): key="culture", val="", type(val)="str"
2022-04-08 21:19:07,000 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,000 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,000 : INFO -> Inside convert_kv(): key="culture", val="", type(val) is: "str"
2022-04-08 21:19:07,000 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,000 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,000 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,000 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,000 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,000 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,000 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,000 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,001 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,001 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,001 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,001 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,001 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,001 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,001 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,001 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,001 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,001 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,001 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,001 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,001 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,001 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,001 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,001 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,001 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,001 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,002 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:07,002 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,002 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,002 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:07,002 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,002 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,002 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,002 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,002 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,002 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,002 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,002 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,002 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:07,002 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,002 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,002 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:07,002 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,003 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,003 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:07,003 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,003 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,003 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:07,003 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,003 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,003 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,003 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,003 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,003 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,003 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,003 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,003 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:07,003 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,003 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,004 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:07,004 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,004 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,004 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,004 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,004 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,004 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,004 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,004 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,004 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:07,004 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,004 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,004 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:07,004 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,004 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,005 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:07,005 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,005 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,005 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:07,005 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,005 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,005 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,005 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,005 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,005 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,005 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,005 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,005 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,005 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,005 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,005 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,005 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,006 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,006 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,006 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,006 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,006 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,006 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,006 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,006 : INFO -> Looping inside convert_dict(): key="objectDate", val="1909–27", type(val)="str"
2022-04-08 21:19:07,006 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,006 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,006 : INFO -> Inside convert_kv(): key="objectDate", val="1909–27", type(val) is: "str"
2022-04-08 21:19:07,006 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,006 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,006 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1909", type(val)="int"
2022-04-08 21:19:07,006 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,006 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,007 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1909", type(val) is: "int"
2022-04-08 21:19:07,007 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,007 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,007 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1927", type(val)="int"
2022-04-08 21:19:07,007 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,007 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,007 : INFO -> Inside convert_kv(): key="objectEndDate", val="1927", type(val) is: "int"
2022-04-08 21:19:07,007 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,007 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,007 : INFO -> Looping inside convert_dict(): key="medium", val="Gold", type(val)="str"
2022-04-08 21:19:07,007 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,007 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,007 : INFO -> Inside convert_kv(): key="medium", val="Gold", type(val) is: "str"
2022-04-08 21:19:07,007 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,007 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,007 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 11/16 in. (1.7 cm)", type(val)="str"
2022-04-08 21:19:07,007 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,008 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,008 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 11/16 in. (1.7 cm)", type(val) is: "str"
2022-04-08 21:19:07,008 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,008 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,008 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}]", type(val)="list"
2022-04-08 21:19:07,008 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,008 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,008 : INFO -> Inside convert_list()
2022-04-08 21:19:07,008 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}", item_name="item", type="dict"
2022-04-08 21:19:07,008 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7463}}"
2022-04-08 21:19:07,008 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,008 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,008 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,008 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,008 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,008 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,008 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,009 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,009 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,009 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,009 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,009 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,009 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 1.7463}", type(val)="dict"
2022-04-08 21:19:07,009 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,009 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,009 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 1.7463}"
2022-04-08 21:19:07,009 : INFO -> Looping inside convert_dict(): key="Diameter", val="1.7463", type(val)="float"
2022-04-08 21:19:07,009 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,009 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,009 : INFO -> Inside convert_kv(): key="Diameter", val="1.7463", type(val) is: "float"
2022-04-08 21:19:07,009 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,009 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,009 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of C. Ruxton Love Jr., 1967", type(val)="str"
2022-04-08 21:19:07,009 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,010 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,010 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of C. Ruxton Love Jr., 1967", type(val) is: "str"
2022-04-08 21:19:07,010 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,010 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,010 : INFO -> Looping inside convert_dict(): key="geographyType", val="", type(val)="str"
2022-04-08 21:19:07,010 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,010 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,010 : INFO -> Inside convert_kv(): key="geographyType", val="", type(val) is: "str"
2022-04-08 21:19:07,010 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,010 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,010 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,010 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,010 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,010 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,010 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,010 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,011 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,011 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,011 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,011 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,011 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,011 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,011 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,011 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,011 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,011 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,011 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,011 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,011 : INFO -> Looping inside convert_dict(): key="country", val="", type(val)="str"
2022-04-08 21:19:07,011 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,011 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,011 : INFO -> Inside convert_kv(): key="country", val="", type(val) is: "str"
2022-04-08 21:19:07,011 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,012 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,012 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,012 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,012 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,012 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,012 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,012 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,012 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,012 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,012 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,012 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,012 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,012 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,012 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,012 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,012 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,012 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,013 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,013 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,013 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,013 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,013 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,013 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,013 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,013 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,013 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,013 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,013 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,013 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,013 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,013 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,013 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,013 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,013 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,014 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,014 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,014 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,014 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,014 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,014 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,014 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,014 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,014 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,014 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,014 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,014 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,014 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,014 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,014 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,014 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,014 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,014 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,015 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,015 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,015 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,015 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,015 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,015 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,015 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,015 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,015 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,015 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,015 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,015 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,015 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,015 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,015 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,015 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/9", type(val)="str"
2022-04-08 21:19:07,016 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,016 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,016 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/9", type(val) is: "str"
2022-04-08 21:19:07,016 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,016 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,016 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,016 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,016 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,016 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,016 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,016 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,016 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,016 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,016 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,016 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,016 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,016 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,017 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,017 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,017 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,017 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,017 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,017 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,017 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,017 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,017 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,017 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,017 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,017 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,017 : INFO -> Looping inside convert_list(): item="{'objectID': 10, 'isHighlight': False, 'accessionNumber': '1979.486.3', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1080, 'role': 'Maker', 'name': 'Bela Lyon Pratt', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-half-dollar Indian Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Bela Lyon Pratt', 'artistDisplayBio': '1867–1917', 'artistSuffix': '', 'artistAlphaSort': 'Pratt, Bela Lyon', 'artistNationality': '', 'artistBeginDate': '1867', 'artistEndDate': '1917', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'objectDate': '1912', 'objectBeginDate': 1912, 'objectEndDate': 1912, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/10', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,017 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 10, 'isHighlight': False, 'accessionNumber': '1979.486.3', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1080, 'role': 'Maker', 'name': 'Bela Lyon Pratt', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-half-dollar Indian Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Bela Lyon Pratt', 'artistDisplayBio': '1867–1917', 'artistSuffix': '', 'artistAlphaSort': 'Pratt, Bela Lyon', 'artistNationality': '', 'artistBeginDate': '1867', 'artistEndDate': '1917', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'objectDate': '1912', 'objectBeginDate': 1912, 'objectEndDate': 1912, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/10', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,017 : INFO -> Looping inside convert_dict(): key="objectID", val="10", type(val)="int"
2022-04-08 21:19:07,017 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,018 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,018 : INFO -> Inside convert_kv(): key="objectID", val="10", type(val) is: "int"
2022-04-08 21:19:07,018 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,018 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,018 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,018 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,018 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,018 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,018 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,018 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,018 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="1979.486.3", type(val)="str"
2022-04-08 21:19:07,018 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,018 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,018 : INFO -> Inside convert_kv(): key="accessionNumber", val="1979.486.3", type(val) is: "str"
2022-04-08 21:19:07,018 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,018 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,019 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1979", type(val)="str"
2022-04-08 21:19:07,019 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,019 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,019 : INFO -> Inside convert_kv(): key="accessionYear", val="1979", type(val) is: "str"
2022-04-08 21:19:07,019 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,019 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,019 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,019 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,019 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,019 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,019 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,019 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,019 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,019 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,019 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,019 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,019 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,020 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,020 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,020 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,020 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,020 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,020 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,020 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,020 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,020 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,020 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,020 : INFO -> Inside convert_list()
2022-04-08 21:19:07,020 : INFO -> Looping inside convert_dict(): key="constituents", val="[{'constituentID': 1080, 'role': 'Maker', 'name': 'Bela Lyon Pratt', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'gender': ''}]", type(val)="list"
2022-04-08 21:19:07,020 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,020 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,020 : INFO -> Inside convert_list()
2022-04-08 21:19:07,020 : INFO -> Looping inside convert_list(): item="{'constituentID': 1080, 'role': 'Maker', 'name': 'Bela Lyon Pratt', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'gender': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,020 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'constituentID': 1080, 'role': 'Maker', 'name': 'Bela Lyon Pratt', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'gender': ''}"
2022-04-08 21:19:07,021 : INFO -> Looping inside convert_dict(): key="constituentID", val="1080", type(val)="int"
2022-04-08 21:19:07,021 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,021 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,021 : INFO -> Inside convert_kv(): key="constituentID", val="1080", type(val) is: "int"
2022-04-08 21:19:07,021 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,021 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,021 : INFO -> Looping inside convert_dict(): key="role", val="Maker", type(val)="str"
2022-04-08 21:19:07,021 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,021 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,021 : INFO -> Inside convert_kv(): key="role", val="Maker", type(val) is: "str"
2022-04-08 21:19:07,021 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,021 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,021 : INFO -> Looping inside convert_dict(): key="name", val="Bela Lyon Pratt", type(val)="str"
2022-04-08 21:19:07,021 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,021 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,022 : INFO -> Inside convert_kv(): key="name", val="Bela Lyon Pratt", type(val) is: "str"
2022-04-08 21:19:07,022 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,022 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,022 : INFO -> Looping inside convert_dict(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500095555", type(val)="str"
2022-04-08 21:19:07,022 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,022 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,022 : INFO -> Inside convert_kv(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500095555", type(val) is: "str"
2022-04-08 21:19:07,022 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,022 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,022 : INFO -> Looping inside convert_dict(): key="constituentWikidata_URL", val="https://www.wikidata.org/wiki/Q4881787", type(val)="str"
2022-04-08 21:19:07,022 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,022 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,022 : INFO -> Inside convert_kv(): key="constituentWikidata_URL", val="https://www.wikidata.org/wiki/Q4881787", type(val) is: "str"
2022-04-08 21:19:07,022 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,022 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,022 : INFO -> Looping inside convert_dict(): key="gender", val="", type(val)="str"
2022-04-08 21:19:07,022 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,023 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,023 : INFO -> Inside convert_kv(): key="gender", val="", type(val) is: "str"
2022-04-08 21:19:07,023 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,023 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,023 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,023 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,023 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,023 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,023 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,023 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,023 : INFO -> Looping inside convert_dict(): key="objectName", val="Coin", type(val)="str"
2022-04-08 21:19:07,023 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,023 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,023 : INFO -> Inside convert_kv(): key="objectName", val="Coin", type(val) is: "str"
2022-04-08 21:19:07,023 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,023 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,024 : INFO -> Looping inside convert_dict(): key="title", val="Two-and-a-half-dollar Indian Head Coin", type(val)="str"
2022-04-08 21:19:07,024 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,024 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,024 : INFO -> Inside convert_kv(): key="title", val="Two-and-a-half-dollar Indian Head Coin", type(val) is: "str"
2022-04-08 21:19:07,024 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,024 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,024 : INFO -> Looping inside convert_dict(): key="culture", val="", type(val)="str"
2022-04-08 21:19:07,024 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,024 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,024 : INFO -> Inside convert_kv(): key="culture", val="", type(val) is: "str"
2022-04-08 21:19:07,024 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,024 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,024 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,024 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,024 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,024 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,024 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,024 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,025 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,025 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,025 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,025 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,025 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,025 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,025 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,025 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,025 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,025 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,025 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,025 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,025 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,025 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,025 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,025 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,025 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,026 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,026 : INFO -> Looping inside convert_dict(): key="artistRole", val="Maker", type(val)="str"
2022-04-08 21:19:07,026 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,026 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,026 : INFO -> Inside convert_kv(): key="artistRole", val="Maker", type(val) is: "str"
2022-04-08 21:19:07,026 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,026 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,026 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,026 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,026 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,026 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,026 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,026 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,026 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="Bela Lyon Pratt", type(val)="str"
2022-04-08 21:19:07,026 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,026 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,026 : INFO -> Inside convert_kv(): key="artistDisplayName", val="Bela Lyon Pratt", type(val) is: "str"
2022-04-08 21:19:07,027 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,027 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,027 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="1867–1917", type(val)="str"
2022-04-08 21:19:07,027 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,027 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,027 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="1867–1917", type(val) is: "str"
2022-04-08 21:19:07,027 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,027 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,027 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,027 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,027 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,027 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,027 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,027 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,027 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="Pratt, Bela Lyon", type(val)="str"
2022-04-08 21:19:07,027 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,027 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,028 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="Pratt, Bela Lyon", type(val) is: "str"
2022-04-08 21:19:07,028 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,028 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,028 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,028 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,028 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,028 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,028 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,028 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,028 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="1867", type(val)="str"
2022-04-08 21:19:07,028 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,028 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,028 : INFO -> Inside convert_kv(): key="artistBeginDate", val="1867", type(val) is: "str"
2022-04-08 21:19:07,028 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,028 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,028 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="1917", type(val)="str"
2022-04-08 21:19:07,028 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,029 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,029 : INFO -> Inside convert_kv(): key="artistEndDate", val="1917", type(val) is: "str"
2022-04-08 21:19:07,029 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,029 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,029 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,029 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,029 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,029 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,029 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,029 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,029 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="https://www.wikidata.org/wiki/Q4881787", type(val)="str"
2022-04-08 21:19:07,029 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,029 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,029 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="https://www.wikidata.org/wiki/Q4881787", type(val) is: "str"
2022-04-08 21:19:07,029 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,029 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,029 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500095555", type(val)="str"
2022-04-08 21:19:07,030 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,030 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,030 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500095555", type(val) is: "str"
2022-04-08 21:19:07,030 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,030 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,030 : INFO -> Looping inside convert_dict(): key="objectDate", val="1912", type(val)="str"
2022-04-08 21:19:07,030 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,030 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,030 : INFO -> Inside convert_kv(): key="objectDate", val="1912", type(val) is: "str"
2022-04-08 21:19:07,030 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,030 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,030 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1912", type(val)="int"
2022-04-08 21:19:07,030 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,030 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,030 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1912", type(val) is: "int"
2022-04-08 21:19:07,030 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,030 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,031 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1912", type(val)="int"
2022-04-08 21:19:07,031 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,031 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,031 : INFO -> Inside convert_kv(): key="objectEndDate", val="1912", type(val) is: "int"
2022-04-08 21:19:07,031 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,031 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,031 : INFO -> Looping inside convert_dict(): key="medium", val="Gold", type(val)="str"
2022-04-08 21:19:07,031 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,031 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,031 : INFO -> Inside convert_kv(): key="medium", val="Gold", type(val) is: "str"
2022-04-08 21:19:07,031 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,031 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,031 : INFO -> Looping inside convert_dict(): key="dimensions", val="Dimensions unavailable", type(val)="str"
2022-04-08 21:19:07,031 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,031 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,031 : INFO -> Inside convert_kv(): key="dimensions", val="Dimensions unavailable", type(val) is: "str"
2022-04-08 21:19:07,031 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,032 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,032 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}]", type(val)="list"
2022-04-08 21:19:07,032 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,032 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,032 : INFO -> Inside convert_list()
2022-04-08 21:19:07,032 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}", item_name="item", type="dict"
2022-04-08 21:19:07,032 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}"
2022-04-08 21:19:07,032 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,032 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,032 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,032 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,032 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,032 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,032 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,032 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,032 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,032 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,033 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,033 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,033 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 1.7}", type(val)="dict"
2022-04-08 21:19:07,033 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,033 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,033 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 1.7}"
2022-04-08 21:19:07,033 : INFO -> Looping inside convert_dict(): key="Diameter", val="1.7", type(val)="float"
2022-04-08 21:19:07,033 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,033 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,033 : INFO -> Inside convert_kv(): key="Diameter", val="1.7", type(val) is: "float"
2022-04-08 21:19:07,033 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,033 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,033 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Heinz L. Stoppelmann, 1979", type(val)="str"
2022-04-08 21:19:07,033 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,033 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,033 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Heinz L. Stoppelmann, 1979", type(val) is: "str"
2022-04-08 21:19:07,033 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,033 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,034 : INFO -> Looping inside convert_dict(): key="geographyType", val="", type(val)="str"
2022-04-08 21:19:07,034 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,034 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,034 : INFO -> Inside convert_kv(): key="geographyType", val="", type(val) is: "str"
2022-04-08 21:19:07,034 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,034 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,034 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,034 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,034 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,034 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,034 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,034 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,034 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,034 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,034 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,034 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,034 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,035 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,035 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,035 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,035 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,035 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,035 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,035 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,035 : INFO -> Looping inside convert_dict(): key="country", val="", type(val)="str"
2022-04-08 21:19:07,035 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,035 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,035 : INFO -> Inside convert_kv(): key="country", val="", type(val) is: "str"
2022-04-08 21:19:07,035 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,035 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,035 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,035 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,035 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,036 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,036 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,036 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,036 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,036 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,036 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,036 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,036 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,036 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,036 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,036 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,036 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,036 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,036 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,036 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,036 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,036 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,037 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,037 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,037 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,037 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,037 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,037 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,037 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,037 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,037 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,037 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,037 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,037 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,037 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,037 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,037 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,037 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,037 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,038 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,038 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,038 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,038 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,038 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,038 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,038 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,038 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,038 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,038 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,038 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,038 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,038 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,038 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,038 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,038 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,038 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,039 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,039 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,039 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,039 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,039 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,039 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,039 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,039 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,039 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,039 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,039 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,039 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,039 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/10", type(val)="str"
2022-04-08 21:19:07,039 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,039 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,040 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/10", type(val) is: "str"
2022-04-08 21:19:07,040 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,040 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,040 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,040 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,040 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,040 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,040 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,040 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,040 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,040 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,040 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,040 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,040 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,040 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,040 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,041 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,041 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,041 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,041 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,041 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,041 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,041 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,041 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,041 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,041 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,041 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,041 : INFO -> Looping inside convert_list(): item="{'objectID': 11, 'isHighlight': False, 'accessionNumber': '1979.486.2', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-half-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Christian Gobrecht', 'artistDisplayBio': '1785–1844', 'artistSuffix': '', 'artistAlphaSort': 'Gobrecht, Christian', 'artistNationality': '', 'artistBeginDate': '1785', 'artistEndDate': '1844', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'objectDate': '1907', 'objectBeginDate': 1907, 'objectEndDate': 1907, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/11', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,041 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 11, 'isHighlight': False, 'accessionNumber': '1979.486.2', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Two-and-a-half-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Christian Gobrecht', 'artistDisplayBio': '1785–1844', 'artistSuffix': '', 'artistAlphaSort': 'Gobrecht, Christian', 'artistNationality': '', 'artistBeginDate': '1785', 'artistEndDate': '1844', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'objectDate': '1907', 'objectBeginDate': 1907, 'objectEndDate': 1907, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/11', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,041 : INFO -> Looping inside convert_dict(): key="objectID", val="11", type(val)="int"
2022-04-08 21:19:07,041 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,041 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,042 : INFO -> Inside convert_kv(): key="objectID", val="11", type(val) is: "int"
2022-04-08 21:19:07,042 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,042 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,042 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,042 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,042 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,042 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,042 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,042 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,042 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="1979.486.2", type(val)="str"
2022-04-08 21:19:07,042 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,042 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,042 : INFO -> Inside convert_kv(): key="accessionNumber", val="1979.486.2", type(val) is: "str"
2022-04-08 21:19:07,042 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,042 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,042 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1979", type(val)="str"
2022-04-08 21:19:07,042 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,043 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,043 : INFO -> Inside convert_kv(): key="accessionYear", val="1979", type(val) is: "str"
2022-04-08 21:19:07,043 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,043 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,043 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,043 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,043 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,043 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,043 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,043 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,043 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,043 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,043 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,043 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,043 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,043 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,043 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,044 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,044 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,044 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,044 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,044 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,044 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,044 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,044 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,044 : INFO -> Inside convert_list()
2022-04-08 21:19:07,044 : INFO -> Looping inside convert_dict(): key="constituents", val="[{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}]", type(val)="list"
2022-04-08 21:19:07,044 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,044 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,044 : INFO -> Inside convert_list()
2022-04-08 21:19:07,044 : INFO -> Looping inside convert_list(): item="{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,044 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}"
2022-04-08 21:19:07,044 : INFO -> Looping inside convert_dict(): key="constituentID", val="1079", type(val)="int"
2022-04-08 21:19:07,044 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,044 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,045 : INFO -> Inside convert_kv(): key="constituentID", val="1079", type(val) is: "int"
2022-04-08 21:19:07,045 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,045 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,045 : INFO -> Looping inside convert_dict(): key="role", val="Maker", type(val)="str"
2022-04-08 21:19:07,045 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,045 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,045 : INFO -> Inside convert_kv(): key="role", val="Maker", type(val) is: "str"
2022-04-08 21:19:07,045 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,045 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,045 : INFO -> Looping inside convert_dict(): key="name", val="Christian Gobrecht", type(val)="str"
2022-04-08 21:19:07,045 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,045 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,045 : INFO -> Inside convert_kv(): key="name", val="Christian Gobrecht", type(val) is: "str"
2022-04-08 21:19:07,045 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,045 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,045 : INFO -> Looping inside convert_dict(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500077295", type(val)="str"
2022-04-08 21:19:07,046 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,046 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,046 : INFO -> Inside convert_kv(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500077295", type(val) is: "str"
2022-04-08 21:19:07,046 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,046 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,046 : INFO -> Looping inside convert_dict(): key="constituentWikidata_URL", val="https://www.wikidata.org/wiki/Q5109648", type(val)="str"
2022-04-08 21:19:07,046 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,046 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,046 : INFO -> Inside convert_kv(): key="constituentWikidata_URL", val="https://www.wikidata.org/wiki/Q5109648", type(val) is: "str"
2022-04-08 21:19:07,046 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,046 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,046 : INFO -> Looping inside convert_dict(): key="gender", val="", type(val)="str"
2022-04-08 21:19:07,046 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,046 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,046 : INFO -> Inside convert_kv(): key="gender", val="", type(val) is: "str"
2022-04-08 21:19:07,046 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,046 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,047 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,047 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,047 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,047 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,047 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,047 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,047 : INFO -> Looping inside convert_dict(): key="objectName", val="Coin", type(val)="str"
2022-04-08 21:19:07,047 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,047 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,047 : INFO -> Inside convert_kv(): key="objectName", val="Coin", type(val) is: "str"
2022-04-08 21:19:07,047 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,047 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,047 : INFO -> Looping inside convert_dict(): key="title", val="Two-and-a-half-dollar Liberty Head Coin", type(val)="str"
2022-04-08 21:19:07,047 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,047 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,047 : INFO -> Inside convert_kv(): key="title", val="Two-and-a-half-dollar Liberty Head Coin", type(val) is: "str"
2022-04-08 21:19:07,047 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,048 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,048 : INFO -> Looping inside convert_dict(): key="culture", val="", type(val)="str"
2022-04-08 21:19:07,048 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,048 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,048 : INFO -> Inside convert_kv(): key="culture", val="", type(val) is: "str"
2022-04-08 21:19:07,048 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,048 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,048 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,048 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,048 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,048 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,048 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,048 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,048 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,048 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,048 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,048 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,049 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,049 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,049 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,049 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,049 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,049 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,049 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,049 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,049 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,049 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,049 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,049 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,049 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,049 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,049 : INFO -> Looping inside convert_dict(): key="artistRole", val="Maker", type(val)="str"
2022-04-08 21:19:07,049 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,049 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,050 : INFO -> Inside convert_kv(): key="artistRole", val="Maker", type(val) is: "str"
2022-04-08 21:19:07,050 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,050 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,050 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,050 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,050 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,050 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,050 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,050 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,050 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="Christian Gobrecht", type(val)="str"
2022-04-08 21:19:07,050 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,050 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,051 : INFO -> Inside convert_kv(): key="artistDisplayName", val="Christian Gobrecht", type(val) is: "str"
2022-04-08 21:19:07,051 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,051 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,051 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="1785–1844", type(val)="str"
2022-04-08 21:19:07,051 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,051 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,051 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="1785–1844", type(val) is: "str"
2022-04-08 21:19:07,051 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,051 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,052 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,052 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,052 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,052 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,052 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,052 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,052 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="Gobrecht, Christian", type(val)="str"
2022-04-08 21:19:07,052 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,052 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,052 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="Gobrecht, Christian", type(val) is: "str"
2022-04-08 21:19:07,052 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,052 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,053 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,053 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,053 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,053 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,053 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,053 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,053 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="1785", type(val)="str"
2022-04-08 21:19:07,053 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,053 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,053 : INFO -> Inside convert_kv(): key="artistBeginDate", val="1785", type(val) is: "str"
2022-04-08 21:19:07,053 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,053 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,053 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="1844", type(val)="str"
2022-04-08 21:19:07,053 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,053 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,053 : INFO -> Inside convert_kv(): key="artistEndDate", val="1844", type(val) is: "str"
2022-04-08 21:19:07,053 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,054 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,054 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,054 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,054 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,054 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,054 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,054 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,054 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="https://www.wikidata.org/wiki/Q5109648", type(val)="str"
2022-04-08 21:19:07,054 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,054 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,054 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="https://www.wikidata.org/wiki/Q5109648", type(val) is: "str"
2022-04-08 21:19:07,054 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,054 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,054 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500077295", type(val)="str"
2022-04-08 21:19:07,054 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,054 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,054 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500077295", type(val) is: "str"
2022-04-08 21:19:07,055 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,055 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,055 : INFO -> Looping inside convert_dict(): key="objectDate", val="1907", type(val)="str"
2022-04-08 21:19:07,055 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,055 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,055 : INFO -> Inside convert_kv(): key="objectDate", val="1907", type(val) is: "str"
2022-04-08 21:19:07,055 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,055 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,055 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1907", type(val)="int"
2022-04-08 21:19:07,055 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,055 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,055 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1907", type(val) is: "int"
2022-04-08 21:19:07,055 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,055 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,055 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1907", type(val)="int"
2022-04-08 21:19:07,055 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,055 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,056 : INFO -> Inside convert_kv(): key="objectEndDate", val="1907", type(val) is: "int"
2022-04-08 21:19:07,056 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,056 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,056 : INFO -> Looping inside convert_dict(): key="medium", val="Gold", type(val)="str"
2022-04-08 21:19:07,056 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,056 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,056 : INFO -> Inside convert_kv(): key="medium", val="Gold", type(val) is: "str"
2022-04-08 21:19:07,056 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,056 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,056 : INFO -> Looping inside convert_dict(): key="dimensions", val="Dimensions unavailable", type(val)="str"
2022-04-08 21:19:07,056 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,056 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,056 : INFO -> Inside convert_kv(): key="dimensions", val="Dimensions unavailable", type(val) is: "str"
2022-04-08 21:19:07,056 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,056 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,056 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}]", type(val)="list"
2022-04-08 21:19:07,056 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,057 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,057 : INFO -> Inside convert_list()
2022-04-08 21:19:07,057 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}", item_name="item", type="dict"
2022-04-08 21:19:07,057 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}"
2022-04-08 21:19:07,057 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,057 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,057 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,057 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,057 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,057 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,057 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,057 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,057 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,057 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,057 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,057 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,057 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 1.7}", type(val)="dict"
2022-04-08 21:19:07,058 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,058 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,058 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 1.7}"
2022-04-08 21:19:07,058 : INFO -> Looping inside convert_dict(): key="Diameter", val="1.7", type(val)="float"
2022-04-08 21:19:07,058 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,058 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,058 : INFO -> Inside convert_kv(): key="Diameter", val="1.7", type(val) is: "float"
2022-04-08 21:19:07,058 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,058 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,058 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Heinz L. Stoppelmann, 1979", type(val)="str"
2022-04-08 21:19:07,058 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,058 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,058 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Heinz L. Stoppelmann, 1979", type(val) is: "str"
2022-04-08 21:19:07,058 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,058 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,059 : INFO -> Looping inside convert_dict(): key="geographyType", val="", type(val)="str"
2022-04-08 21:19:07,059 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,059 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,059 : INFO -> Inside convert_kv(): key="geographyType", val="", type(val) is: "str"
2022-04-08 21:19:07,059 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,059 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,059 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,059 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,059 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,059 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,059 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,059 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,059 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,059 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,059 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,059 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,059 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,060 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,060 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,060 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,060 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,060 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,060 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,060 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,060 : INFO -> Looping inside convert_dict(): key="country", val="", type(val)="str"
2022-04-08 21:19:07,060 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,060 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,060 : INFO -> Inside convert_kv(): key="country", val="", type(val) is: "str"
2022-04-08 21:19:07,060 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,060 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,060 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,060 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,060 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,060 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,061 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,061 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,061 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,061 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,061 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,061 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,061 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,061 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,061 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,061 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,061 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,061 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,061 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,061 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,061 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,061 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,061 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,061 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,062 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,062 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,062 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,062 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,062 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,062 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,062 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,062 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,062 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,062 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,062 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,062 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,062 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,062 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,062 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,062 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,062 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,063 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,063 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,063 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,063 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,063 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,063 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,063 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,063 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,063 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,063 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,063 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,063 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,063 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,063 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,063 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,063 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,063 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,063 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,064 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,064 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,064 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,064 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,064 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,064 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,064 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,064 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,064 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,064 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/11", type(val)="str"
2022-04-08 21:19:07,064 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,064 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,064 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/11", type(val) is: "str"
2022-04-08 21:19:07,064 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,064 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,064 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,064 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,065 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,065 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,065 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,065 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,065 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,065 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,065 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,065 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,065 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,065 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,065 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,065 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,065 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,065 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,065 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,065 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,065 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,066 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,066 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,066 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,066 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,066 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,066 : INFO -> Looping inside convert_list(): item="{'objectID': 12, 'isHighlight': False, 'accessionNumber': '1979.486.7', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 164292, 'role': 'Maker', 'name': 'James Barton Longacre', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Twenty-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'James Barton Longacre', 'artistDisplayBio': 'American, Delaware County, Pennsylvania 1794–1869 Philadelphia, Pennsylvania', 'artistSuffix': '', 'artistAlphaSort': 'Longacre, James Barton', 'artistNationality': 'American', 'artistBeginDate': '1794', 'artistEndDate': '1869', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'objectDate': '1876', 'objectBeginDate': 1876, 'objectEndDate': 1876, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/12', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,066 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 12, 'isHighlight': False, 'accessionNumber': '1979.486.7', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 164292, 'role': 'Maker', 'name': 'James Barton Longacre', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Twenty-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'James Barton Longacre', 'artistDisplayBio': 'American, Delaware County, Pennsylvania 1794–1869 Philadelphia, Pennsylvania', 'artistSuffix': '', 'artistAlphaSort': 'Longacre, James Barton', 'artistNationality': 'American', 'artistBeginDate': '1794', 'artistEndDate': '1869', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'objectDate': '1876', 'objectBeginDate': 1876, 'objectEndDate': 1876, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/12', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,066 : INFO -> Looping inside convert_dict(): key="objectID", val="12", type(val)="int"
2022-04-08 21:19:07,066 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,066 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,066 : INFO -> Inside convert_kv(): key="objectID", val="12", type(val) is: "int"
2022-04-08 21:19:07,066 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,066 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,066 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,066 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,066 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,067 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,067 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,067 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,067 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="1979.486.7", type(val)="str"
2022-04-08 21:19:07,067 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,067 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,067 : INFO -> Inside convert_kv(): key="accessionNumber", val="1979.486.7", type(val) is: "str"
2022-04-08 21:19:07,067 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,067 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,067 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1979", type(val)="str"
2022-04-08 21:19:07,067 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,067 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,067 : INFO -> Inside convert_kv(): key="accessionYear", val="1979", type(val) is: "str"
2022-04-08 21:19:07,067 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,067 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,068 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,068 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,068 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,068 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,068 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,068 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,068 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,068 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,068 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,068 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,068 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,068 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,068 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,068 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,068 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,068 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,068 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,068 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,069 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,069 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,069 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,069 : INFO -> Inside convert_list()
2022-04-08 21:19:07,069 : INFO -> Looping inside convert_dict(): key="constituents", val="[{'constituentID': 164292, 'role': 'Maker', 'name': 'James Barton Longacre', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'gender': ''}]", type(val)="list"
2022-04-08 21:19:07,069 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,069 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,069 : INFO -> Inside convert_list()
2022-04-08 21:19:07,069 : INFO -> Looping inside convert_list(): item="{'constituentID': 164292, 'role': 'Maker', 'name': 'James Barton Longacre', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'gender': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,069 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'constituentID': 164292, 'role': 'Maker', 'name': 'James Barton Longacre', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500011409', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q3806459', 'gender': ''}"
2022-04-08 21:19:07,069 : INFO -> Looping inside convert_dict(): key="constituentID", val="164292", type(val)="int"
2022-04-08 21:19:07,069 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,069 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,069 : INFO -> Inside convert_kv(): key="constituentID", val="164292", type(val) is: "int"
2022-04-08 21:19:07,069 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,069 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,069 : INFO -> Looping inside convert_dict(): key="role", val="Maker", type(val)="str"
2022-04-08 21:19:07,069 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,070 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,070 : INFO -> Inside convert_kv(): key="role", val="Maker", type(val) is: "str"
2022-04-08 21:19:07,070 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,070 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,070 : INFO -> Looping inside convert_dict(): key="name", val="James Barton Longacre", type(val)="str"
2022-04-08 21:19:07,070 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,070 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,070 : INFO -> Inside convert_kv(): key="name", val="James Barton Longacre", type(val) is: "str"
2022-04-08 21:19:07,070 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,070 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,070 : INFO -> Looping inside convert_dict(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500011409", type(val)="str"
2022-04-08 21:19:07,070 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,070 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,070 : INFO -> Inside convert_kv(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500011409", type(val) is: "str"
2022-04-08 21:19:07,070 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,070 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,071 : INFO -> Looping inside convert_dict(): key="constituentWikidata_URL", val="https://www.wikidata.org/wiki/Q3806459", type(val)="str"
2022-04-08 21:19:07,071 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,071 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,071 : INFO -> Inside convert_kv(): key="constituentWikidata_URL", val="https://www.wikidata.org/wiki/Q3806459", type(val) is: "str"
2022-04-08 21:19:07,071 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,071 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,071 : INFO -> Looping inside convert_dict(): key="gender", val="", type(val)="str"
2022-04-08 21:19:07,071 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,071 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,071 : INFO -> Inside convert_kv(): key="gender", val="", type(val) is: "str"
2022-04-08 21:19:07,071 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,071 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,071 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,071 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,071 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,071 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,071 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,072 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,072 : INFO -> Looping inside convert_dict(): key="objectName", val="Coin", type(val)="str"
2022-04-08 21:19:07,072 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,072 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,072 : INFO -> Inside convert_kv(): key="objectName", val="Coin", type(val) is: "str"
2022-04-08 21:19:07,072 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,072 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,072 : INFO -> Looping inside convert_dict(): key="title", val="Twenty-dollar Liberty Head Coin", type(val)="str"
2022-04-08 21:19:07,072 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,072 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,072 : INFO -> Inside convert_kv(): key="title", val="Twenty-dollar Liberty Head Coin", type(val) is: "str"
2022-04-08 21:19:07,072 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,072 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,072 : INFO -> Looping inside convert_dict(): key="culture", val="", type(val)="str"
2022-04-08 21:19:07,072 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,072 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,072 : INFO -> Inside convert_kv(): key="culture", val="", type(val) is: "str"
2022-04-08 21:19:07,072 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,073 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,073 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,073 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,073 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,073 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,073 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,073 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,073 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,073 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,073 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,073 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,073 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,073 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,073 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,073 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,073 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,073 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,074 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,074 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,074 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,074 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,074 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,074 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,074 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,074 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,074 : INFO -> Looping inside convert_dict(): key="artistRole", val="Maker", type(val)="str"
2022-04-08 21:19:07,074 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,074 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,074 : INFO -> Inside convert_kv(): key="artistRole", val="Maker", type(val) is: "str"
2022-04-08 21:19:07,074 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,074 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,074 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,074 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,074 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,075 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,075 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,075 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,075 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="James Barton Longacre", type(val)="str"
2022-04-08 21:19:07,075 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,075 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,075 : INFO -> Inside convert_kv(): key="artistDisplayName", val="James Barton Longacre", type(val) is: "str"
2022-04-08 21:19:07,075 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,075 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,075 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="American, Delaware County, Pennsylvania 1794–1869 Philadelphia, Pennsylvania", type(val)="str"
2022-04-08 21:19:07,075 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,075 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,075 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="American, Delaware County, Pennsylvania 1794–1869 Philadelphia, Pennsylvania", type(val) is: "str"
2022-04-08 21:19:07,075 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,075 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,076 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,076 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,076 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,076 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,076 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,076 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,076 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="Longacre, James Barton", type(val)="str"
2022-04-08 21:19:07,076 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,076 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,076 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="Longacre, James Barton", type(val) is: "str"
2022-04-08 21:19:07,076 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,076 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,076 : INFO -> Looping inside convert_dict(): key="artistNationality", val="American", type(val)="str"
2022-04-08 21:19:07,076 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,076 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,076 : INFO -> Inside convert_kv(): key="artistNationality", val="American", type(val) is: "str"
2022-04-08 21:19:07,076 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,076 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,077 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="1794", type(val)="str"
2022-04-08 21:19:07,077 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,077 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,077 : INFO -> Inside convert_kv(): key="artistBeginDate", val="1794", type(val) is: "str"
2022-04-08 21:19:07,077 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,077 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,077 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="1869", type(val)="str"
2022-04-08 21:19:07,077 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,077 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,077 : INFO -> Inside convert_kv(): key="artistEndDate", val="1869", type(val) is: "str"
2022-04-08 21:19:07,077 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,077 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,077 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,077 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,077 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,077 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,077 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,078 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,078 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="https://www.wikidata.org/wiki/Q3806459", type(val)="str"
2022-04-08 21:19:07,078 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,078 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,078 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="https://www.wikidata.org/wiki/Q3806459", type(val) is: "str"
2022-04-08 21:19:07,078 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,078 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,078 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500011409", type(val)="str"
2022-04-08 21:19:07,078 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,078 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,078 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500011409", type(val) is: "str"
2022-04-08 21:19:07,078 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,078 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,078 : INFO -> Looping inside convert_dict(): key="objectDate", val="1876", type(val)="str"
2022-04-08 21:19:07,078 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,078 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,078 : INFO -> Inside convert_kv(): key="objectDate", val="1876", type(val) is: "str"
2022-04-08 21:19:07,079 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,079 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,079 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1876", type(val)="int"
2022-04-08 21:19:07,079 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,079 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,079 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1876", type(val) is: "int"
2022-04-08 21:19:07,079 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,079 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,079 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1876", type(val)="int"
2022-04-08 21:19:07,079 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,079 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,079 : INFO -> Inside convert_kv(): key="objectEndDate", val="1876", type(val) is: "int"
2022-04-08 21:19:07,079 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,079 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,079 : INFO -> Looping inside convert_dict(): key="medium", val="Gold", type(val)="str"
2022-04-08 21:19:07,079 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,079 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,080 : INFO -> Inside convert_kv(): key="medium", val="Gold", type(val) is: "str"
2022-04-08 21:19:07,080 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,080 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,080 : INFO -> Looping inside convert_dict(): key="dimensions", val="Dimensions unavailable", type(val)="str"
2022-04-08 21:19:07,080 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,080 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,080 : INFO -> Inside convert_kv(): key="dimensions", val="Dimensions unavailable", type(val) is: "str"
2022-04-08 21:19:07,080 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,080 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,080 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}]", type(val)="list"
2022-04-08 21:19:07,080 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,080 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,080 : INFO -> Inside convert_list()
2022-04-08 21:19:07,080 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}", item_name="item", type="dict"
2022-04-08 21:19:07,080 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}"
2022-04-08 21:19:07,080 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,080 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,080 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,081 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,081 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,081 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,081 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,081 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,081 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,081 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,081 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,081 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,081 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 1.7}", type(val)="dict"
2022-04-08 21:19:07,081 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,081 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,081 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 1.7}"
2022-04-08 21:19:07,081 : INFO -> Looping inside convert_dict(): key="Diameter", val="1.7", type(val)="float"
2022-04-08 21:19:07,081 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,081 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,081 : INFO -> Inside convert_kv(): key="Diameter", val="1.7", type(val) is: "float"
2022-04-08 21:19:07,081 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,082 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,082 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Heinz L. Stoppelmann, 1979", type(val)="str"
2022-04-08 21:19:07,082 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,082 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,082 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Heinz L. Stoppelmann, 1979", type(val) is: "str"
2022-04-08 21:19:07,082 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,082 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,082 : INFO -> Looping inside convert_dict(): key="geographyType", val="", type(val)="str"
2022-04-08 21:19:07,082 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,082 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,082 : INFO -> Inside convert_kv(): key="geographyType", val="", type(val) is: "str"
2022-04-08 21:19:07,082 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,082 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,082 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,082 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,082 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,083 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,083 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,083 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,083 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,083 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,083 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,083 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,083 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,083 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,083 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,083 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,083 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,083 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,083 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,083 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,083 : INFO -> Looping inside convert_dict(): key="country", val="", type(val)="str"
2022-04-08 21:19:07,083 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,083 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,084 : INFO -> Inside convert_kv(): key="country", val="", type(val) is: "str"
2022-04-08 21:19:07,084 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,084 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,084 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,084 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,084 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,084 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,084 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,084 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,084 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,084 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,084 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,084 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,084 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,084 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,084 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,084 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,085 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,085 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,085 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,085 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,085 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,085 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,085 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,085 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,085 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,085 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,085 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,085 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,085 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,085 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,085 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,085 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,085 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,085 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,086 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,086 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,086 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,086 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,086 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,086 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,086 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,086 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,086 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,086 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,086 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,086 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,086 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,086 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,086 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,086 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,087 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,087 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,087 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,087 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,087 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,087 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,087 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,087 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,087 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,087 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,087 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,087 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,087 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,087 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,087 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,087 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,087 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,087 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,088 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/12", type(val)="str"
2022-04-08 21:19:07,088 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,088 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,088 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/12", type(val) is: "str"
2022-04-08 21:19:07,088 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,088 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,088 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,088 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,088 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,088 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,088 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,088 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,088 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,088 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,088 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,088 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,088 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,089 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,089 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,089 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,089 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,089 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,089 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,089 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,089 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,089 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,089 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,089 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,089 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,089 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,089 : INFO -> Looping inside convert_list(): item="{'objectID': 13, 'isHighlight': False, 'accessionNumber': '1979.486.4', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1080, 'role': 'Maker', 'name': 'Bela Lyon Pratt', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Five-dollar Indian Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Bela Lyon Pratt', 'artistDisplayBio': '1867–1917', 'artistSuffix': '', 'artistAlphaSort': 'Pratt, Bela Lyon', 'artistNationality': '', 'artistBeginDate': '1867', 'artistEndDate': '1917', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'objectDate': '1910', 'objectBeginDate': 1910, 'objectEndDate': 1910, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/13', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,089 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 13, 'isHighlight': False, 'accessionNumber': '1979.486.4', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1080, 'role': 'Maker', 'name': 'Bela Lyon Pratt', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Five-dollar Indian Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Bela Lyon Pratt', 'artistDisplayBio': '1867–1917', 'artistSuffix': '', 'artistAlphaSort': 'Pratt, Bela Lyon', 'artistNationality': '', 'artistBeginDate': '1867', 'artistEndDate': '1917', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'objectDate': '1910', 'objectBeginDate': 1910, 'objectEndDate': 1910, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/13', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,090 : INFO -> Looping inside convert_dict(): key="objectID", val="13", type(val)="int"
2022-04-08 21:19:07,090 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,090 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,090 : INFO -> Inside convert_kv(): key="objectID", val="13", type(val) is: "int"
2022-04-08 21:19:07,090 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,090 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,090 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,090 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,090 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,090 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,090 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,090 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,090 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="1979.486.4", type(val)="str"
2022-04-08 21:19:07,090 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,090 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,090 : INFO -> Inside convert_kv(): key="accessionNumber", val="1979.486.4", type(val) is: "str"
2022-04-08 21:19:07,090 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,090 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,091 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1979", type(val)="str"
2022-04-08 21:19:07,091 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,091 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,091 : INFO -> Inside convert_kv(): key="accessionYear", val="1979", type(val) is: "str"
2022-04-08 21:19:07,091 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,091 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,091 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,091 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,091 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,091 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,091 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,091 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,091 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,091 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,091 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,091 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,091 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,092 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,092 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,092 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,092 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,092 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,092 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,092 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,092 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,092 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,092 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,092 : INFO -> Inside convert_list()
2022-04-08 21:19:07,092 : INFO -> Looping inside convert_dict(): key="constituents", val="[{'constituentID': 1080, 'role': 'Maker', 'name': 'Bela Lyon Pratt', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'gender': ''}]", type(val)="list"
2022-04-08 21:19:07,092 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,092 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,092 : INFO -> Inside convert_list()
2022-04-08 21:19:07,092 : INFO -> Looping inside convert_list(): item="{'constituentID': 1080, 'role': 'Maker', 'name': 'Bela Lyon Pratt', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'gender': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,092 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'constituentID': 1080, 'role': 'Maker', 'name': 'Bela Lyon Pratt', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500095555', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q4881787', 'gender': ''}"
2022-04-08 21:19:07,093 : INFO -> Looping inside convert_dict(): key="constituentID", val="1080", type(val)="int"
2022-04-08 21:19:07,093 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,093 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,093 : INFO -> Inside convert_kv(): key="constituentID", val="1080", type(val) is: "int"
2022-04-08 21:19:07,093 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,093 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,093 : INFO -> Looping inside convert_dict(): key="role", val="Maker", type(val)="str"
2022-04-08 21:19:07,093 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,093 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,093 : INFO -> Inside convert_kv(): key="role", val="Maker", type(val) is: "str"
2022-04-08 21:19:07,093 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,093 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,093 : INFO -> Looping inside convert_dict(): key="name", val="Bela Lyon Pratt", type(val)="str"
2022-04-08 21:19:07,093 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,093 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,093 : INFO -> Inside convert_kv(): key="name", val="Bela Lyon Pratt", type(val) is: "str"
2022-04-08 21:19:07,094 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,094 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,094 : INFO -> Looping inside convert_dict(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500095555", type(val)="str"
2022-04-08 21:19:07,094 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,094 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,094 : INFO -> Inside convert_kv(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500095555", type(val) is: "str"
2022-04-08 21:19:07,094 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,094 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,094 : INFO -> Looping inside convert_dict(): key="constituentWikidata_URL", val="https://www.wikidata.org/wiki/Q4881787", type(val)="str"
2022-04-08 21:19:07,094 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,094 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,094 : INFO -> Inside convert_kv(): key="constituentWikidata_URL", val="https://www.wikidata.org/wiki/Q4881787", type(val) is: "str"
2022-04-08 21:19:07,094 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,094 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,094 : INFO -> Looping inside convert_dict(): key="gender", val="", type(val)="str"
2022-04-08 21:19:07,094 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,094 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,095 : INFO -> Inside convert_kv(): key="gender", val="", type(val) is: "str"
2022-04-08 21:19:07,095 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,095 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,095 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,095 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,095 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,095 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,095 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,095 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,095 : INFO -> Looping inside convert_dict(): key="objectName", val="Coin", type(val)="str"
2022-04-08 21:19:07,095 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,095 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,095 : INFO -> Inside convert_kv(): key="objectName", val="Coin", type(val) is: "str"
2022-04-08 21:19:07,095 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,095 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,095 : INFO -> Looping inside convert_dict(): key="title", val="Five-dollar Indian Head Coin", type(val)="str"
2022-04-08 21:19:07,095 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,096 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,096 : INFO -> Inside convert_kv(): key="title", val="Five-dollar Indian Head Coin", type(val) is: "str"
2022-04-08 21:19:07,096 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,096 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,096 : INFO -> Looping inside convert_dict(): key="culture", val="", type(val)="str"
2022-04-08 21:19:07,096 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,096 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,096 : INFO -> Inside convert_kv(): key="culture", val="", type(val) is: "str"
2022-04-08 21:19:07,096 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,096 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,096 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,096 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,096 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,096 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,096 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,096 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,096 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,097 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,097 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,097 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,097 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,097 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,097 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,097 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,097 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,097 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,097 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,097 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,097 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,097 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,097 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,097 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,097 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,097 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,098 : INFO -> Looping inside convert_dict(): key="artistRole", val="Maker", type(val)="str"
2022-04-08 21:19:07,098 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,098 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,098 : INFO -> Inside convert_kv(): key="artistRole", val="Maker", type(val) is: "str"
2022-04-08 21:19:07,098 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,098 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,098 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,098 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,098 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,098 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,098 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,098 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,098 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="Bela Lyon Pratt", type(val)="str"
2022-04-08 21:19:07,098 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,098 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,098 : INFO -> Inside convert_kv(): key="artistDisplayName", val="Bela Lyon Pratt", type(val) is: "str"
2022-04-08 21:19:07,098 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,098 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,099 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="1867–1917", type(val)="str"
2022-04-08 21:19:07,099 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,099 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,099 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="1867–1917", type(val) is: "str"
2022-04-08 21:19:07,099 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,099 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,099 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,099 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,099 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,099 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,099 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,099 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,099 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="Pratt, Bela Lyon", type(val)="str"
2022-04-08 21:19:07,099 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,099 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,099 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="Pratt, Bela Lyon", type(val) is: "str"
2022-04-08 21:19:07,099 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,100 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,100 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,100 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,100 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,100 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,100 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,100 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,100 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="1867", type(val)="str"
2022-04-08 21:19:07,100 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,100 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,100 : INFO -> Inside convert_kv(): key="artistBeginDate", val="1867", type(val) is: "str"
2022-04-08 21:19:07,100 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,100 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,100 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="1917", type(val)="str"
2022-04-08 21:19:07,100 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,100 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,100 : INFO -> Inside convert_kv(): key="artistEndDate", val="1917", type(val) is: "str"
2022-04-08 21:19:07,101 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,101 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,101 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,101 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,101 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,101 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,101 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,101 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,101 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="https://www.wikidata.org/wiki/Q4881787", type(val)="str"
2022-04-08 21:19:07,101 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,101 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,101 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="https://www.wikidata.org/wiki/Q4881787", type(val) is: "str"
2022-04-08 21:19:07,101 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,101 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,101 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500095555", type(val)="str"
2022-04-08 21:19:07,101 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,101 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,101 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500095555", type(val) is: "str"
2022-04-08 21:19:07,102 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,102 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,102 : INFO -> Looping inside convert_dict(): key="objectDate", val="1910", type(val)="str"
2022-04-08 21:19:07,102 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,102 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,102 : INFO -> Inside convert_kv(): key="objectDate", val="1910", type(val) is: "str"
2022-04-08 21:19:07,102 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,102 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,102 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1910", type(val)="int"
2022-04-08 21:19:07,102 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,102 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,102 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1910", type(val) is: "int"
2022-04-08 21:19:07,102 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,102 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,102 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1910", type(val)="int"
2022-04-08 21:19:07,102 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,102 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,103 : INFO -> Inside convert_kv(): key="objectEndDate", val="1910", type(val) is: "int"
2022-04-08 21:19:07,103 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,103 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,103 : INFO -> Looping inside convert_dict(): key="medium", val="Gold", type(val)="str"
2022-04-08 21:19:07,103 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,103 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,103 : INFO -> Inside convert_kv(): key="medium", val="Gold", type(val) is: "str"
2022-04-08 21:19:07,103 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,103 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,103 : INFO -> Looping inside convert_dict(): key="dimensions", val="Dimensions unavailable", type(val)="str"
2022-04-08 21:19:07,103 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,103 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,103 : INFO -> Inside convert_kv(): key="dimensions", val="Dimensions unavailable", type(val) is: "str"
2022-04-08 21:19:07,103 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,103 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,103 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}]", type(val)="list"
2022-04-08 21:19:07,103 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,104 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,104 : INFO -> Inside convert_list()
2022-04-08 21:19:07,104 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}", item_name="item", type="dict"
2022-04-08 21:19:07,104 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}"
2022-04-08 21:19:07,104 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,104 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,104 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,104 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,104 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,104 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,104 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,104 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,104 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,104 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,104 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,104 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,104 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 1.7}", type(val)="dict"
2022-04-08 21:19:07,104 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,105 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,105 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 1.7}"
2022-04-08 21:19:07,105 : INFO -> Looping inside convert_dict(): key="Diameter", val="1.7", type(val)="float"
2022-04-08 21:19:07,105 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,105 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,105 : INFO -> Inside convert_kv(): key="Diameter", val="1.7", type(val) is: "float"
2022-04-08 21:19:07,105 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,105 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,105 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Heinz L. Stoppelmann, 1979", type(val)="str"
2022-04-08 21:19:07,105 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,105 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,105 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Heinz L. Stoppelmann, 1979", type(val) is: "str"
2022-04-08 21:19:07,105 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,105 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,105 : INFO -> Looping inside convert_dict(): key="geographyType", val="", type(val)="str"
2022-04-08 21:19:07,105 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,105 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,106 : INFO -> Inside convert_kv(): key="geographyType", val="", type(val) is: "str"
2022-04-08 21:19:07,106 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,106 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,106 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,106 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,106 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,106 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,106 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,106 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,106 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,106 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,106 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,106 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,106 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,106 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,106 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,106 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,106 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,107 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,107 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,107 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,107 : INFO -> Looping inside convert_dict(): key="country", val="", type(val)="str"
2022-04-08 21:19:07,107 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,107 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,107 : INFO -> Inside convert_kv(): key="country", val="", type(val) is: "str"
2022-04-08 21:19:07,107 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,107 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,107 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,107 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,107 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,107 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,107 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,107 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,107 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,107 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,108 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,108 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,108 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,108 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,108 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,108 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,108 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,108 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,108 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,108 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,108 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,108 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,108 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,108 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,108 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,108 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,108 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,108 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,109 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,109 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,109 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,109 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,109 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,109 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,109 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,109 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,109 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,109 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,109 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,109 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,109 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,109 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,109 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,109 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,109 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,110 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,110 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,110 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,110 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,110 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,110 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,110 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,110 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,110 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,110 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,110 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,110 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,110 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,110 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,110 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,111 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,111 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,111 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,111 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,111 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,111 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,111 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,111 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,111 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/13", type(val)="str"
2022-04-08 21:19:07,111 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,111 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,111 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/13", type(val) is: "str"
2022-04-08 21:19:07,111 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,111 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,111 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,111 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,111 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,112 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,112 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,112 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,112 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,112 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,112 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,112 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,112 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,112 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,112 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,112 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,112 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,112 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,112 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,112 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,112 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,112 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,112 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,113 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,113 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,113 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,113 : INFO -> Looping inside convert_list(): item="{'objectID': 14, 'isHighlight': False, 'accessionNumber': '1979.486.5', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Five-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Christian Gobrecht', 'artistDisplayBio': '1785–1844', 'artistSuffix': '', 'artistAlphaSort': 'Gobrecht, Christian', 'artistNationality': '', 'artistBeginDate': '1785', 'artistEndDate': '1844', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'objectDate': '1907', 'objectBeginDate': 1907, 'objectEndDate': 1907, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/14', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,113 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 14, 'isHighlight': False, 'accessionNumber': '1979.486.5', 'accessionYear': '1979', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Five-dollar Liberty Head Coin', 'culture': '', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Christian Gobrecht', 'artistDisplayBio': '1785–1844', 'artistSuffix': '', 'artistAlphaSort': 'Gobrecht, Christian', 'artistNationality': '', 'artistBeginDate': '1785', 'artistEndDate': '1844', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'objectDate': '1907', 'objectBeginDate': 1907, 'objectEndDate': 1907, 'medium': 'Gold', 'dimensions': 'Dimensions unavailable', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}], 'creditLine': 'Gift of Heinz L. Stoppelmann, 1979', 'geographyType': '', 'city': '', 'state': '', 'county': '', 'country': '', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/14', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,113 : INFO -> Looping inside convert_dict(): key="objectID", val="14", type(val)="int"
2022-04-08 21:19:07,113 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,113 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,113 : INFO -> Inside convert_kv(): key="objectID", val="14", type(val) is: "int"
2022-04-08 21:19:07,113 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,113 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,113 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,113 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,113 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,113 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,113 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,114 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,114 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="1979.486.5", type(val)="str"
2022-04-08 21:19:07,114 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,114 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,114 : INFO -> Inside convert_kv(): key="accessionNumber", val="1979.486.5", type(val) is: "str"
2022-04-08 21:19:07,114 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,114 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,114 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1979", type(val)="str"
2022-04-08 21:19:07,114 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,114 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,114 : INFO -> Inside convert_kv(): key="accessionYear", val="1979", type(val) is: "str"
2022-04-08 21:19:07,114 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,114 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,114 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,114 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,114 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,114 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,115 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,115 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,115 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,115 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,115 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,115 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,115 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,115 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,115 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,115 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,115 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,115 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,115 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,115 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,115 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,115 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,115 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,116 : INFO -> Inside convert_list()
2022-04-08 21:19:07,116 : INFO -> Looping inside convert_dict(): key="constituents", val="[{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}]", type(val)="list"
2022-04-08 21:19:07,116 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,116 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,116 : INFO -> Inside convert_list()
2022-04-08 21:19:07,116 : INFO -> Looping inside convert_list(): item="{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,116 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'constituentID': 1079, 'role': 'Maker', 'name': 'Christian Gobrecht', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500077295', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q5109648', 'gender': ''}"
2022-04-08 21:19:07,116 : INFO -> Looping inside convert_dict(): key="constituentID", val="1079", type(val)="int"
2022-04-08 21:19:07,116 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,116 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,116 : INFO -> Inside convert_kv(): key="constituentID", val="1079", type(val) is: "int"
2022-04-08 21:19:07,116 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,116 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,116 : INFO -> Looping inside convert_dict(): key="role", val="Maker", type(val)="str"
2022-04-08 21:19:07,116 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,116 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,116 : INFO -> Inside convert_kv(): key="role", val="Maker", type(val) is: "str"
2022-04-08 21:19:07,116 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,117 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,117 : INFO -> Looping inside convert_dict(): key="name", val="Christian Gobrecht", type(val)="str"
2022-04-08 21:19:07,117 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,117 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,117 : INFO -> Inside convert_kv(): key="name", val="Christian Gobrecht", type(val) is: "str"
2022-04-08 21:19:07,117 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,117 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,117 : INFO -> Looping inside convert_dict(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500077295", type(val)="str"
2022-04-08 21:19:07,117 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,117 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,117 : INFO -> Inside convert_kv(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500077295", type(val) is: "str"
2022-04-08 21:19:07,117 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,117 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,117 : INFO -> Looping inside convert_dict(): key="constituentWikidata_URL", val="https://www.wikidata.org/wiki/Q5109648", type(val)="str"
2022-04-08 21:19:07,117 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,117 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,117 : INFO -> Inside convert_kv(): key="constituentWikidata_URL", val="https://www.wikidata.org/wiki/Q5109648", type(val) is: "str"
2022-04-08 21:19:07,118 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,118 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,118 : INFO -> Looping inside convert_dict(): key="gender", val="", type(val)="str"
2022-04-08 21:19:07,118 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,118 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,118 : INFO -> Inside convert_kv(): key="gender", val="", type(val) is: "str"
2022-04-08 21:19:07,118 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,118 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,118 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,118 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,118 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,118 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,118 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,118 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,118 : INFO -> Looping inside convert_dict(): key="objectName", val="Coin", type(val)="str"
2022-04-08 21:19:07,118 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,118 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,119 : INFO -> Inside convert_kv(): key="objectName", val="Coin", type(val) is: "str"
2022-04-08 21:19:07,119 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,119 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,119 : INFO -> Looping inside convert_dict(): key="title", val="Five-dollar Liberty Head Coin", type(val)="str"
2022-04-08 21:19:07,119 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,119 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,119 : INFO -> Inside convert_kv(): key="title", val="Five-dollar Liberty Head Coin", type(val) is: "str"
2022-04-08 21:19:07,119 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,119 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,119 : INFO -> Looping inside convert_dict(): key="culture", val="", type(val)="str"
2022-04-08 21:19:07,119 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,119 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,119 : INFO -> Inside convert_kv(): key="culture", val="", type(val) is: "str"
2022-04-08 21:19:07,119 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,119 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,119 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,119 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,119 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,120 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,120 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,120 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,120 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,120 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,120 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,120 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,120 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,120 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,120 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,120 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,120 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,120 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,120 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,120 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,120 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,120 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,120 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,121 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,121 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,121 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,121 : INFO -> Looping inside convert_dict(): key="artistRole", val="Maker", type(val)="str"
2022-04-08 21:19:07,121 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,121 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,121 : INFO -> Inside convert_kv(): key="artistRole", val="Maker", type(val) is: "str"
2022-04-08 21:19:07,121 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,121 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,121 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,121 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,121 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,121 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,121 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,121 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,121 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="Christian Gobrecht", type(val)="str"
2022-04-08 21:19:07,121 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,122 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,122 : INFO -> Inside convert_kv(): key="artistDisplayName", val="Christian Gobrecht", type(val) is: "str"
2022-04-08 21:19:07,122 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,122 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,122 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="1785–1844", type(val)="str"
2022-04-08 21:19:07,122 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,122 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,122 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="1785–1844", type(val) is: "str"
2022-04-08 21:19:07,122 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,122 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,122 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,122 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,122 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,122 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,122 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,122 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,122 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="Gobrecht, Christian", type(val)="str"
2022-04-08 21:19:07,123 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,123 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,123 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="Gobrecht, Christian", type(val) is: "str"
2022-04-08 21:19:07,123 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,123 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,123 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,123 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,123 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,123 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,123 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,123 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,123 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="1785", type(val)="str"
2022-04-08 21:19:07,123 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,123 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,123 : INFO -> Inside convert_kv(): key="artistBeginDate", val="1785", type(val) is: "str"
2022-04-08 21:19:07,123 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,123 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,124 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="1844", type(val)="str"
2022-04-08 21:19:07,124 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,124 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,124 : INFO -> Inside convert_kv(): key="artistEndDate", val="1844", type(val) is: "str"
2022-04-08 21:19:07,124 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,124 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,124 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,124 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,124 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,124 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,124 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,124 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,124 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="https://www.wikidata.org/wiki/Q5109648", type(val)="str"
2022-04-08 21:19:07,124 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,124 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,124 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="https://www.wikidata.org/wiki/Q5109648", type(val) is: "str"
2022-04-08 21:19:07,124 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,124 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,125 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500077295", type(val)="str"
2022-04-08 21:19:07,125 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,125 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,125 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500077295", type(val) is: "str"
2022-04-08 21:19:07,125 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,125 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,125 : INFO -> Looping inside convert_dict(): key="objectDate", val="1907", type(val)="str"
2022-04-08 21:19:07,125 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,125 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,125 : INFO -> Inside convert_kv(): key="objectDate", val="1907", type(val) is: "str"
2022-04-08 21:19:07,125 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,125 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,125 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1907", type(val)="int"
2022-04-08 21:19:07,125 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,125 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,125 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1907", type(val) is: "int"
2022-04-08 21:19:07,125 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,125 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,126 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1907", type(val)="int"
2022-04-08 21:19:07,126 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,126 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,126 : INFO -> Inside convert_kv(): key="objectEndDate", val="1907", type(val) is: "int"
2022-04-08 21:19:07,126 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,126 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,126 : INFO -> Looping inside convert_dict(): key="medium", val="Gold", type(val)="str"
2022-04-08 21:19:07,126 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,126 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,126 : INFO -> Inside convert_kv(): key="medium", val="Gold", type(val) is: "str"
2022-04-08 21:19:07,126 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,126 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,126 : INFO -> Looping inside convert_dict(): key="dimensions", val="Dimensions unavailable", type(val)="str"
2022-04-08 21:19:07,126 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,126 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,126 : INFO -> Inside convert_kv(): key="dimensions", val="Dimensions unavailable", type(val) is: "str"
2022-04-08 21:19:07,126 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,127 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,127 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}]", type(val)="list"
2022-04-08 21:19:07,127 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,127 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,127 : INFO -> Inside convert_list()
2022-04-08 21:19:07,127 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}", item_name="item", type="dict"
2022-04-08 21:19:07,127 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.7}}"
2022-04-08 21:19:07,127 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,127 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,127 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,127 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,127 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,127 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,127 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,127 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,128 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,128 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,128 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,128 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,128 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 1.7}", type(val)="dict"
2022-04-08 21:19:07,128 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,128 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,128 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 1.7}"
2022-04-08 21:19:07,128 : INFO -> Looping inside convert_dict(): key="Diameter", val="1.7", type(val)="float"
2022-04-08 21:19:07,128 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,128 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,128 : INFO -> Inside convert_kv(): key="Diameter", val="1.7", type(val) is: "float"
2022-04-08 21:19:07,128 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,128 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,128 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Heinz L. Stoppelmann, 1979", type(val)="str"
2022-04-08 21:19:07,128 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,128 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,129 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Heinz L. Stoppelmann, 1979", type(val) is: "str"
2022-04-08 21:19:07,129 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,129 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,129 : INFO -> Looping inside convert_dict(): key="geographyType", val="", type(val)="str"
2022-04-08 21:19:07,129 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,129 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,129 : INFO -> Inside convert_kv(): key="geographyType", val="", type(val) is: "str"
2022-04-08 21:19:07,129 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,129 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,129 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,129 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,129 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,129 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,129 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,129 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,129 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,129 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,129 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,130 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,130 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,130 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,130 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,130 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,130 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,130 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,130 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,130 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,130 : INFO -> Looping inside convert_dict(): key="country", val="", type(val)="str"
2022-04-08 21:19:07,130 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,130 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,130 : INFO -> Inside convert_kv(): key="country", val="", type(val) is: "str"
2022-04-08 21:19:07,130 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,130 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,130 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,130 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,130 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,131 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,131 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,131 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,131 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,131 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,131 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,131 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,131 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,131 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,131 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,131 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,131 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,131 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,131 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,131 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,131 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,131 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,132 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,132 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,132 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,132 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,132 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,132 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,132 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,132 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,132 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,132 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,132 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,132 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,132 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,132 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,132 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,132 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,132 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,133 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,133 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,133 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,133 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,133 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,133 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,133 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,133 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,133 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,133 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,133 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,133 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,133 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,133 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,133 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,133 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,133 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,134 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,134 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,134 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,134 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,134 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,134 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,134 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,134 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,134 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,134 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,134 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,134 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,134 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/14", type(val)="str"
2022-04-08 21:19:07,134 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,134 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,134 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/14", type(val) is: "str"
2022-04-08 21:19:07,134 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,134 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,135 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,135 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,135 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,135 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,135 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,135 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,135 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,135 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,135 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,135 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,135 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,135 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,135 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,135 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,135 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,135 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,135 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,136 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,136 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,136 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,136 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,136 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,136 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,136 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,136 : INFO -> Looping inside convert_list(): item="{'objectID': 15, 'isHighlight': False, 'accessionNumber': '16.74.49', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Coin, 1/2 Real', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1665–1700', 'objectBeginDate': 1665, 'objectEndDate': 1700, 'medium': 'Silver', 'dimensions': 'Diam. 1/2 in. (1.3 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/15', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,136 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 15, 'isHighlight': False, 'accessionNumber': '16.74.49', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Coin, 1/2 Real', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1665–1700', 'objectBeginDate': 1665, 'objectEndDate': 1700, 'medium': 'Silver', 'dimensions': 'Diam. 1/2 in. (1.3 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/15', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,136 : INFO -> Looping inside convert_dict(): key="objectID", val="15", type(val)="int"
2022-04-08 21:19:07,136 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,136 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,136 : INFO -> Inside convert_kv(): key="objectID", val="15", type(val) is: "int"
2022-04-08 21:19:07,136 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,136 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,136 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,137 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,137 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,137 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,137 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,137 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,137 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="16.74.49", type(val)="str"
2022-04-08 21:19:07,137 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,137 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,137 : INFO -> Inside convert_kv(): key="accessionNumber", val="16.74.49", type(val) is: "str"
2022-04-08 21:19:07,137 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,137 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,137 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1916", type(val)="str"
2022-04-08 21:19:07,137 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,137 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,137 : INFO -> Inside convert_kv(): key="accessionYear", val="1916", type(val) is: "str"
2022-04-08 21:19:07,137 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,137 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,138 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,138 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,138 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,138 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,138 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,138 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,138 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,138 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,138 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,138 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,138 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,138 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,138 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,138 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,138 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,138 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,138 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,138 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,139 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,139 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,139 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,139 : INFO -> Inside convert_list()
2022-04-08 21:19:07,139 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:07,139 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,139 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,139 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:07,139 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,139 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,139 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,139 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,139 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,139 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,139 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,139 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,140 : INFO -> Looping inside convert_dict(): key="objectName", val="Coin", type(val)="str"
2022-04-08 21:19:07,140 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,140 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,140 : INFO -> Inside convert_kv(): key="objectName", val="Coin", type(val) is: "str"
2022-04-08 21:19:07,140 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,140 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,140 : INFO -> Looping inside convert_dict(): key="title", val="Coin, 1/2 Real", type(val)="str"
2022-04-08 21:19:07,140 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,140 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,140 : INFO -> Inside convert_kv(): key="title", val="Coin, 1/2 Real", type(val) is: "str"
2022-04-08 21:19:07,140 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,140 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,140 : INFO -> Looping inside convert_dict(): key="culture", val="Mexican", type(val)="str"
2022-04-08 21:19:07,140 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,140 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,140 : INFO -> Inside convert_kv(): key="culture", val="Mexican", type(val) is: "str"
2022-04-08 21:19:07,140 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,140 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,141 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,141 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,141 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,141 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,141 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,141 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,141 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,141 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,141 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,141 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,141 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,141 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,141 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,141 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,141 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,141 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,141 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,141 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,142 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,142 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,142 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,142 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,142 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,142 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,142 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:07,142 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,142 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,142 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:07,142 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,142 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,142 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,142 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,142 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,142 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,142 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,143 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,143 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:07,143 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,143 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,143 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:07,143 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,143 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,143 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:07,143 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,143 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,143 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:07,143 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,143 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,143 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,143 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,143 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,143 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,144 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,144 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,144 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:07,144 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,144 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,144 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:07,144 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,144 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,144 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,144 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,144 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,144 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,144 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,144 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,144 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:07,145 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,145 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,145 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:07,145 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,145 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,145 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:07,145 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,145 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,145 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:07,145 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,145 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,145 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,145 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,145 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,145 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,145 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,145 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,146 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,146 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,146 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,146 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,146 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,146 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,146 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,146 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,146 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,146 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,146 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,146 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,146 : INFO -> Looping inside convert_dict(): key="objectDate", val="1665–1700", type(val)="str"
2022-04-08 21:19:07,146 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,146 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,146 : INFO -> Inside convert_kv(): key="objectDate", val="1665–1700", type(val) is: "str"
2022-04-08 21:19:07,146 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,146 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,147 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1665", type(val)="int"
2022-04-08 21:19:07,147 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,147 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,147 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1665", type(val) is: "int"
2022-04-08 21:19:07,147 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,147 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,147 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1700", type(val)="int"
2022-04-08 21:19:07,147 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,147 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,147 : INFO -> Inside convert_kv(): key="objectEndDate", val="1700", type(val) is: "int"
2022-04-08 21:19:07,147 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,147 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,147 : INFO -> Looping inside convert_dict(): key="medium", val="Silver", type(val)="str"
2022-04-08 21:19:07,147 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,147 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,147 : INFO -> Inside convert_kv(): key="medium", val="Silver", type(val) is: "str"
2022-04-08 21:19:07,147 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,148 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,148 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 1/2 in. (1.3 cm)", type(val)="str"
2022-04-08 21:19:07,148 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,148 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,148 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 1/2 in. (1.3 cm)", type(val) is: "str"
2022-04-08 21:19:07,148 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,148 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,148 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}]", type(val)="list"
2022-04-08 21:19:07,148 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,148 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,148 : INFO -> Inside convert_list()
2022-04-08 21:19:07,148 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}", item_name="item", type="dict"
2022-04-08 21:19:07,148 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}"
2022-04-08 21:19:07,148 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,148 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,148 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,148 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,148 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,149 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,149 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,149 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,149 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,149 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,149 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,149 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,149 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 1.27}", type(val)="dict"
2022-04-08 21:19:07,149 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,149 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,149 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 1.27}"
2022-04-08 21:19:07,149 : INFO -> Looping inside convert_dict(): key="Diameter", val="1.27", type(val)="float"
2022-04-08 21:19:07,149 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,149 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,149 : INFO -> Inside convert_kv(): key="Diameter", val="1.27", type(val) is: "float"
2022-04-08 21:19:07,149 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,149 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,150 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val)="str"
2022-04-08 21:19:07,150 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,150 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,150 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val) is: "str"
2022-04-08 21:19:07,150 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,150 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,150 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,150 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,150 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,150 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,150 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,150 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,150 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,150 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,150 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,150 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,150 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,151 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,151 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,151 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,151 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,151 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,151 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,151 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,151 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,151 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,151 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,151 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,151 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,151 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,151 : INFO -> Looping inside convert_dict(): key="country", val="Mexico", type(val)="str"
2022-04-08 21:19:07,151 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,151 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,151 : INFO -> Inside convert_kv(): key="country", val="Mexico", type(val) is: "str"
2022-04-08 21:19:07,152 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,152 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,152 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,152 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,152 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,152 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,152 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,152 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,152 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,152 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,152 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,152 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,152 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,152 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,152 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,152 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,152 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,153 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,153 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,153 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,153 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,153 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,153 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,153 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,153 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,153 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,153 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,153 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,153 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,153 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,153 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,153 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,153 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,153 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,153 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,154 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,154 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,154 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,154 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,154 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,154 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,154 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,154 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,154 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,154 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,154 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,154 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,154 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,154 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,154 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,154 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,154 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,154 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,155 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,155 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,155 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,155 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,155 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,155 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,155 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,155 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,155 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,155 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,155 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,155 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,155 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,155 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,155 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,155 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/15", type(val)="str"
2022-04-08 21:19:07,156 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,156 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,156 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/15", type(val) is: "str"
2022-04-08 21:19:07,156 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,156 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,156 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,156 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,156 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,156 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,156 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,156 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,156 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,156 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,156 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,156 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,156 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,156 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,157 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,157 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,157 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,157 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,157 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,157 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,157 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,157 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,157 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,157 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,157 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,157 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,157 : INFO -> Looping inside convert_list(): item="{'objectID': 16, 'isHighlight': False, 'accessionNumber': '16.74.27', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1800–1900', 'objectBeginDate': 1800, 'objectEndDate': 1900, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/16', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,157 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 16, 'isHighlight': False, 'accessionNumber': '16.74.27', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1800–1900', 'objectBeginDate': 1800, 'objectEndDate': 1900, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/16', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,157 : INFO -> Looping inside convert_dict(): key="objectID", val="16", type(val)="int"
2022-04-08 21:19:07,157 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,157 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,158 : INFO -> Inside convert_kv(): key="objectID", val="16", type(val) is: "int"
2022-04-08 21:19:07,158 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,158 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,158 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,158 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,158 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,158 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,158 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,158 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,158 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="16.74.27", type(val)="str"
2022-04-08 21:19:07,158 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,158 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,158 : INFO -> Inside convert_kv(): key="accessionNumber", val="16.74.27", type(val) is: "str"
2022-04-08 21:19:07,158 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,158 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,158 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1916", type(val)="str"
2022-04-08 21:19:07,158 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,159 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,159 : INFO -> Inside convert_kv(): key="accessionYear", val="1916", type(val) is: "str"
2022-04-08 21:19:07,159 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,159 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,159 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,159 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,159 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,159 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,159 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,159 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,159 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,159 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,159 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,159 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,159 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,159 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,159 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,160 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,160 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,160 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,160 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,160 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,160 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,160 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,160 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,160 : INFO -> Inside convert_list()
2022-04-08 21:19:07,160 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:07,160 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,160 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,160 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:07,160 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,160 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,160 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,160 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,160 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,161 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,161 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,161 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,161 : INFO -> Looping inside convert_dict(): key="objectName", val="Peso", type(val)="str"
2022-04-08 21:19:07,161 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,161 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,161 : INFO -> Inside convert_kv(): key="objectName", val="Peso", type(val) is: "str"
2022-04-08 21:19:07,161 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,161 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,161 : INFO -> Looping inside convert_dict(): key="title", val="Coin, 1/4 Peso", type(val)="str"
2022-04-08 21:19:07,161 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,161 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,161 : INFO -> Inside convert_kv(): key="title", val="Coin, 1/4 Peso", type(val) is: "str"
2022-04-08 21:19:07,161 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,161 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,161 : INFO -> Looping inside convert_dict(): key="culture", val="Mexican", type(val)="str"
2022-04-08 21:19:07,161 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,162 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,162 : INFO -> Inside convert_kv(): key="culture", val="Mexican", type(val) is: "str"
2022-04-08 21:19:07,162 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,162 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,162 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,162 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,162 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,162 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,162 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,162 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,162 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,162 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,162 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,162 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,162 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,163 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,163 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,163 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,163 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,163 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,163 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,163 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,163 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,163 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,163 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,163 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,163 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,163 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,163 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:07,163 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,163 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,163 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:07,164 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,164 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,164 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,164 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,164 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,164 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,164 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,164 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,164 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:07,164 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,164 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,164 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:07,164 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,164 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,164 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:07,164 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,164 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,165 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:07,165 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,165 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,165 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,165 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,165 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,165 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,165 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,165 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,165 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:07,165 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,165 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,165 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:07,165 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,165 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,165 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,165 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,165 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,166 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,166 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,166 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,166 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:07,166 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,166 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,166 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:07,166 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,166 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,166 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:07,166 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,166 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,166 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:07,166 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,166 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,166 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,166 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,166 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,167 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,167 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,167 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,167 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,167 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,167 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,167 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,167 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,167 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,167 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,167 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,167 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,167 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,167 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,167 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,167 : INFO -> Looping inside convert_dict(): key="objectDate", val="1800–1900", type(val)="str"
2022-04-08 21:19:07,168 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,168 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,168 : INFO -> Inside convert_kv(): key="objectDate", val="1800–1900", type(val) is: "str"
2022-04-08 21:19:07,168 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,168 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,168 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1800", type(val)="int"
2022-04-08 21:19:07,168 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,168 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,168 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1800", type(val) is: "int"
2022-04-08 21:19:07,168 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,168 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,168 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1900", type(val)="int"
2022-04-08 21:19:07,168 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,168 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,168 : INFO -> Inside convert_kv(): key="objectEndDate", val="1900", type(val) is: "int"
2022-04-08 21:19:07,168 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,168 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,168 : INFO -> Looping inside convert_dict(): key="medium", val="Bronze or copper", type(val)="str"
2022-04-08 21:19:07,169 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,169 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,169 : INFO -> Inside convert_kv(): key="medium", val="Bronze or copper", type(val) is: "str"
2022-04-08 21:19:07,169 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,169 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,169 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 1 1/8 in. (2.9 cm)", type(val)="str"
2022-04-08 21:19:07,169 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,169 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,169 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 1 1/8 in. (2.9 cm)", type(val) is: "str"
2022-04-08 21:19:07,169 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,169 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,169 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}]", type(val)="list"
2022-04-08 21:19:07,169 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,169 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,169 : INFO -> Inside convert_list()
2022-04-08 21:19:07,169 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}", item_name="item", type="dict"
2022-04-08 21:19:07,169 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}"
2022-04-08 21:19:07,170 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,170 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,170 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,170 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,170 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,170 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,170 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,170 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,170 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,170 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,170 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,170 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,170 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 2.8575}", type(val)="dict"
2022-04-08 21:19:07,170 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,170 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,170 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 2.8575}"
2022-04-08 21:19:07,170 : INFO -> Looping inside convert_dict(): key="Diameter", val="2.8575", type(val)="float"
2022-04-08 21:19:07,170 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,171 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,171 : INFO -> Inside convert_kv(): key="Diameter", val="2.8575", type(val) is: "float"
2022-04-08 21:19:07,171 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,171 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,171 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val)="str"
2022-04-08 21:19:07,171 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,171 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,171 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val) is: "str"
2022-04-08 21:19:07,171 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,171 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,171 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,171 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,171 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,171 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,171 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,171 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,172 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,172 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,172 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,172 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,172 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,172 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,172 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,172 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,172 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,172 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,172 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,172 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,172 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,172 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,172 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,172 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,172 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,172 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,173 : INFO -> Looping inside convert_dict(): key="country", val="Mexico", type(val)="str"
2022-04-08 21:19:07,173 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,173 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,173 : INFO -> Inside convert_kv(): key="country", val="Mexico", type(val) is: "str"
2022-04-08 21:19:07,173 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,173 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,173 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,173 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,173 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,173 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,173 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,173 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,173 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,173 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,173 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,173 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,173 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,173 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,174 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,174 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,174 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,174 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,174 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,174 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,174 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,174 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,174 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,174 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,174 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,174 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,174 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,174 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,174 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,174 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,174 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,175 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,175 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,175 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,175 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,175 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,175 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,175 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,175 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,175 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,175 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,175 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,175 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,175 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,175 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,175 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,175 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,175 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,176 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,176 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,176 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,176 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,176 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,176 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,176 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,176 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,176 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,176 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,176 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,176 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,176 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,176 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,176 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,176 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,176 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,177 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,177 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,177 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,177 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/16", type(val)="str"
2022-04-08 21:19:07,177 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,177 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,177 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/16", type(val) is: "str"
2022-04-08 21:19:07,177 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,177 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,177 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,177 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,177 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,177 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,177 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,177 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,177 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,177 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,177 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,178 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,178 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,178 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,178 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,178 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,178 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,178 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,178 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,178 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,178 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,178 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,178 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,178 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,178 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,178 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,178 : INFO -> Looping inside convert_list(): item="{'objectID': 17, 'isHighlight': False, 'accessionNumber': '16.74.28', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1867', 'objectBeginDate': 1867, 'objectEndDate': 1867, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/17', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,179 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 17, 'isHighlight': False, 'accessionNumber': '16.74.28', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1867', 'objectBeginDate': 1867, 'objectEndDate': 1867, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/17', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,179 : INFO -> Looping inside convert_dict(): key="objectID", val="17", type(val)="int"
2022-04-08 21:19:07,179 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,179 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,179 : INFO -> Inside convert_kv(): key="objectID", val="17", type(val) is: "int"
2022-04-08 21:19:07,179 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,179 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,179 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,179 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,179 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,179 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,179 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,179 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,179 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="16.74.28", type(val)="str"
2022-04-08 21:19:07,179 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,180 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,180 : INFO -> Inside convert_kv(): key="accessionNumber", val="16.74.28", type(val) is: "str"
2022-04-08 21:19:07,180 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,180 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,180 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1916", type(val)="str"
2022-04-08 21:19:07,180 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,180 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,180 : INFO -> Inside convert_kv(): key="accessionYear", val="1916", type(val) is: "str"
2022-04-08 21:19:07,180 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,180 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,180 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,180 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,180 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,180 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,180 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,180 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,180 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,181 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,181 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,181 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,181 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,181 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,181 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,181 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,181 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,181 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,181 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,181 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,181 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,181 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,181 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,181 : INFO -> Inside convert_list()
2022-04-08 21:19:07,181 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:07,181 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,181 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,182 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:07,182 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,182 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,182 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,182 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,182 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,182 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,182 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,182 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,182 : INFO -> Looping inside convert_dict(): key="objectName", val="Peso", type(val)="str"
2022-04-08 21:19:07,182 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,182 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,182 : INFO -> Inside convert_kv(): key="objectName", val="Peso", type(val) is: "str"
2022-04-08 21:19:07,182 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,182 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,182 : INFO -> Looping inside convert_dict(): key="title", val="Coin, 1/4 Peso", type(val)="str"
2022-04-08 21:19:07,182 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,183 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,183 : INFO -> Inside convert_kv(): key="title", val="Coin, 1/4 Peso", type(val) is: "str"
2022-04-08 21:19:07,183 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,183 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,183 : INFO -> Looping inside convert_dict(): key="culture", val="Mexican", type(val)="str"
2022-04-08 21:19:07,183 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,183 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,183 : INFO -> Inside convert_kv(): key="culture", val="Mexican", type(val) is: "str"
2022-04-08 21:19:07,183 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,183 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,183 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,183 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,183 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,183 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,183 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,183 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,183 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,184 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,184 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,184 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,184 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,184 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,184 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,184 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,184 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,184 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,184 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,184 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,184 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,184 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,184 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,184 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,184 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,184 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,184 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:07,185 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,185 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,185 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:07,185 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,185 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,185 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,185 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,185 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,185 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,185 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,185 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,185 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:07,185 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,185 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,185 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:07,185 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,185 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,186 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:07,186 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,186 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,186 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:07,186 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,186 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,186 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,186 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,186 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,186 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,186 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,186 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,186 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:07,186 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,186 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,186 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:07,186 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,187 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,187 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,187 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,187 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,187 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,187 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,187 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,187 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:07,187 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,187 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,187 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:07,187 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,187 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,187 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:07,187 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,187 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,187 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:07,188 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,188 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,188 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,188 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,188 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,188 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,188 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,188 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,188 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,188 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,188 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,188 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,188 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,188 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,188 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,188 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,188 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,189 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,189 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,189 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,189 : INFO -> Looping inside convert_dict(): key="objectDate", val="1867", type(val)="str"
2022-04-08 21:19:07,189 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,189 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,189 : INFO -> Inside convert_kv(): key="objectDate", val="1867", type(val) is: "str"
2022-04-08 21:19:07,189 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,189 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,189 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1867", type(val)="int"
2022-04-08 21:19:07,189 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,189 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,189 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1867", type(val) is: "int"
2022-04-08 21:19:07,189 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,189 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,189 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1867", type(val)="int"
2022-04-08 21:19:07,189 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,189 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,190 : INFO -> Inside convert_kv(): key="objectEndDate", val="1867", type(val) is: "int"
2022-04-08 21:19:07,190 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,190 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,190 : INFO -> Looping inside convert_dict(): key="medium", val="Bronze or copper", type(val)="str"
2022-04-08 21:19:07,190 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,190 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,190 : INFO -> Inside convert_kv(): key="medium", val="Bronze or copper", type(val) is: "str"
2022-04-08 21:19:07,190 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,190 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,190 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 1 1/8 in. (2.9 cm)", type(val)="str"
2022-04-08 21:19:07,190 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,190 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,190 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 1 1/8 in. (2.9 cm)", type(val) is: "str"
2022-04-08 21:19:07,190 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,190 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,190 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}]", type(val)="list"
2022-04-08 21:19:07,190 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,191 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,191 : INFO -> Inside convert_list()
2022-04-08 21:19:07,191 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}", item_name="item", type="dict"
2022-04-08 21:19:07,191 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}"
2022-04-08 21:19:07,191 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,191 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,191 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,191 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,191 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,191 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,191 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,191 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,191 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,191 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,191 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,191 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,191 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 2.8575}", type(val)="dict"
2022-04-08 21:19:07,192 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,192 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,192 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 2.8575}"
2022-04-08 21:19:07,192 : INFO -> Looping inside convert_dict(): key="Diameter", val="2.8575", type(val)="float"
2022-04-08 21:19:07,192 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,192 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,192 : INFO -> Inside convert_kv(): key="Diameter", val="2.8575", type(val) is: "float"
2022-04-08 21:19:07,192 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,192 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,192 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val)="str"
2022-04-08 21:19:07,192 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,192 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,192 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val) is: "str"
2022-04-08 21:19:07,192 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,192 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,192 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,192 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,192 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,193 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,193 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,193 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,193 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,193 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,193 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,193 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,193 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,193 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,193 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,193 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,193 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,193 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,193 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,193 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,193 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,193 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,194 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,194 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,194 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,194 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,194 : INFO -> Looping inside convert_dict(): key="country", val="Mexico", type(val)="str"
2022-04-08 21:19:07,194 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,194 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,194 : INFO -> Inside convert_kv(): key="country", val="Mexico", type(val) is: "str"
2022-04-08 21:19:07,194 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,194 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,194 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,194 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,194 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,194 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,194 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,194 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,194 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,194 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,195 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,195 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,195 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,195 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,195 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,195 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,195 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,195 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,195 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,195 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,195 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,195 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,195 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,195 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,195 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,195 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,195 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,196 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,196 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,196 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,196 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,196 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,196 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,196 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,196 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,196 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,196 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,196 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,196 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,196 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,196 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,196 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,197 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,197 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,197 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,197 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,197 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,197 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,197 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,197 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,197 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,197 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,197 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,197 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,197 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,197 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,197 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,197 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,197 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,198 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,198 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,198 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,198 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,198 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,198 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,198 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,198 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,198 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,198 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/17", type(val)="str"
2022-04-08 21:19:07,198 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,198 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,198 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/17", type(val) is: "str"
2022-04-08 21:19:07,198 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,198 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,198 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,198 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,198 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,199 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,199 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,199 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,199 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,199 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,199 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,199 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,199 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,199 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,199 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,199 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,199 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,199 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,199 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,199 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,199 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,199 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,200 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,200 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,200 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,200 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,200 : INFO -> Looping inside convert_list(): item="{'objectID': 18, 'isHighlight': False, 'accessionNumber': '16.74.29', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860', 'objectBeginDate': 1860, 'objectEndDate': 1860, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/18', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,200 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 18, 'isHighlight': False, 'accessionNumber': '16.74.29', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860', 'objectBeginDate': 1860, 'objectEndDate': 1860, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/18', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,200 : INFO -> Looping inside convert_dict(): key="objectID", val="18", type(val)="int"
2022-04-08 21:19:07,200 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,200 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,200 : INFO -> Inside convert_kv(): key="objectID", val="18", type(val) is: "int"
2022-04-08 21:19:07,200 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,200 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,200 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,200 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,200 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,200 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,201 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,201 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,201 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="16.74.29", type(val)="str"
2022-04-08 21:19:07,201 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,201 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,201 : INFO -> Inside convert_kv(): key="accessionNumber", val="16.74.29", type(val) is: "str"
2022-04-08 21:19:07,201 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,201 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,201 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1916", type(val)="str"
2022-04-08 21:19:07,201 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,201 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,201 : INFO -> Inside convert_kv(): key="accessionYear", val="1916", type(val) is: "str"
2022-04-08 21:19:07,201 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,201 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,201 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,201 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,201 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,201 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,202 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,202 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,202 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,202 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,202 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,202 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,202 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,202 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,202 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,202 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,202 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,202 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,202 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,202 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,202 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,202 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,202 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,203 : INFO -> Inside convert_list()
2022-04-08 21:19:07,203 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:07,203 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,203 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,203 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:07,203 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,203 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,203 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,203 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,203 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,203 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,203 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,203 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,203 : INFO -> Looping inside convert_dict(): key="objectName", val="Peso", type(val)="str"
2022-04-08 21:19:07,203 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,203 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,203 : INFO -> Inside convert_kv(): key="objectName", val="Peso", type(val) is: "str"
2022-04-08 21:19:07,204 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,204 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,204 : INFO -> Looping inside convert_dict(): key="title", val="Coin, 1/4 Peso", type(val)="str"
2022-04-08 21:19:07,204 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,204 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,204 : INFO -> Inside convert_kv(): key="title", val="Coin, 1/4 Peso", type(val) is: "str"
2022-04-08 21:19:07,204 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,204 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,204 : INFO -> Looping inside convert_dict(): key="culture", val="Mexican", type(val)="str"
2022-04-08 21:19:07,204 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,204 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,204 : INFO -> Inside convert_kv(): key="culture", val="Mexican", type(val) is: "str"
2022-04-08 21:19:07,204 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,204 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,204 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,204 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,204 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,204 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,205 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,205 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,205 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,205 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,205 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,205 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,205 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,205 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,205 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,205 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,205 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,205 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,205 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,205 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,205 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,205 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,205 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,206 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,206 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,206 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,206 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:07,206 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,206 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,206 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:07,206 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,206 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,206 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,206 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,206 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,206 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,206 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,206 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,206 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:07,206 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,206 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,207 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:07,207 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,207 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,207 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:07,207 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,207 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,207 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:07,207 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,207 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,207 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,207 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,207 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,207 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,207 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,207 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,207 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:07,207 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,208 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,208 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:07,208 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,208 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,208 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,208 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,208 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,208 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,208 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,208 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,208 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:07,208 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,208 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,208 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:07,208 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,208 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,208 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:07,209 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,209 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,209 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:07,209 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,209 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,209 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,209 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,209 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,209 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,209 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,209 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,209 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,209 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,209 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,209 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,209 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,209 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,210 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,210 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,210 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,210 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,210 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,210 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,210 : INFO -> Looping inside convert_dict(): key="objectDate", val="1860", type(val)="str"
2022-04-08 21:19:07,210 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,210 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,210 : INFO -> Inside convert_kv(): key="objectDate", val="1860", type(val) is: "str"
2022-04-08 21:19:07,210 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,210 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,210 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1860", type(val)="int"
2022-04-08 21:19:07,210 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,210 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,210 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1860", type(val) is: "int"
2022-04-08 21:19:07,210 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,210 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,211 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1860", type(val)="int"
2022-04-08 21:19:07,211 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,211 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,211 : INFO -> Inside convert_kv(): key="objectEndDate", val="1860", type(val) is: "int"
2022-04-08 21:19:07,211 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,211 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,211 : INFO -> Looping inside convert_dict(): key="medium", val="Bronze or copper", type(val)="str"
2022-04-08 21:19:07,211 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,211 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,211 : INFO -> Inside convert_kv(): key="medium", val="Bronze or copper", type(val) is: "str"
2022-04-08 21:19:07,211 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,211 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,211 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 1 1/8 in. (2.9 cm)", type(val)="str"
2022-04-08 21:19:07,211 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,211 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,211 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 1 1/8 in. (2.9 cm)", type(val) is: "str"
2022-04-08 21:19:07,211 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,211 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,212 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}]", type(val)="list"
2022-04-08 21:19:07,212 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,212 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,212 : INFO -> Inside convert_list()
2022-04-08 21:19:07,212 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}", item_name="item", type="dict"
2022-04-08 21:19:07,212 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.8575}}"
2022-04-08 21:19:07,212 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,212 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,212 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,212 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,212 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,212 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,212 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,212 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,212 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,212 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,212 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,213 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,213 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 2.8575}", type(val)="dict"
2022-04-08 21:19:07,213 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,213 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,213 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 2.8575}"
2022-04-08 21:19:07,213 : INFO -> Looping inside convert_dict(): key="Diameter", val="2.8575", type(val)="float"
2022-04-08 21:19:07,213 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,213 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,213 : INFO -> Inside convert_kv(): key="Diameter", val="2.8575", type(val) is: "float"
2022-04-08 21:19:07,213 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,213 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,213 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val)="str"
2022-04-08 21:19:07,213 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,213 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,213 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val) is: "str"
2022-04-08 21:19:07,213 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,213 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,214 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,214 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,214 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,214 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,214 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,214 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,214 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,214 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,214 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,214 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,214 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,214 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,214 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,214 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,214 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,215 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,215 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,215 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,215 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,215 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,215 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,215 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,215 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,215 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,215 : INFO -> Looping inside convert_dict(): key="country", val="Mexico", type(val)="str"
2022-04-08 21:19:07,215 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,215 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,215 : INFO -> Inside convert_kv(): key="country", val="Mexico", type(val) is: "str"
2022-04-08 21:19:07,215 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,215 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,215 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,215 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,215 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,216 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,216 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,216 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,216 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,216 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,216 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,216 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,216 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,216 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,216 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,216 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,216 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,216 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,216 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,216 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,216 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,216 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,217 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,217 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,217 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,217 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,217 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,217 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,217 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,217 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,217 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,217 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,217 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,217 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,217 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,217 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,217 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,217 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,217 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,217 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,218 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,218 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,218 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,218 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,218 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,218 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,218 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,218 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,218 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,218 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,218 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,218 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,218 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,218 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,218 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,218 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,218 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,219 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,219 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,219 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,219 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,219 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,219 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,219 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,219 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,219 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,219 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,219 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,219 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/18", type(val)="str"
2022-04-08 21:19:07,219 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,219 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,219 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/18", type(val) is: "str"
2022-04-08 21:19:07,219 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,219 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,220 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,220 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,220 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,220 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,220 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,220 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,220 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,220 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,220 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,220 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,220 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,220 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,221 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,221 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,221 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,221 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,221 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,221 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,221 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,221 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,221 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,221 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,221 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,221 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,221 : INFO -> Looping inside convert_list(): item="{'objectID': 19, 'isHighlight': False, 'accessionNumber': '16.74.30', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1859', 'objectBeginDate': 1859, 'objectEndDate': 1859, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/19', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,221 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 19, 'isHighlight': False, 'accessionNumber': '16.74.30', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1859', 'objectBeginDate': 1859, 'objectEndDate': 1859, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/19', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,221 : INFO -> Looping inside convert_dict(): key="objectID", val="19", type(val)="int"
2022-04-08 21:19:07,221 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,221 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,222 : INFO -> Inside convert_kv(): key="objectID", val="19", type(val) is: "int"
2022-04-08 21:19:07,222 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,222 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,222 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,222 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,222 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,222 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,222 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,222 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,222 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="16.74.30", type(val)="str"
2022-04-08 21:19:07,222 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,222 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,222 : INFO -> Inside convert_kv(): key="accessionNumber", val="16.74.30", type(val) is: "str"
2022-04-08 21:19:07,222 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,222 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,222 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1916", type(val)="str"
2022-04-08 21:19:07,223 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,223 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,223 : INFO -> Inside convert_kv(): key="accessionYear", val="1916", type(val) is: "str"
2022-04-08 21:19:07,223 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,223 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,223 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,223 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,223 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,223 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,223 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,223 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,223 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,223 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,223 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,223 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,223 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,223 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,224 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,224 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,224 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,224 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,224 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,224 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,224 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,224 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,224 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,224 : INFO -> Inside convert_list()
2022-04-08 21:19:07,224 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:07,224 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,224 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,224 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:07,224 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,224 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,224 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,224 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,225 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,225 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,225 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,225 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,225 : INFO -> Looping inside convert_dict(): key="objectName", val="Peso", type(val)="str"
2022-04-08 21:19:07,225 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,225 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,225 : INFO -> Inside convert_kv(): key="objectName", val="Peso", type(val) is: "str"
2022-04-08 21:19:07,225 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,225 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,225 : INFO -> Looping inside convert_dict(): key="title", val="Coin, 1/4 Peso", type(val)="str"
2022-04-08 21:19:07,225 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,225 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,225 : INFO -> Inside convert_kv(): key="title", val="Coin, 1/4 Peso", type(val) is: "str"
2022-04-08 21:19:07,225 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,225 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,225 : INFO -> Looping inside convert_dict(): key="culture", val="Mexican", type(val)="str"
2022-04-08 21:19:07,226 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,226 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,226 : INFO -> Inside convert_kv(): key="culture", val="Mexican", type(val) is: "str"
2022-04-08 21:19:07,226 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,226 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,226 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,226 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,226 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,226 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,226 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,226 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,226 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,226 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,226 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,226 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,226 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,226 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,227 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,227 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,227 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,227 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,227 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,227 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,227 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,227 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,227 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,227 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,227 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,227 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,227 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:07,227 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,227 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,227 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:07,227 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,227 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,228 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,228 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,228 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,228 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,228 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,228 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,228 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:07,228 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,228 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,228 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:07,228 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,228 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,228 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:07,228 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,228 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,228 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:07,228 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,229 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,229 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,229 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,229 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,229 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,229 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,229 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,229 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:07,229 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,229 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,229 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:07,229 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,229 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,229 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,229 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,229 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,229 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,230 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,230 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,230 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:07,230 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,230 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,230 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:07,230 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,230 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,230 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:07,230 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,230 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,230 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:07,230 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,230 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,230 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,230 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,230 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,231 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,231 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,231 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,231 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,231 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,231 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,231 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,231 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,231 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,231 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,231 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,231 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,231 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,231 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,231 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,232 : INFO -> Looping inside convert_dict(): key="objectDate", val="1859", type(val)="str"
2022-04-08 21:19:07,232 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,232 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,232 : INFO -> Inside convert_kv(): key="objectDate", val="1859", type(val) is: "str"
2022-04-08 21:19:07,232 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,232 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,232 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1859", type(val)="int"
2022-04-08 21:19:07,232 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,232 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,232 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1859", type(val) is: "int"
2022-04-08 21:19:07,232 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,232 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,232 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1859", type(val)="int"
2022-04-08 21:19:07,232 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,232 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,232 : INFO -> Inside convert_kv(): key="objectEndDate", val="1859", type(val) is: "int"
2022-04-08 21:19:07,232 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,232 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,233 : INFO -> Looping inside convert_dict(): key="medium", val="Bronze or copper", type(val)="str"
2022-04-08 21:19:07,233 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,233 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,233 : INFO -> Inside convert_kv(): key="medium", val="Bronze or copper", type(val) is: "str"
2022-04-08 21:19:07,233 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,233 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,233 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 1 1/8 in. (2.9 cm)", type(val)="str"
2022-04-08 21:19:07,233 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,233 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,233 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 1 1/8 in. (2.9 cm)", type(val) is: "str"
2022-04-08 21:19:07,233 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,233 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,233 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}]", type(val)="list"
2022-04-08 21:19:07,233 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,233 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,233 : INFO -> Inside convert_list()
2022-04-08 21:19:07,233 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}", item_name="item", type="dict"
2022-04-08 21:19:07,234 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}"
2022-04-08 21:19:07,234 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,234 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,234 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,234 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,234 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,234 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,234 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,234 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,234 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,234 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,234 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,234 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,234 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 2.9}", type(val)="dict"
2022-04-08 21:19:07,234 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,234 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,234 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 2.9}"
2022-04-08 21:19:07,234 : INFO -> Looping inside convert_dict(): key="Diameter", val="2.9", type(val)="float"
2022-04-08 21:19:07,235 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,235 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,235 : INFO -> Inside convert_kv(): key="Diameter", val="2.9", type(val) is: "float"
2022-04-08 21:19:07,235 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,235 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,235 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val)="str"
2022-04-08 21:19:07,235 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,235 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,235 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val) is: "str"
2022-04-08 21:19:07,235 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,235 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,235 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,235 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,235 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,235 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,235 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,235 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,236 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,236 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,236 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,236 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,236 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,236 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,236 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,236 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,236 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,236 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,236 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,236 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,236 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,236 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,236 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,236 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,236 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,237 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,237 : INFO -> Looping inside convert_dict(): key="country", val="Mexico", type(val)="str"
2022-04-08 21:19:07,237 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,237 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,237 : INFO -> Inside convert_kv(): key="country", val="Mexico", type(val) is: "str"
2022-04-08 21:19:07,237 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,237 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,237 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,237 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,237 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,237 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,237 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,237 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,237 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,237 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,237 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,237 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,237 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,238 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,238 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,238 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,238 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,238 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,238 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,238 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,238 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,238 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,238 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,238 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,238 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,238 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,238 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,238 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,238 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,238 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,239 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,239 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,239 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,239 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,239 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,239 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,239 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,239 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,239 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,239 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,239 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,239 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,239 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,239 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,239 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,239 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,239 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,240 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,240 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,240 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,240 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,240 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,240 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,240 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,240 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,240 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,240 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,240 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,240 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,240 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,240 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,240 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,240 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,240 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,240 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,241 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,241 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,241 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,241 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/19", type(val)="str"
2022-04-08 21:19:07,241 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,241 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,241 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/19", type(val) is: "str"
2022-04-08 21:19:07,241 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,241 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,241 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,241 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,241 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,241 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,241 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,241 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,241 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,241 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,242 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,242 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,242 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,242 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,242 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,242 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,242 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,242 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,242 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,242 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,242 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,242 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,242 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,242 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,242 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,242 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,243 : INFO -> Looping inside convert_list(): item="{'objectID': 20, 'isHighlight': False, 'accessionNumber': '16.74.31', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860', 'objectBeginDate': 1860, 'objectEndDate': 1860, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/20', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,243 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 20, 'isHighlight': False, 'accessionNumber': '16.74.31', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860', 'objectBeginDate': 1860, 'objectEndDate': 1860, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/20', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,243 : INFO -> Looping inside convert_dict(): key="objectID", val="20", type(val)="int"
2022-04-08 21:19:07,243 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,243 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,243 : INFO -> Inside convert_kv(): key="objectID", val="20", type(val) is: "int"
2022-04-08 21:19:07,243 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,243 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,243 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,243 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,243 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,243 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,243 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,243 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,243 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="16.74.31", type(val)="str"
2022-04-08 21:19:07,243 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,243 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,244 : INFO -> Inside convert_kv(): key="accessionNumber", val="16.74.31", type(val) is: "str"
2022-04-08 21:19:07,244 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,244 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,244 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1916", type(val)="str"
2022-04-08 21:19:07,244 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,244 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,244 : INFO -> Inside convert_kv(): key="accessionYear", val="1916", type(val) is: "str"
2022-04-08 21:19:07,244 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,244 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,244 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,244 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,244 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,244 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,244 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,244 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,244 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,244 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,244 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,245 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,245 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,245 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,245 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,245 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,245 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,245 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,245 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,245 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,245 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,245 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,245 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,245 : INFO -> Inside convert_list()
2022-04-08 21:19:07,245 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:07,245 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,245 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,245 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:07,246 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,246 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,246 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,246 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,246 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,246 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,246 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,246 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,246 : INFO -> Looping inside convert_dict(): key="objectName", val="Peso", type(val)="str"
2022-04-08 21:19:07,246 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,246 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,246 : INFO -> Inside convert_kv(): key="objectName", val="Peso", type(val) is: "str"
2022-04-08 21:19:07,246 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,246 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,246 : INFO -> Looping inside convert_dict(): key="title", val="Coin, 1/4 Peso", type(val)="str"
2022-04-08 21:19:07,246 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,246 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,247 : INFO -> Inside convert_kv(): key="title", val="Coin, 1/4 Peso", type(val) is: "str"
2022-04-08 21:19:07,247 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,247 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,247 : INFO -> Looping inside convert_dict(): key="culture", val="Mexican", type(val)="str"
2022-04-08 21:19:07,247 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,247 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,247 : INFO -> Inside convert_kv(): key="culture", val="Mexican", type(val) is: "str"
2022-04-08 21:19:07,247 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,247 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,247 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,247 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,247 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,247 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,247 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,247 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,247 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,247 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,247 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,248 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,248 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,248 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,248 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,248 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,248 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,248 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,248 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,248 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,248 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,248 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,248 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,248 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,248 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,248 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,248 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:07,248 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,249 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,249 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:07,249 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,249 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,249 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,249 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,249 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,249 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,249 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,249 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,249 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:07,249 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,249 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,249 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:07,249 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,250 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,250 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:07,250 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,250 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,250 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:07,250 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,250 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,250 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,250 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,250 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,250 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,250 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,250 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,250 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:07,250 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,250 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,250 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:07,251 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,251 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,251 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,251 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,251 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,251 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,251 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,251 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,251 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:07,251 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,251 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,251 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:07,251 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,251 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,251 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:07,251 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,251 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,252 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:07,252 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,252 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,252 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,252 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,252 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,252 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,252 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,252 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,252 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,252 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,252 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,252 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,252 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,252 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,252 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,252 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,252 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,253 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,253 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,253 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,253 : INFO -> Looping inside convert_dict(): key="objectDate", val="1860", type(val)="str"
2022-04-08 21:19:07,253 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,253 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,253 : INFO -> Inside convert_kv(): key="objectDate", val="1860", type(val) is: "str"
2022-04-08 21:19:07,253 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,253 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,253 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1860", type(val)="int"
2022-04-08 21:19:07,253 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,253 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,253 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1860", type(val) is: "int"
2022-04-08 21:19:07,253 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,253 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,253 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1860", type(val)="int"
2022-04-08 21:19:07,253 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,253 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,254 : INFO -> Inside convert_kv(): key="objectEndDate", val="1860", type(val) is: "int"
2022-04-08 21:19:07,254 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,254 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,254 : INFO -> Looping inside convert_dict(): key="medium", val="Bronze or copper", type(val)="str"
2022-04-08 21:19:07,254 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,254 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,254 : INFO -> Inside convert_kv(): key="medium", val="Bronze or copper", type(val) is: "str"
2022-04-08 21:19:07,254 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,254 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,254 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 1 1/8 in. (2.9 cm)", type(val)="str"
2022-04-08 21:19:07,254 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,254 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,254 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 1 1/8 in. (2.9 cm)", type(val) is: "str"
2022-04-08 21:19:07,254 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,254 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,254 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}]", type(val)="list"
2022-04-08 21:19:07,254 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,255 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,255 : INFO -> Inside convert_list()
2022-04-08 21:19:07,255 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}", item_name="item", type="dict"
2022-04-08 21:19:07,255 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}"
2022-04-08 21:19:07,255 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,255 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,255 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,255 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,255 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,255 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,255 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,255 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,255 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,255 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,255 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,255 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,255 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 2.9}", type(val)="dict"
2022-04-08 21:19:07,255 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,256 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,256 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 2.9}"
2022-04-08 21:19:07,256 : INFO -> Looping inside convert_dict(): key="Diameter", val="2.9", type(val)="float"
2022-04-08 21:19:07,256 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,256 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,256 : INFO -> Inside convert_kv(): key="Diameter", val="2.9", type(val) is: "float"
2022-04-08 21:19:07,256 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,256 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,256 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val)="str"
2022-04-08 21:19:07,256 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,256 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,256 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val) is: "str"
2022-04-08 21:19:07,256 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,256 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,256 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,256 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,256 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,257 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,257 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,257 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,257 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,257 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,257 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,257 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,257 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,257 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,257 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,257 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,257 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,257 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,257 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,257 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,257 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,257 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,258 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,258 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,258 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,258 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,258 : INFO -> Looping inside convert_dict(): key="country", val="Mexico", type(val)="str"
2022-04-08 21:19:07,258 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,258 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,258 : INFO -> Inside convert_kv(): key="country", val="Mexico", type(val) is: "str"
2022-04-08 21:19:07,258 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,258 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,258 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,258 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,258 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,258 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,258 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,258 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,258 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,258 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,259 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,259 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,259 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,259 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,259 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,259 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,259 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,259 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,259 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,259 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,259 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,259 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,259 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,259 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,259 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,259 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,259 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,260 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,260 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,260 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,260 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,260 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,260 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,260 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,260 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,260 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,260 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,260 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,260 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,260 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,260 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,260 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,260 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,260 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,261 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,261 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,261 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,261 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,261 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,261 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,261 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,261 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,261 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,261 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,261 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,261 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,261 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,261 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,261 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,261 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,261 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,261 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,262 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,262 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,262 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,262 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,262 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,262 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,262 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/20", type(val)="str"
2022-04-08 21:19:07,262 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,262 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,262 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/20", type(val) is: "str"
2022-04-08 21:19:07,262 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,262 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,262 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,262 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,262 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,262 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,262 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,263 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,263 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,263 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,263 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,263 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,263 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,263 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,263 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,263 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,263 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,263 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,263 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,263 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,263 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,263 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,263 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,263 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,264 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,264 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,264 : INFO -> Looping inside convert_list(): item="{'objectID': 21, 'isHighlight': False, 'accessionNumber': '16.74.32', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1859', 'objectBeginDate': 1859, 'objectEndDate': 1859, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/21', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,264 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 21, 'isHighlight': False, 'accessionNumber': '16.74.32', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Peso', 'title': 'Coin, 1/4 Peso', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1859', 'objectBeginDate': 1859, 'objectEndDate': 1859, 'medium': 'Bronze or copper', 'dimensions': 'Diam. 1 1/8 in. (2.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/21', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,264 : INFO -> Looping inside convert_dict(): key="objectID", val="21", type(val)="int"
2022-04-08 21:19:07,264 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,264 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,264 : INFO -> Inside convert_kv(): key="objectID", val="21", type(val) is: "int"
2022-04-08 21:19:07,264 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,264 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,264 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,264 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,264 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,264 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,264 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,264 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,265 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="16.74.32", type(val)="str"
2022-04-08 21:19:07,265 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,265 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,265 : INFO -> Inside convert_kv(): key="accessionNumber", val="16.74.32", type(val) is: "str"
2022-04-08 21:19:07,265 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,265 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,265 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1916", type(val)="str"
2022-04-08 21:19:07,265 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,265 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,265 : INFO -> Inside convert_kv(): key="accessionYear", val="1916", type(val) is: "str"
2022-04-08 21:19:07,265 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,265 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,265 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,265 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,265 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,265 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,265 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,265 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,266 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,266 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,266 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,266 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,266 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,266 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,266 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,266 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,266 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,266 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,266 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,266 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,266 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,266 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,266 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,267 : INFO -> Inside convert_list()
2022-04-08 21:19:07,267 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:07,267 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,267 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,267 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:07,267 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,267 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,267 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,267 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,267 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,267 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,267 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,267 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,267 : INFO -> Looping inside convert_dict(): key="objectName", val="Peso", type(val)="str"
2022-04-08 21:19:07,267 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,267 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,267 : INFO -> Inside convert_kv(): key="objectName", val="Peso", type(val) is: "str"
2022-04-08 21:19:07,268 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,268 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,268 : INFO -> Looping inside convert_dict(): key="title", val="Coin, 1/4 Peso", type(val)="str"
2022-04-08 21:19:07,268 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,268 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,268 : INFO -> Inside convert_kv(): key="title", val="Coin, 1/4 Peso", type(val) is: "str"
2022-04-08 21:19:07,268 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,268 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,268 : INFO -> Looping inside convert_dict(): key="culture", val="Mexican", type(val)="str"
2022-04-08 21:19:07,268 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,268 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,268 : INFO -> Inside convert_kv(): key="culture", val="Mexican", type(val) is: "str"
2022-04-08 21:19:07,268 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,268 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,268 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,268 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,268 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,268 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,269 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,269 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,269 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,269 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,269 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,269 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,269 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,269 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,269 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,269 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,269 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,269 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,269 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,269 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,269 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,269 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,269 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,270 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,270 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,270 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,270 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:07,270 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,270 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,270 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:07,270 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,270 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,270 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,270 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,270 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,270 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,270 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,270 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,270 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:07,270 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,270 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,271 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:07,271 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,271 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,271 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:07,271 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,271 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,271 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:07,271 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,271 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,271 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,271 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,271 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,271 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,271 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,271 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,271 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:07,271 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,272 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,272 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:07,272 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,272 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,272 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,272 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,272 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,272 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,272 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,272 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,272 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:07,272 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,272 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,272 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:07,272 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,272 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,272 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:07,273 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,273 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,273 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:07,273 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,273 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,273 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,273 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,273 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,273 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,273 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,273 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,273 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,273 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,273 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,273 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,273 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,273 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,274 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,274 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,274 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,274 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,274 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,274 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,274 : INFO -> Looping inside convert_dict(): key="objectDate", val="1859", type(val)="str"
2022-04-08 21:19:07,274 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,274 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,274 : INFO -> Inside convert_kv(): key="objectDate", val="1859", type(val) is: "str"
2022-04-08 21:19:07,274 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,274 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,274 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1859", type(val)="int"
2022-04-08 21:19:07,274 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,274 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,274 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1859", type(val) is: "int"
2022-04-08 21:19:07,274 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,274 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,275 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1859", type(val)="int"
2022-04-08 21:19:07,275 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,275 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,275 : INFO -> Inside convert_kv(): key="objectEndDate", val="1859", type(val) is: "int"
2022-04-08 21:19:07,275 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,275 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,275 : INFO -> Looping inside convert_dict(): key="medium", val="Bronze or copper", type(val)="str"
2022-04-08 21:19:07,275 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,275 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,275 : INFO -> Inside convert_kv(): key="medium", val="Bronze or copper", type(val) is: "str"
2022-04-08 21:19:07,275 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,275 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,275 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 1 1/8 in. (2.9 cm)", type(val)="str"
2022-04-08 21:19:07,275 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,275 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,275 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 1 1/8 in. (2.9 cm)", type(val) is: "str"
2022-04-08 21:19:07,275 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,276 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,276 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}]", type(val)="list"
2022-04-08 21:19:07,276 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,276 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,276 : INFO -> Inside convert_list()
2022-04-08 21:19:07,276 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}", item_name="item", type="dict"
2022-04-08 21:19:07,276 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 2.9}}"
2022-04-08 21:19:07,276 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,276 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,276 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,276 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,276 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,276 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,276 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,276 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,276 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,276 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,276 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,277 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,277 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 2.9}", type(val)="dict"
2022-04-08 21:19:07,277 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,277 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,277 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 2.9}"
2022-04-08 21:19:07,277 : INFO -> Looping inside convert_dict(): key="Diameter", val="2.9", type(val)="float"
2022-04-08 21:19:07,277 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,277 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,277 : INFO -> Inside convert_kv(): key="Diameter", val="2.9", type(val) is: "float"
2022-04-08 21:19:07,277 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,277 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,277 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val)="str"
2022-04-08 21:19:07,277 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,277 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,277 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val) is: "str"
2022-04-08 21:19:07,277 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,277 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,278 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,278 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,278 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,278 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,278 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,278 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,278 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,278 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,278 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,278 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,278 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,278 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,278 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,278 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,278 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,279 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,279 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,279 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,279 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,279 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,279 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,279 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,279 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,279 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,279 : INFO -> Looping inside convert_dict(): key="country", val="Mexico", type(val)="str"
2022-04-08 21:19:07,279 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,279 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,279 : INFO -> Inside convert_kv(): key="country", val="Mexico", type(val) is: "str"
2022-04-08 21:19:07,279 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,279 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,279 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,280 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,280 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,280 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,280 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,280 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,280 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,280 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,280 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,280 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,280 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,280 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,280 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,280 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,280 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,280 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,280 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,280 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,281 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,281 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,281 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,281 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,281 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,281 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,281 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,281 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,281 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,281 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,281 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,281 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,281 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,281 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,281 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,281 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,281 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,281 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,282 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,282 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,282 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,282 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,282 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,282 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,282 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,282 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,282 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,282 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,282 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,282 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,282 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,282 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,282 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,282 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,282 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,283 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,283 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,283 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,283 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,283 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,283 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,283 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,283 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,283 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,283 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,283 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,283 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,283 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,283 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/21", type(val)="str"
2022-04-08 21:19:07,283 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,284 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,284 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/21", type(val) is: "str"
2022-04-08 21:19:07,284 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,284 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,284 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,284 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,284 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,284 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,284 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,284 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,284 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,284 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,284 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,284 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,284 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,284 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,284 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,285 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,285 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,285 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,285 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,285 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,285 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,285 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,285 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,285 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,285 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,285 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,285 : INFO -> Looping inside convert_list(): item="{'objectID': 22, 'isHighlight': False, 'accessionNumber': '16.74.43', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Coin, 1/4 Real', 'culture': 'Guatemalan', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1881', 'objectBeginDate': 1881, 'objectEndDate': 1881, 'medium': 'Silver', 'dimensions': 'Diam. 1/2 in. (1.3 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Guatemala', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/22', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,285 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 22, 'isHighlight': False, 'accessionNumber': '16.74.43', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Coin, 1/4 Real', 'culture': 'Guatemalan', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1881', 'objectBeginDate': 1881, 'objectEndDate': 1881, 'medium': 'Silver', 'dimensions': 'Diam. 1/2 in. (1.3 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Guatemala', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/22', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,285 : INFO -> Looping inside convert_dict(): key="objectID", val="22", type(val)="int"
2022-04-08 21:19:07,285 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,285 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,285 : INFO -> Inside convert_kv(): key="objectID", val="22", type(val) is: "int"
2022-04-08 21:19:07,286 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,286 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,286 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,286 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,286 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,286 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,286 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,286 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,286 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="16.74.43", type(val)="str"
2022-04-08 21:19:07,286 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,286 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,286 : INFO -> Inside convert_kv(): key="accessionNumber", val="16.74.43", type(val) is: "str"
2022-04-08 21:19:07,286 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,286 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,286 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1916", type(val)="str"
2022-04-08 21:19:07,286 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,286 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,287 : INFO -> Inside convert_kv(): key="accessionYear", val="1916", type(val) is: "str"
2022-04-08 21:19:07,287 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,287 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,287 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,287 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,287 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,287 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,287 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,287 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,287 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,287 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,287 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,287 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,287 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,287 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,287 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,288 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,288 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,288 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,288 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,288 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,288 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,288 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,288 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,288 : INFO -> Inside convert_list()
2022-04-08 21:19:07,288 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:07,288 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,288 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,288 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:07,288 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,288 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,288 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,288 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,288 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,289 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,289 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,289 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,289 : INFO -> Looping inside convert_dict(): key="objectName", val="Coin", type(val)="str"
2022-04-08 21:19:07,289 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,289 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,289 : INFO -> Inside convert_kv(): key="objectName", val="Coin", type(val) is: "str"
2022-04-08 21:19:07,289 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,289 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,289 : INFO -> Looping inside convert_dict(): key="title", val="Coin, 1/4 Real", type(val)="str"
2022-04-08 21:19:07,289 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,289 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,289 : INFO -> Inside convert_kv(): key="title", val="Coin, 1/4 Real", type(val) is: "str"
2022-04-08 21:19:07,289 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,289 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,289 : INFO -> Looping inside convert_dict(): key="culture", val="Guatemalan", type(val)="str"
2022-04-08 21:19:07,289 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,290 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,290 : INFO -> Inside convert_kv(): key="culture", val="Guatemalan", type(val) is: "str"
2022-04-08 21:19:07,290 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,290 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,290 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,290 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,290 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,290 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,290 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,290 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,290 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,290 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,290 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,290 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,290 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,290 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,290 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,291 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,291 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,291 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,291 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,291 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,291 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,291 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,291 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,291 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,291 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,291 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,291 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:07,291 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,291 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,291 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:07,291 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,291 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,292 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,292 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,292 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,292 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,292 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,292 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,292 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:07,292 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,292 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,292 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:07,292 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,292 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,292 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:07,292 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,292 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,292 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:07,292 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,292 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,293 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,293 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,293 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,293 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,293 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,293 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,293 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:07,293 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,293 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,293 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:07,293 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,293 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,293 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,293 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,293 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,293 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,293 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,294 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,294 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:07,294 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,294 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,294 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:07,294 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,294 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,294 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:07,294 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,294 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,294 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:07,294 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,294 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,294 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,294 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,294 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,294 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,295 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,295 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,295 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,295 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,295 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,295 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,295 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,295 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,295 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,295 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,295 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,295 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,295 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,295 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,295 : INFO -> Looping inside convert_dict(): key="objectDate", val="1881", type(val)="str"
2022-04-08 21:19:07,295 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,295 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,296 : INFO -> Inside convert_kv(): key="objectDate", val="1881", type(val) is: "str"
2022-04-08 21:19:07,296 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,296 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,296 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1881", type(val)="int"
2022-04-08 21:19:07,296 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,296 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,296 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1881", type(val) is: "int"
2022-04-08 21:19:07,296 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,296 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,296 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1881", type(val)="int"
2022-04-08 21:19:07,296 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,296 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,296 : INFO -> Inside convert_kv(): key="objectEndDate", val="1881", type(val) is: "int"
2022-04-08 21:19:07,296 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,296 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,296 : INFO -> Looping inside convert_dict(): key="medium", val="Silver", type(val)="str"
2022-04-08 21:19:07,296 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,297 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,297 : INFO -> Inside convert_kv(): key="medium", val="Silver", type(val) is: "str"
2022-04-08 21:19:07,297 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,297 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,297 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 1/2 in. (1.3 cm)", type(val)="str"
2022-04-08 21:19:07,297 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,297 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,297 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 1/2 in. (1.3 cm)", type(val) is: "str"
2022-04-08 21:19:07,297 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,297 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,297 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}]", type(val)="list"
2022-04-08 21:19:07,297 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,297 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,297 : INFO -> Inside convert_list()
2022-04-08 21:19:07,297 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}", item_name="item", type="dict"
2022-04-08 21:19:07,297 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}"
2022-04-08 21:19:07,297 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,297 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,298 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,298 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,298 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,298 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,298 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,298 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,298 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,298 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,298 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,298 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,298 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 1.27}", type(val)="dict"
2022-04-08 21:19:07,298 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,298 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,298 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 1.27}"
2022-04-08 21:19:07,298 : INFO -> Looping inside convert_dict(): key="Diameter", val="1.27", type(val)="float"
2022-04-08 21:19:07,298 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,298 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,299 : INFO -> Inside convert_kv(): key="Diameter", val="1.27", type(val) is: "float"
2022-04-08 21:19:07,299 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,299 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,299 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val)="str"
2022-04-08 21:19:07,299 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,299 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,299 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val) is: "str"
2022-04-08 21:19:07,299 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,299 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,299 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,299 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,299 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,299 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,299 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,299 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,299 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,299 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,300 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,300 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,300 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,300 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,300 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,300 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,300 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,300 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,300 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,300 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,300 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,300 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,300 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,300 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,300 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,300 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,300 : INFO -> Looping inside convert_dict(): key="country", val="Guatemala", type(val)="str"
2022-04-08 21:19:07,301 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,301 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,301 : INFO -> Inside convert_kv(): key="country", val="Guatemala", type(val) is: "str"
2022-04-08 21:19:07,301 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,301 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,301 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,301 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,301 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,301 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,301 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,301 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,301 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,301 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,301 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,301 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,302 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,302 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,302 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,302 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,302 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,302 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,302 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,302 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,302 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,302 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,302 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,302 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,302 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,302 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,302 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,302 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,302 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,303 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,303 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,303 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,303 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,303 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,303 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,303 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,303 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,303 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,303 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,303 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,303 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,303 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,303 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,303 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,303 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,303 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,304 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,304 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,304 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,304 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,304 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,304 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,304 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,304 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,304 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,304 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,304 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,304 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,304 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,304 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,304 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,304 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,304 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,305 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,305 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,305 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,305 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,305 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,305 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/22", type(val)="str"
2022-04-08 21:19:07,305 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,305 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,305 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/22", type(val) is: "str"
2022-04-08 21:19:07,305 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,305 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,305 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,305 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,305 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,305 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,305 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,305 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,306 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,306 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,306 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,306 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,306 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,306 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,306 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,306 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,306 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,306 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,306 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,306 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,306 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,306 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,306 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,306 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,306 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,306 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,307 : INFO -> Looping inside convert_list(): item="{'objectID': 23, 'isHighlight': False, 'accessionNumber': '16.74.44', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Coin, 1/4 Real', 'culture': 'Guatemalan', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1878', 'objectBeginDate': 1878, 'objectEndDate': 1878, 'medium': 'Silver', 'dimensions': 'Diam. 1/2 in. (1.3 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Guatemala', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/23', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,307 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 23, 'isHighlight': False, 'accessionNumber': '16.74.44', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Coin', 'title': 'Coin, 1/4 Real', 'culture': 'Guatemalan', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1878', 'objectBeginDate': 1878, 'objectEndDate': 1878, 'medium': 'Silver', 'dimensions': 'Diam. 1/2 in. (1.3 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Guatemala', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/23', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,307 : INFO -> Looping inside convert_dict(): key="objectID", val="23", type(val)="int"
2022-04-08 21:19:07,307 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,307 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,307 : INFO -> Inside convert_kv(): key="objectID", val="23", type(val) is: "int"
2022-04-08 21:19:07,307 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,307 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,307 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,307 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,307 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,307 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,307 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,307 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,307 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="16.74.44", type(val)="str"
2022-04-08 21:19:07,307 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,308 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,308 : INFO -> Inside convert_kv(): key="accessionNumber", val="16.74.44", type(val) is: "str"
2022-04-08 21:19:07,308 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,308 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,308 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1916", type(val)="str"
2022-04-08 21:19:07,308 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,308 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,308 : INFO -> Inside convert_kv(): key="accessionYear", val="1916", type(val) is: "str"
2022-04-08 21:19:07,308 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,308 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,308 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,308 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,308 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,308 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,308 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,308 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,308 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,309 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,309 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,309 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,309 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,309 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,309 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,309 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,309 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,309 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,309 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,309 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,309 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,309 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,309 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,309 : INFO -> Inside convert_list()
2022-04-08 21:19:07,309 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:07,309 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,309 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,310 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:07,310 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,310 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,310 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,310 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,310 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,310 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,310 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,310 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,310 : INFO -> Looping inside convert_dict(): key="objectName", val="Coin", type(val)="str"
2022-04-08 21:19:07,310 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,310 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,310 : INFO -> Inside convert_kv(): key="objectName", val="Coin", type(val) is: "str"
2022-04-08 21:19:07,310 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,310 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,310 : INFO -> Looping inside convert_dict(): key="title", val="Coin, 1/4 Real", type(val)="str"
2022-04-08 21:19:07,310 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,311 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,311 : INFO -> Inside convert_kv(): key="title", val="Coin, 1/4 Real", type(val) is: "str"
2022-04-08 21:19:07,311 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,311 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,311 : INFO -> Looping inside convert_dict(): key="culture", val="Guatemalan", type(val)="str"
2022-04-08 21:19:07,311 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,311 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,311 : INFO -> Inside convert_kv(): key="culture", val="Guatemalan", type(val) is: "str"
2022-04-08 21:19:07,311 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,311 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,311 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,311 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,311 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,311 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,311 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,311 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,312 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,312 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,312 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,312 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,312 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,312 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,312 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,312 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,312 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,312 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,312 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,312 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,312 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,312 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,312 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,312 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,312 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,312 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,313 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:07,313 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,313 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,313 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:07,313 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,313 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,313 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,313 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,313 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,313 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,313 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,313 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,313 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:07,313 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,313 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,313 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:07,313 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,313 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,314 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:07,314 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,314 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,314 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:07,314 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,314 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,314 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,314 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,314 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,314 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,314 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,314 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,314 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:07,314 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,314 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,314 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:07,314 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,315 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,315 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,315 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,315 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,315 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,315 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,315 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,315 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:07,315 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,315 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,315 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:07,315 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,315 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,315 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:07,315 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,315 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,315 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:07,316 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,316 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,316 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,316 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,316 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,316 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,316 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,316 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,316 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,316 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,316 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,316 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,316 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,316 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,316 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,316 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,316 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,317 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,317 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,317 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,317 : INFO -> Looping inside convert_dict(): key="objectDate", val="1878", type(val)="str"
2022-04-08 21:19:07,317 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,317 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,317 : INFO -> Inside convert_kv(): key="objectDate", val="1878", type(val) is: "str"
2022-04-08 21:19:07,317 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,317 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,317 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1878", type(val)="int"
2022-04-08 21:19:07,317 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,317 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,317 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1878", type(val) is: "int"
2022-04-08 21:19:07,317 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,317 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,317 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1878", type(val)="int"
2022-04-08 21:19:07,317 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,317 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,318 : INFO -> Inside convert_kv(): key="objectEndDate", val="1878", type(val) is: "int"
2022-04-08 21:19:07,318 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,318 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,318 : INFO -> Looping inside convert_dict(): key="medium", val="Silver", type(val)="str"
2022-04-08 21:19:07,318 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,318 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,318 : INFO -> Inside convert_kv(): key="medium", val="Silver", type(val) is: "str"
2022-04-08 21:19:07,318 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,318 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,318 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 1/2 in. (1.3 cm)", type(val)="str"
2022-04-08 21:19:07,318 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,318 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,318 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 1/2 in. (1.3 cm)", type(val) is: "str"
2022-04-08 21:19:07,318 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,318 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,319 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}]", type(val)="list"
2022-04-08 21:19:07,319 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,319 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,319 : INFO -> Inside convert_list()
2022-04-08 21:19:07,319 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}", item_name="item", type="dict"
2022-04-08 21:19:07,319 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.27}}"
2022-04-08 21:19:07,319 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,319 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,319 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,319 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,319 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,319 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,319 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,319 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,319 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,319 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,319 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,319 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,320 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 1.27}", type(val)="dict"
2022-04-08 21:19:07,320 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,320 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,320 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 1.27}"
2022-04-08 21:19:07,320 : INFO -> Looping inside convert_dict(): key="Diameter", val="1.27", type(val)="float"
2022-04-08 21:19:07,320 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,320 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,320 : INFO -> Inside convert_kv(): key="Diameter", val="1.27", type(val) is: "float"
2022-04-08 21:19:07,320 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,320 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,320 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val)="str"
2022-04-08 21:19:07,320 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,320 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,320 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val) is: "str"
2022-04-08 21:19:07,320 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,320 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,320 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,321 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,321 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,321 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,321 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,321 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,321 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,321 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,321 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,321 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,321 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,321 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,321 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,321 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,321 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,321 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,321 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,321 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,322 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,322 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,322 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,322 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,322 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,322 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,322 : INFO -> Looping inside convert_dict(): key="country", val="Guatemala", type(val)="str"
2022-04-08 21:19:07,322 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,322 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,322 : INFO -> Inside convert_kv(): key="country", val="Guatemala", type(val) is: "str"
2022-04-08 21:19:07,322 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,322 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,322 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,322 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,322 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,322 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,322 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,322 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,323 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,323 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,323 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,323 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,323 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,323 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,323 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,323 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,323 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,323 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,323 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,323 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,323 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,323 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,323 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,323 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,323 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,323 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,324 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,324 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,324 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,324 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,324 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,324 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,324 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,324 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,324 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,324 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,324 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,324 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,324 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,324 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,324 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,324 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,324 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,325 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,325 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,325 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,325 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,325 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,325 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,325 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,325 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,325 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,325 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,325 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,325 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,325 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,325 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,325 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,325 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,325 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,326 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,326 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,326 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,326 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,326 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,326 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,326 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,326 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,326 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/23", type(val)="str"
2022-04-08 21:19:07,326 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,326 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,326 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/23", type(val) is: "str"
2022-04-08 21:19:07,326 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,326 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,326 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,326 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,326 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,327 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,327 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,327 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,327 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,327 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,327 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,327 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,327 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,327 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,327 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,327 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,327 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,327 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,327 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,327 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,327 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,327 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,327 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,328 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,328 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,328 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,328 : INFO -> Looping inside convert_list(): item="{'objectID': 24, 'isHighlight': False, 'accessionNumber': '16.74.33', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/24', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,328 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 24, 'isHighlight': False, 'accessionNumber': '16.74.33', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/24', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,328 : INFO -> Looping inside convert_dict(): key="objectID", val="24", type(val)="int"
2022-04-08 21:19:07,328 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,328 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,328 : INFO -> Inside convert_kv(): key="objectID", val="24", type(val) is: "int"
2022-04-08 21:19:07,328 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,328 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,328 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,328 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,328 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,328 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,329 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,329 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,329 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="16.74.33", type(val)="str"
2022-04-08 21:19:07,329 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,329 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,329 : INFO -> Inside convert_kv(): key="accessionNumber", val="16.74.33", type(val) is: "str"
2022-04-08 21:19:07,329 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,329 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,329 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1916", type(val)="str"
2022-04-08 21:19:07,329 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,329 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,329 : INFO -> Inside convert_kv(): key="accessionYear", val="1916", type(val) is: "str"
2022-04-08 21:19:07,329 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,329 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,329 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,329 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,329 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,329 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,330 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,330 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,330 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,330 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,330 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,330 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,330 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,330 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,330 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,330 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,330 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,330 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,330 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,330 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,330 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,330 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,330 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,331 : INFO -> Inside convert_list()
2022-04-08 21:19:07,331 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:07,331 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,331 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,331 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:07,331 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,331 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,331 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,331 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,331 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,331 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,331 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,331 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,331 : INFO -> Looping inside convert_dict(): key="objectName", val="Centavos", type(val)="str"
2022-04-08 21:19:07,331 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,331 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,331 : INFO -> Inside convert_kv(): key="objectName", val="Centavos", type(val) is: "str"
2022-04-08 21:19:07,332 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,332 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,332 : INFO -> Looping inside convert_dict(): key="title", val="Coin, 10 Centavos", type(val)="str"
2022-04-08 21:19:07,332 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,332 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,332 : INFO -> Inside convert_kv(): key="title", val="Coin, 10 Centavos", type(val) is: "str"
2022-04-08 21:19:07,332 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,332 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,332 : INFO -> Looping inside convert_dict(): key="culture", val="Mexican", type(val)="str"
2022-04-08 21:19:07,332 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,332 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,332 : INFO -> Inside convert_kv(): key="culture", val="Mexican", type(val) is: "str"
2022-04-08 21:19:07,332 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,332 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,332 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,332 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,332 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,332 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,333 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,333 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,333 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,333 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,333 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,333 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,333 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,333 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,333 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,333 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,333 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,333 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,333 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,333 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,333 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,333 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,333 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,334 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,334 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,334 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,334 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:07,334 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,334 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,334 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:07,334 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,334 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,334 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,334 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,334 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,334 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,334 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,334 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,334 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:07,334 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,334 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,335 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:07,335 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,335 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,335 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:07,335 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,335 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,335 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:07,335 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,335 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,335 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,335 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,335 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,335 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,335 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,335 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,336 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:07,336 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,336 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,336 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:07,336 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,336 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,336 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,336 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,336 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,336 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,336 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,336 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,336 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:07,336 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,336 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,336 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:07,336 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,337 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,337 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:07,337 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,337 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,337 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:07,337 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,337 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,337 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,337 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,337 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,337 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,337 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,337 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,337 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,337 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,337 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,337 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,338 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,338 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,338 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,338 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,338 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,338 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,338 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,338 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,338 : INFO -> Looping inside convert_dict(): key="objectDate", val="1860–70", type(val)="str"
2022-04-08 21:19:07,338 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,338 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,338 : INFO -> Inside convert_kv(): key="objectDate", val="1860–70", type(val) is: "str"
2022-04-08 21:19:07,338 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,338 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,338 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1860", type(val)="int"
2022-04-08 21:19:07,338 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,338 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,339 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1860", type(val) is: "int"
2022-04-08 21:19:07,339 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,339 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,339 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1870", type(val)="int"
2022-04-08 21:19:07,339 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,339 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,339 : INFO -> Inside convert_kv(): key="objectEndDate", val="1870", type(val) is: "int"
2022-04-08 21:19:07,339 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,339 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,339 : INFO -> Looping inside convert_dict(): key="medium", val="Nickel", type(val)="str"
2022-04-08 21:19:07,339 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,339 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,339 : INFO -> Inside convert_kv(): key="medium", val="Nickel", type(val) is: "str"
2022-04-08 21:19:07,339 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,339 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,339 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 3/4 in. (1.9 cm)", type(val)="str"
2022-04-08 21:19:07,339 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,339 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,340 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 3/4 in. (1.9 cm)", type(val) is: "str"
2022-04-08 21:19:07,340 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,340 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,340 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}]", type(val)="list"
2022-04-08 21:19:07,340 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,340 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,340 : INFO -> Inside convert_list()
2022-04-08 21:19:07,340 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}", item_name="item", type="dict"
2022-04-08 21:19:07,340 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}"
2022-04-08 21:19:07,340 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,340 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,340 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,340 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,340 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,340 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,340 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,340 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,341 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,341 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,341 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,341 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,341 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 1.905}", type(val)="dict"
2022-04-08 21:19:07,341 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,341 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,341 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 1.905}"
2022-04-08 21:19:07,341 : INFO -> Looping inside convert_dict(): key="Diameter", val="1.905", type(val)="float"
2022-04-08 21:19:07,341 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,341 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,341 : INFO -> Inside convert_kv(): key="Diameter", val="1.905", type(val) is: "float"
2022-04-08 21:19:07,341 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,341 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,341 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val)="str"
2022-04-08 21:19:07,341 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,341 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,342 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val) is: "str"
2022-04-08 21:19:07,342 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,342 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,342 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,342 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,342 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,342 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,342 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,342 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,342 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,342 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,342 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,342 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,342 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,342 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,342 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,342 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,342 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,343 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,343 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,343 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,343 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,343 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,343 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,343 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,343 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,343 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,343 : INFO -> Looping inside convert_dict(): key="country", val="Mexico", type(val)="str"
2022-04-08 21:19:07,343 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,343 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,343 : INFO -> Inside convert_kv(): key="country", val="Mexico", type(val) is: "str"
2022-04-08 21:19:07,343 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,343 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,343 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,343 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,344 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,344 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,344 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,344 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,344 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,344 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,344 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,344 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,344 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,344 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,344 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,344 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,344 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,344 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,344 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,344 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,344 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,345 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,345 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,345 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,345 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,345 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,345 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,345 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,345 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,345 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,345 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,345 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,345 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,345 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,345 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,345 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,345 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,345 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,346 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,346 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,346 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,346 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,346 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,346 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,346 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,346 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,346 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,346 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,346 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,346 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,346 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,346 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,346 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,346 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,346 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,346 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,347 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,347 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,347 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,347 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,347 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,347 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,347 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,347 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,347 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,347 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,347 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,347 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,347 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/24", type(val)="str"
2022-04-08 21:19:07,347 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,347 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,347 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/24", type(val) is: "str"
2022-04-08 21:19:07,347 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,348 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,348 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,348 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,348 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,348 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,348 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,348 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,348 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,348 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,348 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,348 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,348 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,348 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,348 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,348 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,348 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,348 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,348 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,349 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,349 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,349 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,349 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,349 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,349 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,349 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,349 : INFO -> Looping inside convert_list(): item="{'objectID': 25, 'isHighlight': False, 'accessionNumber': '16.74.34', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/25', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,349 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 25, 'isHighlight': False, 'accessionNumber': '16.74.34', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/25', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,349 : INFO -> Looping inside convert_dict(): key="objectID", val="25", type(val)="int"
2022-04-08 21:19:07,349 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,349 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,349 : INFO -> Inside convert_kv(): key="objectID", val="25", type(val) is: "int"
2022-04-08 21:19:07,349 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,349 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,350 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,350 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,350 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,350 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,350 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,350 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,350 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="16.74.34", type(val)="str"
2022-04-08 21:19:07,350 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,350 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,350 : INFO -> Inside convert_kv(): key="accessionNumber", val="16.74.34", type(val) is: "str"
2022-04-08 21:19:07,350 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,350 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,350 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1916", type(val)="str"
2022-04-08 21:19:07,350 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,350 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,350 : INFO -> Inside convert_kv(): key="accessionYear", val="1916", type(val) is: "str"
2022-04-08 21:19:07,350 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,350 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,351 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,351 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,351 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,351 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,351 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,351 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,351 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,351 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,351 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,351 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,351 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,351 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,351 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,351 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,351 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,351 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,351 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,352 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,352 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,352 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,352 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,352 : INFO -> Inside convert_list()
2022-04-08 21:19:07,352 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:07,352 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,352 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,352 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:07,352 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,352 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,352 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,352 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,352 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,352 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,352 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,352 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,353 : INFO -> Looping inside convert_dict(): key="objectName", val="Centavos", type(val)="str"
2022-04-08 21:19:07,353 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,353 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,353 : INFO -> Inside convert_kv(): key="objectName", val="Centavos", type(val) is: "str"
2022-04-08 21:19:07,353 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,353 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,353 : INFO -> Looping inside convert_dict(): key="title", val="Coin, 10 Centavos", type(val)="str"
2022-04-08 21:19:07,353 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,353 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,353 : INFO -> Inside convert_kv(): key="title", val="Coin, 10 Centavos", type(val) is: "str"
2022-04-08 21:19:07,353 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,353 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,353 : INFO -> Looping inside convert_dict(): key="culture", val="Mexican", type(val)="str"
2022-04-08 21:19:07,353 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,353 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,354 : INFO -> Inside convert_kv(): key="culture", val="Mexican", type(val) is: "str"
2022-04-08 21:19:07,354 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,354 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,354 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,354 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,354 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,354 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,354 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,354 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,354 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,354 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,354 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,354 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,354 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,354 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,354 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,354 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,354 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,355 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,355 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,355 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,355 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,355 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,355 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,355 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,355 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,355 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,355 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:07,355 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,355 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,355 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:07,355 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,355 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,355 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,355 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,356 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,356 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,356 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,356 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,356 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:07,356 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,356 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,356 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:07,356 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,356 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,356 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:07,356 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,356 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,356 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:07,356 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,356 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,356 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,356 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,357 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,357 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,357 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,357 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,357 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:07,357 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,357 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,357 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:07,357 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,357 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,357 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,357 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,357 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,357 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,357 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,357 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,357 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:07,358 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,358 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,358 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:07,358 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,358 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,358 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:07,358 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,358 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,358 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:07,358 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,358 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,358 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,358 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,358 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,358 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,358 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,358 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,359 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,359 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,359 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,359 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,359 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,359 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,359 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,359 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,359 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,359 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,359 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,359 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,359 : INFO -> Looping inside convert_dict(): key="objectDate", val="1860–70", type(val)="str"
2022-04-08 21:19:07,359 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,359 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,359 : INFO -> Inside convert_kv(): key="objectDate", val="1860–70", type(val) is: "str"
2022-04-08 21:19:07,359 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,359 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,360 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1860", type(val)="int"
2022-04-08 21:19:07,360 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,360 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,360 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1860", type(val) is: "int"
2022-04-08 21:19:07,360 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,360 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,360 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1870", type(val)="int"
2022-04-08 21:19:07,360 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,360 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,360 : INFO -> Inside convert_kv(): key="objectEndDate", val="1870", type(val) is: "int"
2022-04-08 21:19:07,360 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,360 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,360 : INFO -> Looping inside convert_dict(): key="medium", val="Nickel", type(val)="str"
2022-04-08 21:19:07,360 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,360 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,360 : INFO -> Inside convert_kv(): key="medium", val="Nickel", type(val) is: "str"
2022-04-08 21:19:07,360 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,361 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,361 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 3/4 in. (1.9 cm)", type(val)="str"
2022-04-08 21:19:07,361 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,361 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,361 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 3/4 in. (1.9 cm)", type(val) is: "str"
2022-04-08 21:19:07,361 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,361 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,361 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}]", type(val)="list"
2022-04-08 21:19:07,361 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,361 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,361 : INFO -> Inside convert_list()
2022-04-08 21:19:07,361 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}", item_name="item", type="dict"
2022-04-08 21:19:07,361 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}"
2022-04-08 21:19:07,361 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,361 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,361 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,361 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,361 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,362 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,362 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,362 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,362 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,362 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,362 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,362 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,362 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 1.905}", type(val)="dict"
2022-04-08 21:19:07,362 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,362 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,362 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 1.905}"
2022-04-08 21:19:07,362 : INFO -> Looping inside convert_dict(): key="Diameter", val="1.905", type(val)="float"
2022-04-08 21:19:07,362 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,362 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,362 : INFO -> Inside convert_kv(): key="Diameter", val="1.905", type(val) is: "float"
2022-04-08 21:19:07,362 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,362 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,363 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val)="str"
2022-04-08 21:19:07,363 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,363 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,363 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val) is: "str"
2022-04-08 21:19:07,363 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,363 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,363 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,363 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,363 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,363 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,363 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,363 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,363 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,363 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,363 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,363 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,363 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,364 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,364 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,364 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,364 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,364 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,364 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,364 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,364 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,364 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,364 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,364 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,364 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,364 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,364 : INFO -> Looping inside convert_dict(): key="country", val="Mexico", type(val)="str"
2022-04-08 21:19:07,364 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,364 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,364 : INFO -> Inside convert_kv(): key="country", val="Mexico", type(val) is: "str"
2022-04-08 21:19:07,365 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,365 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,365 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,365 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,365 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,365 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,365 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,365 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,365 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,365 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,365 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,365 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,365 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,365 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,365 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,365 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,365 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,366 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,366 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,366 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,366 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,366 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,366 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,366 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,366 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,366 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,366 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,366 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,366 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,366 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,366 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,366 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,366 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,366 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,366 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,367 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,367 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,367 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,367 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,367 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,367 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,367 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,367 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,367 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,367 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,367 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,367 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,367 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,367 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,367 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,367 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,367 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,368 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,368 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,368 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,368 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,368 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,368 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,368 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,368 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,368 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,368 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,368 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,368 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,368 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,368 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,368 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,368 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,368 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/25", type(val)="str"
2022-04-08 21:19:07,368 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,369 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,369 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/25", type(val) is: "str"
2022-04-08 21:19:07,369 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,369 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,369 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,369 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,369 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,369 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,369 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,369 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,369 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,369 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,369 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,369 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,369 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,369 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,369 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,370 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,370 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,370 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,370 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,370 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,370 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,370 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,370 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,370 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,370 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,370 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,370 : INFO -> Looping inside convert_list(): item="{'objectID': 26, 'isHighlight': False, 'accessionNumber': '16.74.35', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/26', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,370 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 26, 'isHighlight': False, 'accessionNumber': '16.74.35', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/26', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,370 : INFO -> Looping inside convert_dict(): key="objectID", val="26", type(val)="int"
2022-04-08 21:19:07,371 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,371 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,371 : INFO -> Inside convert_kv(): key="objectID", val="26", type(val) is: "int"
2022-04-08 21:19:07,371 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,371 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,371 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,371 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,371 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,371 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,371 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,371 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,371 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="16.74.35", type(val)="str"
2022-04-08 21:19:07,371 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,371 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,371 : INFO -> Inside convert_kv(): key="accessionNumber", val="16.74.35", type(val) is: "str"
2022-04-08 21:19:07,371 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,371 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,372 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1916", type(val)="str"
2022-04-08 21:19:07,372 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,372 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,372 : INFO -> Inside convert_kv(): key="accessionYear", val="1916", type(val) is: "str"
2022-04-08 21:19:07,372 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,372 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,372 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,372 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,372 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,372 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,372 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,372 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,372 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,372 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,372 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,372 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,372 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,372 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,373 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,373 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,373 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,373 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,373 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,373 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,373 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,373 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,373 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,373 : INFO -> Inside convert_list()
2022-04-08 21:19:07,373 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:07,373 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,373 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,373 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:07,373 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,373 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,373 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,374 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,374 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,374 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,374 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,374 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,374 : INFO -> Looping inside convert_dict(): key="objectName", val="Centavos", type(val)="str"
2022-04-08 21:19:07,374 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,374 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,374 : INFO -> Inside convert_kv(): key="objectName", val="Centavos", type(val) is: "str"
2022-04-08 21:19:07,374 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,374 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,374 : INFO -> Looping inside convert_dict(): key="title", val="Coin, 10 Centavos", type(val)="str"
2022-04-08 21:19:07,374 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,374 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,374 : INFO -> Inside convert_kv(): key="title", val="Coin, 10 Centavos", type(val) is: "str"
2022-04-08 21:19:07,374 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,374 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,375 : INFO -> Looping inside convert_dict(): key="culture", val="Mexican", type(val)="str"
2022-04-08 21:19:07,375 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,375 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,375 : INFO -> Inside convert_kv(): key="culture", val="Mexican", type(val) is: "str"
2022-04-08 21:19:07,375 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,375 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,375 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,375 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,375 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,375 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,375 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,375 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,375 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,375 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,375 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,375 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,375 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,375 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,376 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,376 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,376 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,376 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,376 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,376 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,376 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,376 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,376 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,376 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,376 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,376 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,376 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:07,376 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,376 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,376 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:07,376 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,377 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,377 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,377 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,377 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,377 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,377 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,377 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,377 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:07,377 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,377 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,377 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:07,377 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,377 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,377 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:07,377 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,377 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,377 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:07,378 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,378 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,378 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,378 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,378 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,378 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,378 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,378 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,378 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:07,378 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,378 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,378 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:07,378 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,378 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,378 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,378 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,378 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,378 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,379 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,379 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,379 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:07,379 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,379 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,379 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:07,379 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,379 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,379 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:07,379 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,379 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,379 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:07,379 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,379 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,379 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,379 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,379 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,380 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,380 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,380 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,380 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,380 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,380 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,380 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,380 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,380 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,380 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,380 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,380 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,380 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,380 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,380 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,380 : INFO -> Looping inside convert_dict(): key="objectDate", val="1860–70", type(val)="str"
2022-04-08 21:19:07,380 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,381 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,381 : INFO -> Inside convert_kv(): key="objectDate", val="1860–70", type(val) is: "str"
2022-04-08 21:19:07,381 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,381 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,381 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1860", type(val)="int"
2022-04-08 21:19:07,381 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,381 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,381 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1860", type(val) is: "int"
2022-04-08 21:19:07,381 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,381 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,381 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1870", type(val)="int"
2022-04-08 21:19:07,381 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,381 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,381 : INFO -> Inside convert_kv(): key="objectEndDate", val="1870", type(val) is: "int"
2022-04-08 21:19:07,381 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,381 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,381 : INFO -> Looping inside convert_dict(): key="medium", val="Nickel", type(val)="str"
2022-04-08 21:19:07,382 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,382 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,382 : INFO -> Inside convert_kv(): key="medium", val="Nickel", type(val) is: "str"
2022-04-08 21:19:07,382 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,382 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,382 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 3/4 in. (1.9 cm)", type(val)="str"
2022-04-08 21:19:07,382 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,382 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,382 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 3/4 in. (1.9 cm)", type(val) is: "str"
2022-04-08 21:19:07,382 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,382 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,382 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}]", type(val)="list"
2022-04-08 21:19:07,382 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,382 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,382 : INFO -> Inside convert_list()
2022-04-08 21:19:07,382 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}", item_name="item", type="dict"
2022-04-08 21:19:07,382 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}"
2022-04-08 21:19:07,382 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,383 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,383 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,383 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,383 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,383 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,383 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,383 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,383 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,383 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,383 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,383 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,383 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 1.905}", type(val)="dict"
2022-04-08 21:19:07,383 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,383 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,383 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 1.905}"
2022-04-08 21:19:07,383 : INFO -> Looping inside convert_dict(): key="Diameter", val="1.905", type(val)="float"
2022-04-08 21:19:07,383 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,384 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,384 : INFO -> Inside convert_kv(): key="Diameter", val="1.905", type(val) is: "float"
2022-04-08 21:19:07,384 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,384 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,384 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val)="str"
2022-04-08 21:19:07,384 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,384 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,384 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val) is: "str"
2022-04-08 21:19:07,384 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,384 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,384 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,384 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,384 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,384 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,384 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,384 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,384 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,385 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,385 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,385 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,385 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,385 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,385 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,385 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,385 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,385 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,385 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,385 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,385 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,385 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,385 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,385 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,385 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,385 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,386 : INFO -> Looping inside convert_dict(): key="country", val="Mexico", type(val)="str"
2022-04-08 21:19:07,386 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,386 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,386 : INFO -> Inside convert_kv(): key="country", val="Mexico", type(val) is: "str"
2022-04-08 21:19:07,386 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,386 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,386 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,386 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,386 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,386 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,386 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,386 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,386 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,386 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,386 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,386 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,386 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,387 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,387 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,387 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,387 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,387 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,387 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,387 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,387 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,387 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,387 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,387 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,387 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,387 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,387 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,387 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,387 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,388 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,388 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,388 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,388 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,388 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,388 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,388 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,388 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,388 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,388 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,388 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,388 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,388 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,388 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,388 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,388 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,389 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,389 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,389 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,389 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,389 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,389 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,389 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,389 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,389 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,389 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,389 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,389 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,389 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,389 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,389 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,389 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,389 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,389 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,390 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,390 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,390 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,390 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,390 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,390 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/26", type(val)="str"
2022-04-08 21:19:07,390 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,390 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,390 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/26", type(val) is: "str"
2022-04-08 21:19:07,390 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,390 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,390 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,390 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,390 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,390 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,390 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,390 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,391 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,391 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,391 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,391 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,391 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,391 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,391 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,391 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,391 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,391 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,391 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,391 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,391 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,391 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,391 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,391 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,391 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,391 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,392 : INFO -> Looping inside convert_list(): item="{'objectID': 27, 'isHighlight': False, 'accessionNumber': '16.74.36', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/27', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,392 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 27, 'isHighlight': False, 'accessionNumber': '16.74.36', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/27', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,392 : INFO -> Looping inside convert_dict(): key="objectID", val="27", type(val)="int"
2022-04-08 21:19:07,392 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,392 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,392 : INFO -> Inside convert_kv(): key="objectID", val="27", type(val) is: "int"
2022-04-08 21:19:07,392 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,392 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,392 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,392 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,392 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,392 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,392 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,392 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,392 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="16.74.36", type(val)="str"
2022-04-08 21:19:07,393 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,393 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,393 : INFO -> Inside convert_kv(): key="accessionNumber", val="16.74.36", type(val) is: "str"
2022-04-08 21:19:07,393 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,393 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,393 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1916", type(val)="str"
2022-04-08 21:19:07,393 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,393 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,393 : INFO -> Inside convert_kv(): key="accessionYear", val="1916", type(val) is: "str"
2022-04-08 21:19:07,393 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,393 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,393 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,393 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,393 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,393 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,393 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,393 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,394 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,394 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,394 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,394 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,394 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,394 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,394 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,394 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,394 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,394 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,394 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,394 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,394 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,394 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,394 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,394 : INFO -> Inside convert_list()
2022-04-08 21:19:07,394 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:07,394 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,395 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,395 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:07,395 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,395 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,395 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,395 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,395 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,395 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,395 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,395 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,395 : INFO -> Looping inside convert_dict(): key="objectName", val="Centavos", type(val)="str"
2022-04-08 21:19:07,395 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,395 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,395 : INFO -> Inside convert_kv(): key="objectName", val="Centavos", type(val) is: "str"
2022-04-08 21:19:07,395 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,395 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,396 : INFO -> Looping inside convert_dict(): key="title", val="Coin, 10 Centavos", type(val)="str"
2022-04-08 21:19:07,396 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,396 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,396 : INFO -> Inside convert_kv(): key="title", val="Coin, 10 Centavos", type(val) is: "str"
2022-04-08 21:19:07,396 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,396 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,396 : INFO -> Looping inside convert_dict(): key="culture", val="Mexican", type(val)="str"
2022-04-08 21:19:07,396 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,396 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,396 : INFO -> Inside convert_kv(): key="culture", val="Mexican", type(val) is: "str"
2022-04-08 21:19:07,396 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,396 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,396 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,396 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,396 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,396 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,396 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,396 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,397 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,397 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,397 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,397 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,397 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,397 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,397 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,397 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,397 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,397 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,397 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,397 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,397 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,397 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,397 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,397 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,397 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,398 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,398 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:07,398 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,398 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,398 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:07,398 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,398 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,398 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,398 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,398 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,398 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,398 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,398 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,398 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:07,398 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,398 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,398 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:07,398 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,399 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,399 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:07,399 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,399 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,399 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:07,399 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,399 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,399 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,399 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,399 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,399 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,399 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,399 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,399 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:07,399 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,399 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,400 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:07,400 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,400 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,400 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,400 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,400 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,400 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,400 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,400 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,400 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:07,400 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,400 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,400 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:07,400 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,400 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,400 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:07,400 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,400 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,401 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:07,401 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,401 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,401 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,401 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,401 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,401 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,401 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,401 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,401 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,401 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,401 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,401 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,401 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,401 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,401 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,401 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,401 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,402 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,402 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,402 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,402 : INFO -> Looping inside convert_dict(): key="objectDate", val="1860–70", type(val)="str"
2022-04-08 21:19:07,402 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,402 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,402 : INFO -> Inside convert_kv(): key="objectDate", val="1860–70", type(val) is: "str"
2022-04-08 21:19:07,402 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,402 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,402 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1860", type(val)="int"
2022-04-08 21:19:07,402 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,402 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,402 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1860", type(val) is: "int"
2022-04-08 21:19:07,402 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,402 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,402 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1870", type(val)="int"
2022-04-08 21:19:07,402 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,403 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,403 : INFO -> Inside convert_kv(): key="objectEndDate", val="1870", type(val) is: "int"
2022-04-08 21:19:07,403 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,403 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,403 : INFO -> Looping inside convert_dict(): key="medium", val="Nickel", type(val)="str"
2022-04-08 21:19:07,403 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,403 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,403 : INFO -> Inside convert_kv(): key="medium", val="Nickel", type(val) is: "str"
2022-04-08 21:19:07,403 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,403 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,403 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 3/4 in. (1.9 cm)", type(val)="str"
2022-04-08 21:19:07,403 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,403 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,403 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 3/4 in. (1.9 cm)", type(val) is: "str"
2022-04-08 21:19:07,403 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,403 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,404 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}]", type(val)="list"
2022-04-08 21:19:07,404 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,404 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,404 : INFO -> Inside convert_list()
2022-04-08 21:19:07,404 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}", item_name="item", type="dict"
2022-04-08 21:19:07,404 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}"
2022-04-08 21:19:07,404 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,404 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,404 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,404 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,404 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,404 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,404 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,404 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,404 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,404 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,404 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,404 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,405 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 1.905}", type(val)="dict"
2022-04-08 21:19:07,405 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,405 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,405 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 1.905}"
2022-04-08 21:19:07,405 : INFO -> Looping inside convert_dict(): key="Diameter", val="1.905", type(val)="float"
2022-04-08 21:19:07,405 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,405 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,405 : INFO -> Inside convert_kv(): key="Diameter", val="1.905", type(val) is: "float"
2022-04-08 21:19:07,405 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,405 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,405 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val)="str"
2022-04-08 21:19:07,405 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,405 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,405 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val) is: "str"
2022-04-08 21:19:07,405 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,406 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,406 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,406 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,406 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,406 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,406 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,406 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,406 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,406 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,406 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,406 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,406 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,406 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,406 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,406 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,406 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,406 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,407 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,407 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,407 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,407 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,407 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,407 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,407 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,407 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,407 : INFO -> Looping inside convert_dict(): key="country", val="Mexico", type(val)="str"
2022-04-08 21:19:07,407 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,407 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,407 : INFO -> Inside convert_kv(): key="country", val="Mexico", type(val) is: "str"
2022-04-08 21:19:07,407 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,407 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,407 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,407 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,407 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,408 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,408 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,408 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,408 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,408 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,408 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,408 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,408 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,408 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,408 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,408 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,408 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,408 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,408 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,408 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,408 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,408 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,408 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,409 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,409 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,409 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,409 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,409 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,409 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,409 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,409 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,409 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,409 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,409 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,409 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,409 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,409 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,409 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,409 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,409 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,410 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,410 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,410 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,410 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,410 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,410 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,410 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,410 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,410 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,410 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,410 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,410 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,410 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,410 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,410 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,410 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,410 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,411 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,411 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,411 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,411 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,411 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,411 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,411 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,411 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,411 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,411 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,411 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,411 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/27", type(val)="str"
2022-04-08 21:19:07,411 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,411 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,411 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/27", type(val) is: "str"
2022-04-08 21:19:07,411 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,411 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,412 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,412 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,412 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,412 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,412 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,412 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,412 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,412 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,412 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,412 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,412 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,412 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,412 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,412 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,412 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,412 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,412 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,412 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,413 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,413 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,413 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,413 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,413 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,413 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,413 : INFO -> Looping inside convert_list(): item="{'objectID': 28, 'isHighlight': False, 'accessionNumber': '16.74.38', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/28', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,413 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 28, 'isHighlight': False, 'accessionNumber': '16.74.38', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/28', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,413 : INFO -> Looping inside convert_dict(): key="objectID", val="28", type(val)="int"
2022-04-08 21:19:07,413 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,413 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,413 : INFO -> Inside convert_kv(): key="objectID", val="28", type(val) is: "int"
2022-04-08 21:19:07,413 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,413 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,413 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,413 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,414 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,414 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,414 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,414 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,414 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="16.74.38", type(val)="str"
2022-04-08 21:19:07,414 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,414 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,414 : INFO -> Inside convert_kv(): key="accessionNumber", val="16.74.38", type(val) is: "str"
2022-04-08 21:19:07,414 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,414 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,414 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1916", type(val)="str"
2022-04-08 21:19:07,414 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,414 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,414 : INFO -> Inside convert_kv(): key="accessionYear", val="1916", type(val) is: "str"
2022-04-08 21:19:07,414 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,414 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,414 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,415 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,415 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,415 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,415 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,415 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,415 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,415 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,415 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,415 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,415 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,415 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,415 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,415 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,415 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,415 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,415 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,415 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,416 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,416 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,416 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,416 : INFO -> Inside convert_list()
2022-04-08 21:19:07,416 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:07,416 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,416 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,416 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:07,416 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,416 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,416 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,416 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,416 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,416 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,416 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,416 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,416 : INFO -> Looping inside convert_dict(): key="objectName", val="Centavos", type(val)="str"
2022-04-08 21:19:07,417 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,417 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,417 : INFO -> Inside convert_kv(): key="objectName", val="Centavos", type(val) is: "str"
2022-04-08 21:19:07,417 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,417 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,417 : INFO -> Looping inside convert_dict(): key="title", val="Coin, 10 Centavos", type(val)="str"
2022-04-08 21:19:07,417 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,417 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,417 : INFO -> Inside convert_kv(): key="title", val="Coin, 10 Centavos", type(val) is: "str"
2022-04-08 21:19:07,417 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,417 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,417 : INFO -> Looping inside convert_dict(): key="culture", val="Mexican", type(val)="str"
2022-04-08 21:19:07,417 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,417 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,417 : INFO -> Inside convert_kv(): key="culture", val="Mexican", type(val) is: "str"
2022-04-08 21:19:07,417 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,417 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,418 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,418 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,418 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,418 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,418 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,418 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,418 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,418 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,418 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,418 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,418 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,418 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,418 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,418 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,418 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,418 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,418 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,419 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,419 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,419 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,419 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,419 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,419 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,419 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,419 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:07,419 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,419 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,419 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:07,419 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,419 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,419 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,419 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,419 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,420 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,420 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,420 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,420 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:07,420 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,420 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,420 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:07,420 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,420 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,420 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:07,420 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,420 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,420 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:07,420 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,420 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,420 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,420 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,420 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,421 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,421 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,421 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,421 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:07,421 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,421 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,421 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:07,421 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,421 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,421 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,421 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,421 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,421 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,421 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,421 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,421 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:07,421 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,422 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,422 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:07,422 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,422 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,422 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:07,422 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,422 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,422 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:07,422 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,422 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,422 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,422 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,422 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,422 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,422 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,423 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,423 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,423 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,423 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,423 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,423 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,423 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,423 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,423 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,423 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,423 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,423 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,423 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,423 : INFO -> Looping inside convert_dict(): key="objectDate", val="1860–70", type(val)="str"
2022-04-08 21:19:07,423 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,423 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,423 : INFO -> Inside convert_kv(): key="objectDate", val="1860–70", type(val) is: "str"
2022-04-08 21:19:07,424 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,424 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,424 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1860", type(val)="int"
2022-04-08 21:19:07,424 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,424 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,424 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1860", type(val) is: "int"
2022-04-08 21:19:07,424 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,424 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,424 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1870", type(val)="int"
2022-04-08 21:19:07,424 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,424 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,424 : INFO -> Inside convert_kv(): key="objectEndDate", val="1870", type(val) is: "int"
2022-04-08 21:19:07,424 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,424 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,424 : INFO -> Looping inside convert_dict(): key="medium", val="Nickel", type(val)="str"
2022-04-08 21:19:07,424 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,424 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,425 : INFO -> Inside convert_kv(): key="medium", val="Nickel", type(val) is: "str"
2022-04-08 21:19:07,425 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,425 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,425 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 3/4 in. (1.9 cm)", type(val)="str"
2022-04-08 21:19:07,425 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,425 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,425 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 3/4 in. (1.9 cm)", type(val) is: "str"
2022-04-08 21:19:07,425 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,425 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,425 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}]", type(val)="list"
2022-04-08 21:19:07,425 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,425 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,425 : INFO -> Inside convert_list()
2022-04-08 21:19:07,425 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}", item_name="item", type="dict"
2022-04-08 21:19:07,425 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}"
2022-04-08 21:19:07,425 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,425 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,425 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,426 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,426 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,426 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,426 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,426 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,426 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,426 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,426 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,426 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,426 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 1.905}", type(val)="dict"
2022-04-08 21:19:07,426 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,426 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,426 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 1.905}"
2022-04-08 21:19:07,426 : INFO -> Looping inside convert_dict(): key="Diameter", val="1.905", type(val)="float"
2022-04-08 21:19:07,426 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,426 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,426 : INFO -> Inside convert_kv(): key="Diameter", val="1.905", type(val) is: "float"
2022-04-08 21:19:07,427 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,427 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,427 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val)="str"
2022-04-08 21:19:07,427 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,427 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,427 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val) is: "str"
2022-04-08 21:19:07,427 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,427 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,427 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,427 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,427 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,427 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,427 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,427 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,427 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,427 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,427 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,428 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,428 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,428 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,428 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,428 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,428 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,428 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,428 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,428 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,428 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,428 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,428 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,428 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,428 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,428 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,428 : INFO -> Looping inside convert_dict(): key="country", val="Mexico", type(val)="str"
2022-04-08 21:19:07,428 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,428 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,429 : INFO -> Inside convert_kv(): key="country", val="Mexico", type(val) is: "str"
2022-04-08 21:19:07,429 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,429 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,429 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,429 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,429 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,429 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,429 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,429 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,429 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,429 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,429 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,429 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,429 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,429 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,429 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,429 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,430 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,430 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,430 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,430 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,430 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,430 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,430 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,430 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,430 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,430 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,430 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,430 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,430 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,430 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,430 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,430 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,430 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,431 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,431 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,431 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,431 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,431 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,431 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,431 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,431 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,431 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,431 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,431 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,431 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,431 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,431 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,431 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,431 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,431 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,432 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,432 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,432 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,432 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,432 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,432 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,432 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,432 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,432 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,432 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,432 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,432 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,432 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,432 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,432 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,432 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,432 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,432 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,433 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/28", type(val)="str"
2022-04-08 21:19:07,433 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,433 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,433 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/28", type(val) is: "str"
2022-04-08 21:19:07,433 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,433 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,433 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,433 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,433 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,433 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,433 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,433 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,433 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,433 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,433 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,433 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,433 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,434 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,434 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,434 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,434 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,434 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,434 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,434 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,434 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,434 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,434 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,434 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,434 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,434 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,434 : INFO -> Looping inside convert_list(): item="{'objectID': 29, 'isHighlight': False, 'accessionNumber': '16.74.39', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/29', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,434 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 29, 'isHighlight': False, 'accessionNumber': '16.74.39', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1860–70', 'objectBeginDate': 1860, 'objectEndDate': 1870, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/29', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,434 : INFO -> Looping inside convert_dict(): key="objectID", val="29", type(val)="int"
2022-04-08 21:19:07,435 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,435 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,435 : INFO -> Inside convert_kv(): key="objectID", val="29", type(val) is: "int"
2022-04-08 21:19:07,435 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,435 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,435 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,435 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,435 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,435 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,435 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,435 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,435 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="16.74.39", type(val)="str"
2022-04-08 21:19:07,435 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,435 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,435 : INFO -> Inside convert_kv(): key="accessionNumber", val="16.74.39", type(val) is: "str"
2022-04-08 21:19:07,435 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,435 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,436 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1916", type(val)="str"
2022-04-08 21:19:07,436 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,436 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,436 : INFO -> Inside convert_kv(): key="accessionYear", val="1916", type(val) is: "str"
2022-04-08 21:19:07,436 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,436 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,436 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,436 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,436 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,436 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,436 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,436 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,436 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,436 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,436 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,436 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,436 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,437 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,437 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,437 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,437 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,437 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,437 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,437 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,437 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,437 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,437 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,437 : INFO -> Inside convert_list()
2022-04-08 21:19:07,437 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:07,437 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,437 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,437 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:07,437 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,437 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,438 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,438 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,438 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,438 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,438 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,438 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,438 : INFO -> Looping inside convert_dict(): key="objectName", val="Centavos", type(val)="str"
2022-04-08 21:19:07,438 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,438 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,438 : INFO -> Inside convert_kv(): key="objectName", val="Centavos", type(val) is: "str"
2022-04-08 21:19:07,438 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,438 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,438 : INFO -> Looping inside convert_dict(): key="title", val="Coin, 10 Centavos", type(val)="str"
2022-04-08 21:19:07,438 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,438 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,438 : INFO -> Inside convert_kv(): key="title", val="Coin, 10 Centavos", type(val) is: "str"
2022-04-08 21:19:07,438 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,438 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,439 : INFO -> Looping inside convert_dict(): key="culture", val="Mexican", type(val)="str"
2022-04-08 21:19:07,439 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,439 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,439 : INFO -> Inside convert_kv(): key="culture", val="Mexican", type(val) is: "str"
2022-04-08 21:19:07,439 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,439 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,439 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,439 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,439 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,439 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,439 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,439 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,439 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,439 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,439 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,439 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,440 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,440 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,440 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,440 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,440 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,440 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,440 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,440 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,440 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,440 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,440 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,440 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,440 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,440 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,440 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:07,440 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,441 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,441 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:07,441 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,441 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,441 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,441 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,441 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,441 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,441 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,441 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,441 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:07,441 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,441 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,441 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:07,441 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,441 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,441 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:07,442 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,442 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,442 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:07,442 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,442 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,442 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,442 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,442 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,442 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,442 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,442 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,442 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:07,442 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,442 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,442 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:07,442 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,442 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,443 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,443 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,443 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,443 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,443 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,443 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,443 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:07,443 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,443 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,443 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:07,443 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,443 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,443 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:07,443 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,443 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,443 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:07,443 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,443 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,444 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,444 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,444 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,444 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,444 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,444 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,444 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,444 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,444 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,444 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,444 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,444 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,444 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,444 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,444 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,444 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,444 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,445 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,445 : INFO -> Looping inside convert_dict(): key="objectDate", val="1860–70", type(val)="str"
2022-04-08 21:19:07,445 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,445 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,445 : INFO -> Inside convert_kv(): key="objectDate", val="1860–70", type(val) is: "str"
2022-04-08 21:19:07,445 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,445 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,445 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1860", type(val)="int"
2022-04-08 21:19:07,445 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,445 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,445 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1860", type(val) is: "int"
2022-04-08 21:19:07,445 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,445 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,445 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1870", type(val)="int"
2022-04-08 21:19:07,445 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,445 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,445 : INFO -> Inside convert_kv(): key="objectEndDate", val="1870", type(val) is: "int"
2022-04-08 21:19:07,446 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,446 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,446 : INFO -> Looping inside convert_dict(): key="medium", val="Nickel", type(val)="str"
2022-04-08 21:19:07,446 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,446 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,446 : INFO -> Inside convert_kv(): key="medium", val="Nickel", type(val) is: "str"
2022-04-08 21:19:07,446 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,446 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,446 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 3/4 in. (1.9 cm)", type(val)="str"
2022-04-08 21:19:07,446 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,446 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,446 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 3/4 in. (1.9 cm)", type(val) is: "str"
2022-04-08 21:19:07,446 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,446 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,446 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}]", type(val)="list"
2022-04-08 21:19:07,446 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,446 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,447 : INFO -> Inside convert_list()
2022-04-08 21:19:07,447 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}", item_name="item", type="dict"
2022-04-08 21:19:07,447 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}"
2022-04-08 21:19:07,447 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,447 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,447 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,447 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,447 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,447 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,447 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,447 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,447 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,447 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,447 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,447 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,447 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 1.905}", type(val)="dict"
2022-04-08 21:19:07,447 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,447 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,448 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 1.905}"
2022-04-08 21:19:07,448 : INFO -> Looping inside convert_dict(): key="Diameter", val="1.905", type(val)="float"
2022-04-08 21:19:07,448 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,448 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,448 : INFO -> Inside convert_kv(): key="Diameter", val="1.905", type(val) is: "float"
2022-04-08 21:19:07,448 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,448 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,448 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val)="str"
2022-04-08 21:19:07,448 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,448 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,448 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val) is: "str"
2022-04-08 21:19:07,448 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,448 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,448 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,448 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,448 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,449 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,449 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,449 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,449 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,449 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,449 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,449 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,449 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,449 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,449 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,449 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,449 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,449 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,449 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,449 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,449 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,449 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,449 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,450 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,450 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,450 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,450 : INFO -> Looping inside convert_dict(): key="country", val="Mexico", type(val)="str"
2022-04-08 21:19:07,450 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,450 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,450 : INFO -> Inside convert_kv(): key="country", val="Mexico", type(val) is: "str"
2022-04-08 21:19:07,450 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,450 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,450 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,450 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,450 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,450 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,450 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,450 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,450 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,450 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,451 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,451 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,451 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,451 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,451 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,451 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,451 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,451 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,451 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,451 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,451 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,451 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,451 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,451 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,451 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,451 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,451 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,452 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,452 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,452 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,452 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,452 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,452 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,452 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,452 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,452 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,452 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,452 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,452 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,452 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,452 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,452 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,452 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,452 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,453 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,453 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,453 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,453 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,453 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,453 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,453 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,453 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,453 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,453 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,453 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,453 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,453 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,453 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,453 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,453 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,453 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,453 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,454 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,454 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,454 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,454 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,454 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,454 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,454 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/29", type(val)="str"
2022-04-08 21:19:07,454 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,454 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,454 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/29", type(val) is: "str"
2022-04-08 21:19:07,454 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,454 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,454 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,454 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,454 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,454 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,454 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,455 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,455 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,455 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,455 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,455 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,455 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,455 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,455 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,455 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,455 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,455 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,455 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,455 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,455 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,455 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,455 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,455 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,456 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,456 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,456 : INFO -> Looping inside convert_list(): item="{'objectID': 30, 'isHighlight': False, 'accessionNumber': '16.74.37', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1885', 'objectBeginDate': 1885, 'objectEndDate': 1885, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/30', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,456 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 30, 'isHighlight': False, 'accessionNumber': '16.74.37', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1885', 'objectBeginDate': 1885, 'objectEndDate': 1885, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/30', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,456 : INFO -> Looping inside convert_dict(): key="objectID", val="30", type(val)="int"
2022-04-08 21:19:07,456 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,456 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,456 : INFO -> Inside convert_kv(): key="objectID", val="30", type(val) is: "int"
2022-04-08 21:19:07,456 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,456 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,456 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,456 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,456 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,456 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,456 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,456 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,457 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="16.74.37", type(val)="str"
2022-04-08 21:19:07,457 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,457 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,457 : INFO -> Inside convert_kv(): key="accessionNumber", val="16.74.37", type(val) is: "str"
2022-04-08 21:19:07,457 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,457 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,457 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1916", type(val)="str"
2022-04-08 21:19:07,457 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,457 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,457 : INFO -> Inside convert_kv(): key="accessionYear", val="1916", type(val) is: "str"
2022-04-08 21:19:07,457 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,457 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,457 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,457 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,457 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,458 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,458 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,458 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,458 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,458 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,458 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,458 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,458 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,458 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,458 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,458 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,458 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,458 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,458 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,458 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,458 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,458 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,458 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,459 : INFO -> Inside convert_list()
2022-04-08 21:19:07,459 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:07,459 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,459 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,459 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:07,459 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,459 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,459 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,459 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,459 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,459 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,459 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,459 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,459 : INFO -> Looping inside convert_dict(): key="objectName", val="Centavos", type(val)="str"
2022-04-08 21:19:07,459 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,459 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,459 : INFO -> Inside convert_kv(): key="objectName", val="Centavos", type(val) is: "str"
2022-04-08 21:19:07,460 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,460 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,460 : INFO -> Looping inside convert_dict(): key="title", val="Coin, 10 Centavos", type(val)="str"
2022-04-08 21:19:07,460 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,460 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,460 : INFO -> Inside convert_kv(): key="title", val="Coin, 10 Centavos", type(val) is: "str"
2022-04-08 21:19:07,460 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,460 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,460 : INFO -> Looping inside convert_dict(): key="culture", val="Mexican", type(val)="str"
2022-04-08 21:19:07,460 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,460 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,460 : INFO -> Inside convert_kv(): key="culture", val="Mexican", type(val) is: "str"
2022-04-08 21:19:07,460 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,460 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,460 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,460 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,460 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,461 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,461 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,461 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,461 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,461 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,461 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,461 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,461 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,461 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,461 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,461 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,461 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,461 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,461 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,461 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,461 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,461 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,461 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,462 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,462 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,462 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,462 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:07,462 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,462 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,462 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:07,462 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,462 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,462 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,462 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,462 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,462 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,462 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,462 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,462 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:07,462 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,462 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,463 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:07,463 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,463 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,463 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:07,463 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,463 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,463 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:07,463 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,463 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,463 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,463 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,463 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,463 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,463 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,463 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,463 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:07,464 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,464 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,464 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:07,464 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,464 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,464 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,464 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,464 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,464 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,464 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,464 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,464 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:07,464 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,464 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,464 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:07,464 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,464 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,464 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:07,465 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,465 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,465 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:07,465 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,465 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,465 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,465 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,465 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,465 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,465 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,465 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,465 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,465 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,465 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,465 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,465 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,465 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,466 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,466 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,466 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,466 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,466 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,466 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,466 : INFO -> Looping inside convert_dict(): key="objectDate", val="1885", type(val)="str"
2022-04-08 21:19:07,466 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,466 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,466 : INFO -> Inside convert_kv(): key="objectDate", val="1885", type(val) is: "str"
2022-04-08 21:19:07,466 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,466 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,466 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1885", type(val)="int"
2022-04-08 21:19:07,466 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,466 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,466 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1885", type(val) is: "int"
2022-04-08 21:19:07,466 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,466 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,467 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1885", type(val)="int"
2022-04-08 21:19:07,467 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,467 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,467 : INFO -> Inside convert_kv(): key="objectEndDate", val="1885", type(val) is: "int"
2022-04-08 21:19:07,467 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,467 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,467 : INFO -> Looping inside convert_dict(): key="medium", val="Nickel", type(val)="str"
2022-04-08 21:19:07,467 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,467 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,467 : INFO -> Inside convert_kv(): key="medium", val="Nickel", type(val) is: "str"
2022-04-08 21:19:07,467 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,467 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,467 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 3/4 in. (1.9 cm)", type(val)="str"
2022-04-08 21:19:07,467 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,467 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,467 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 3/4 in. (1.9 cm)", type(val) is: "str"
2022-04-08 21:19:07,468 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,468 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,468 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}]", type(val)="list"
2022-04-08 21:19:07,468 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,468 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,468 : INFO -> Inside convert_list()
2022-04-08 21:19:07,468 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}", item_name="item", type="dict"
2022-04-08 21:19:07,468 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}"
2022-04-08 21:19:07,468 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,468 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,468 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,468 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,468 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,468 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,468 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,468 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,468 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,468 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,469 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,469 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,469 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 1.905}", type(val)="dict"
2022-04-08 21:19:07,469 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,469 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,469 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 1.905}"
2022-04-08 21:19:07,469 : INFO -> Looping inside convert_dict(): key="Diameter", val="1.905", type(val)="float"
2022-04-08 21:19:07,469 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,469 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,469 : INFO -> Inside convert_kv(): key="Diameter", val="1.905", type(val) is: "float"
2022-04-08 21:19:07,469 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,469 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,469 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val)="str"
2022-04-08 21:19:07,469 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,469 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,469 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val) is: "str"
2022-04-08 21:19:07,469 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,469 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,470 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,470 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,470 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,470 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,470 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,470 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,470 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,470 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,470 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,470 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,470 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,470 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,470 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,470 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,470 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,470 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,471 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,471 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,471 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,471 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,471 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,471 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,471 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,471 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,471 : INFO -> Looping inside convert_dict(): key="country", val="Mexico", type(val)="str"
2022-04-08 21:19:07,471 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,471 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,471 : INFO -> Inside convert_kv(): key="country", val="Mexico", type(val) is: "str"
2022-04-08 21:19:07,471 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,471 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,471 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,471 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,471 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,471 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,472 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,472 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,472 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,472 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,472 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,472 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,472 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,472 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,472 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,472 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,472 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,472 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,472 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,472 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,472 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,472 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,472 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,473 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,473 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,473 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,473 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,473 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,473 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,473 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,473 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,473 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,473 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,473 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,473 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,473 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,473 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,473 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,473 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,473 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,473 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,474 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,474 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,474 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,474 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,474 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,474 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,474 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,474 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,474 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,474 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,474 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,474 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,474 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,474 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,474 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,475 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,475 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,475 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,475 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,475 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,475 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,475 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,475 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,475 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,475 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,475 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,475 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,475 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/30", type(val)="str"
2022-04-08 21:19:07,475 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,475 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,475 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/30", type(val) is: "str"
2022-04-08 21:19:07,475 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,476 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,476 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,476 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,476 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,476 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,476 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,476 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,476 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,476 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,476 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,476 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,476 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,476 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,476 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,476 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,476 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,476 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,477 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,477 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,477 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,477 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,477 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,477 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,477 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,477 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,477 : INFO -> Looping inside convert_list(): item="{'objectID': 31, 'isHighlight': False, 'accessionNumber': '16.74.40', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1885', 'objectBeginDate': 1885, 'objectEndDate': 1885, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/31', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,477 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 31, 'isHighlight': False, 'accessionNumber': '16.74.40', 'accessionYear': '1916', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Centavos', 'title': 'Coin, 10 Centavos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1885', 'objectBeginDate': 1885, 'objectEndDate': 1885, 'medium': 'Nickel', 'dimensions': 'Diam. 3/4 in. (1.9 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}], 'creditLine': 'Gift of Mrs. Russell Sage, 1916', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/31', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,477 : INFO -> Looping inside convert_dict(): key="objectID", val="31", type(val)="int"
2022-04-08 21:19:07,477 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,477 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,477 : INFO -> Inside convert_kv(): key="objectID", val="31", type(val) is: "int"
2022-04-08 21:19:07,477 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,477 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,477 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,478 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,478 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,478 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,478 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,478 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,478 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="16.74.40", type(val)="str"
2022-04-08 21:19:07,478 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,478 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,478 : INFO -> Inside convert_kv(): key="accessionNumber", val="16.74.40", type(val) is: "str"
2022-04-08 21:19:07,478 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,478 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,478 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1916", type(val)="str"
2022-04-08 21:19:07,478 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,478 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,478 : INFO -> Inside convert_kv(): key="accessionYear", val="1916", type(val) is: "str"
2022-04-08 21:19:07,478 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,478 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,479 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,479 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,479 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,479 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,479 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,479 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,479 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,479 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,479 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,479 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,479 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,479 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,479 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,479 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,479 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,479 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,479 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,479 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,480 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,480 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,480 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,480 : INFO -> Inside convert_list()
2022-04-08 21:19:07,480 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:07,480 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,480 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,480 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:07,480 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,480 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,480 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,480 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,480 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,480 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,480 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,480 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,480 : INFO -> Looping inside convert_dict(): key="objectName", val="Centavos", type(val)="str"
2022-04-08 21:19:07,481 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,481 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,481 : INFO -> Inside convert_kv(): key="objectName", val="Centavos", type(val) is: "str"
2022-04-08 21:19:07,481 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,481 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,481 : INFO -> Looping inside convert_dict(): key="title", val="Coin, 10 Centavos", type(val)="str"
2022-04-08 21:19:07,481 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,481 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,481 : INFO -> Inside convert_kv(): key="title", val="Coin, 10 Centavos", type(val) is: "str"
2022-04-08 21:19:07,481 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,481 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,481 : INFO -> Looping inside convert_dict(): key="culture", val="Mexican", type(val)="str"
2022-04-08 21:19:07,481 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,481 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,481 : INFO -> Inside convert_kv(): key="culture", val="Mexican", type(val) is: "str"
2022-04-08 21:19:07,481 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,481 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,482 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,482 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,482 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,482 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,482 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,482 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,482 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,482 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,482 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,482 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,482 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,482 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,482 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,482 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,482 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,482 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,482 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,482 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,483 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,483 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,483 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,483 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,483 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,483 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,483 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:07,483 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,483 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,483 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:07,483 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,483 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,483 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,483 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,483 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,483 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,483 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,484 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,484 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:07,484 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,484 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,484 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:07,484 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,484 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,484 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:07,484 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,484 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,484 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:07,484 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,484 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,484 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,484 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,484 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,484 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,484 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,485 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,485 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:07,485 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,485 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,485 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:07,485 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,485 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,485 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,485 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,485 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,485 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,485 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,485 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,485 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:07,485 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,485 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,485 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:07,486 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,486 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,486 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:07,486 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,486 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,486 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:07,486 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,486 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,486 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,486 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,486 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,486 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,486 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,486 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,486 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,486 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,486 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,487 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,487 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,487 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,487 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,487 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,487 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,487 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,487 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,487 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,487 : INFO -> Looping inside convert_dict(): key="objectDate", val="1885", type(val)="str"
2022-04-08 21:19:07,487 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,487 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,487 : INFO -> Inside convert_kv(): key="objectDate", val="1885", type(val) is: "str"
2022-04-08 21:19:07,487 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,487 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,487 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1885", type(val)="int"
2022-04-08 21:19:07,487 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,487 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,488 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1885", type(val) is: "int"
2022-04-08 21:19:07,488 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,488 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,488 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1885", type(val)="int"
2022-04-08 21:19:07,488 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,488 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,488 : INFO -> Inside convert_kv(): key="objectEndDate", val="1885", type(val) is: "int"
2022-04-08 21:19:07,488 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,488 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,488 : INFO -> Looping inside convert_dict(): key="medium", val="Nickel", type(val)="str"
2022-04-08 21:19:07,488 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,488 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,488 : INFO -> Inside convert_kv(): key="medium", val="Nickel", type(val) is: "str"
2022-04-08 21:19:07,488 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,488 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,488 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 3/4 in. (1.9 cm)", type(val)="str"
2022-04-08 21:19:07,488 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,489 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,489 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 3/4 in. (1.9 cm)", type(val) is: "str"
2022-04-08 21:19:07,489 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,489 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,489 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}]", type(val)="list"
2022-04-08 21:19:07,489 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,489 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,489 : INFO -> Inside convert_list()
2022-04-08 21:19:07,489 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}", item_name="item", type="dict"
2022-04-08 21:19:07,489 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 1.905}}"
2022-04-08 21:19:07,489 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,489 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,489 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,489 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,489 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,489 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,489 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,490 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,490 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,490 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,490 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,490 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,490 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 1.905}", type(val)="dict"
2022-04-08 21:19:07,490 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,490 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,490 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 1.905}"
2022-04-08 21:19:07,490 : INFO -> Looping inside convert_dict(): key="Diameter", val="1.905", type(val)="float"
2022-04-08 21:19:07,490 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,490 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,490 : INFO -> Inside convert_kv(): key="Diameter", val="1.905", type(val) is: "float"
2022-04-08 21:19:07,490 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,490 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,490 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val)="str"
2022-04-08 21:19:07,490 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,490 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,491 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Mrs. Russell Sage, 1916", type(val) is: "str"
2022-04-08 21:19:07,491 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,491 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,491 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,491 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,491 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,491 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,491 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,491 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,491 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,491 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,491 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,491 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,491 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,491 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,491 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,491 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,492 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,492 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,492 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,492 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,492 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,492 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,492 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,492 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,492 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,492 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,492 : INFO -> Looping inside convert_dict(): key="country", val="Mexico", type(val)="str"
2022-04-08 21:19:07,492 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,492 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,492 : INFO -> Inside convert_kv(): key="country", val="Mexico", type(val) is: "str"
2022-04-08 21:19:07,492 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,493 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,493 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,493 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,493 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,493 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,493 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,493 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,493 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,493 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,493 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,493 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,493 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,493 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,493 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,493 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,493 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,493 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,493 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,494 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,494 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,494 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,494 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,494 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,494 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,494 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,494 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,494 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,494 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,494 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,494 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,494 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,494 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,494 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,494 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,494 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,495 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,495 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,495 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,495 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,495 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,495 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,495 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,495 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,495 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,495 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,495 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,495 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,495 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,495 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,495 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,495 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,495 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,496 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,496 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,496 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,496 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,496 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,496 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,496 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,496 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,496 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,496 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,496 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,496 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,496 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,496 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,496 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,496 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/31", type(val)="str"
2022-04-08 21:19:07,496 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,496 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,497 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/31", type(val) is: "str"
2022-04-08 21:19:07,497 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,497 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,497 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,497 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,497 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,497 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,497 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,497 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,497 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,497 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,497 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,497 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,497 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,497 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,497 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,497 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,498 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,498 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,498 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,498 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,498 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,498 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,498 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,498 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,498 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,498 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,498 : INFO -> Looping inside convert_list(): item="{'objectID': 32, 'isHighlight': False, 'accessionNumber': '09.9.15', 'accessionYear': '1909', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Pesos', 'title': 'Coin, 20 Pesos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1866', 'objectBeginDate': 1866, 'objectEndDate': 1866, 'medium': 'Gold', 'dimensions': 'Diam. 2 1/8 in. (5.4 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 5.3975}}], 'creditLine': 'Gift of H. R. Ickelheimer, 1909', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/32', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,498 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 32, 'isHighlight': False, 'accessionNumber': '09.9.15', 'accessionYear': '1909', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Pesos', 'title': 'Coin, 20 Pesos', 'culture': 'Mexican', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1866', 'objectBeginDate': 1866, 'objectEndDate': 1866, 'medium': 'Gold', 'dimensions': 'Diam. 2 1/8 in. (5.4 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 5.3975}}], 'creditLine': 'Gift of H. R. Ickelheimer, 1909', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': '', 'country': 'Mexico', 'region': '', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/32', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,498 : INFO -> Looping inside convert_dict(): key="objectID", val="32", type(val)="int"
2022-04-08 21:19:07,498 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,498 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,498 : INFO -> Inside convert_kv(): key="objectID", val="32", type(val) is: "int"
2022-04-08 21:19:07,499 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,499 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,499 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,499 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,499 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,499 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,499 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,499 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,499 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="09.9.15", type(val)="str"
2022-04-08 21:19:07,499 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,499 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,499 : INFO -> Inside convert_kv(): key="accessionNumber", val="09.9.15", type(val) is: "str"
2022-04-08 21:19:07,499 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,499 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,499 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1909", type(val)="str"
2022-04-08 21:19:07,499 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,499 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,500 : INFO -> Inside convert_kv(): key="accessionYear", val="1909", type(val) is: "str"
2022-04-08 21:19:07,500 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,500 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,500 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,500 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,500 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,500 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,500 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,500 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,500 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,500 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,500 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,500 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,500 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,500 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,500 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,500 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,500 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,501 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,501 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,501 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,501 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,501 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,501 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,501 : INFO -> Inside convert_list()
2022-04-08 21:19:07,501 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:07,501 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,501 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,501 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:07,501 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,501 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,501 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,501 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,501 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,501 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,502 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,502 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,502 : INFO -> Looping inside convert_dict(): key="objectName", val="Pesos", type(val)="str"
2022-04-08 21:19:07,502 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,502 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,502 : INFO -> Inside convert_kv(): key="objectName", val="Pesos", type(val) is: "str"
2022-04-08 21:19:07,502 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,502 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,502 : INFO -> Looping inside convert_dict(): key="title", val="Coin, 20 Pesos", type(val)="str"
2022-04-08 21:19:07,502 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,502 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,502 : INFO -> Inside convert_kv(): key="title", val="Coin, 20 Pesos", type(val) is: "str"
2022-04-08 21:19:07,502 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,502 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,502 : INFO -> Looping inside convert_dict(): key="culture", val="Mexican", type(val)="str"
2022-04-08 21:19:07,502 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,502 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,503 : INFO -> Inside convert_kv(): key="culture", val="Mexican", type(val) is: "str"
2022-04-08 21:19:07,503 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,503 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,503 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,503 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,503 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,503 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,503 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,503 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,503 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,503 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,503 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,503 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,503 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,503 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,503 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,503 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,503 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,504 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,504 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,504 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,504 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,504 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,504 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,504 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,504 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,504 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,504 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:07,504 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,504 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,504 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:07,504 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,504 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,504 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,504 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,504 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,505 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,505 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,505 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,505 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:07,505 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,505 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,505 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:07,505 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,505 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,505 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:07,505 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,505 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,505 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:07,505 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,505 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,505 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,505 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,506 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,506 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,506 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,506 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,506 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:07,506 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,506 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,506 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:07,506 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,506 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,506 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,506 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,506 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,506 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,506 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,506 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,506 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:07,507 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,507 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,507 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:07,507 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,507 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,507 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:07,507 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,507 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,507 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:07,507 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,507 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,507 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,507 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,507 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,507 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,507 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,507 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,508 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,508 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,508 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,508 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,508 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,508 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,508 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,508 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,508 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,508 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,508 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,508 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,508 : INFO -> Looping inside convert_dict(): key="objectDate", val="1866", type(val)="str"
2022-04-08 21:19:07,508 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,508 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,508 : INFO -> Inside convert_kv(): key="objectDate", val="1866", type(val) is: "str"
2022-04-08 21:19:07,508 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,508 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,509 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1866", type(val)="int"
2022-04-08 21:19:07,509 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,509 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,509 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1866", type(val) is: "int"
2022-04-08 21:19:07,509 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,509 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,509 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1866", type(val)="int"
2022-04-08 21:19:07,509 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,509 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,509 : INFO -> Inside convert_kv(): key="objectEndDate", val="1866", type(val) is: "int"
2022-04-08 21:19:07,509 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,509 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,509 : INFO -> Looping inside convert_dict(): key="medium", val="Gold", type(val)="str"
2022-04-08 21:19:07,509 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,509 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,510 : INFO -> Inside convert_kv(): key="medium", val="Gold", type(val) is: "str"
2022-04-08 21:19:07,510 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,510 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,510 : INFO -> Looping inside convert_dict(): key="dimensions", val="Diam. 2 1/8 in. (5.4 cm)", type(val)="str"
2022-04-08 21:19:07,510 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,510 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,510 : INFO -> Inside convert_kv(): key="dimensions", val="Diam. 2 1/8 in. (5.4 cm)", type(val) is: "str"
2022-04-08 21:19:07,510 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,510 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,510 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 5.3975}}]", type(val)="list"
2022-04-08 21:19:07,510 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,510 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,510 : INFO -> Inside convert_list()
2022-04-08 21:19:07,510 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 5.3975}}", item_name="item", type="dict"
2022-04-08 21:19:07,510 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Object diameter', 'elementMeasurements': {'Diameter': 5.3975}}"
2022-04-08 21:19:07,510 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,510 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,510 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,511 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,511 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,511 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,511 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Object diameter", type(val)="str"
2022-04-08 21:19:07,511 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,511 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,511 : INFO -> Inside convert_kv(): key="elementDescription", val="Object diameter", type(val) is: "str"
2022-04-08 21:19:07,511 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,511 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,511 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 5.3975}", type(val)="dict"
2022-04-08 21:19:07,511 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,511 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,511 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 5.3975}"
2022-04-08 21:19:07,511 : INFO -> Looping inside convert_dict(): key="Diameter", val="5.3975", type(val)="float"
2022-04-08 21:19:07,511 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,511 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,511 : INFO -> Inside convert_kv(): key="Diameter", val="5.3975", type(val) is: "float"
2022-04-08 21:19:07,512 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,512 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,512 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of H. R. Ickelheimer, 1909", type(val)="str"
2022-04-08 21:19:07,512 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,512 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,512 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of H. R. Ickelheimer, 1909", type(val) is: "str"
2022-04-08 21:19:07,512 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,512 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,512 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,512 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,512 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,512 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,512 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,512 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,512 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,512 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,512 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,513 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,513 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,513 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,513 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,513 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,513 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,513 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,513 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,513 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,513 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,513 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,513 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,513 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,513 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,513 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,513 : INFO -> Looping inside convert_dict(): key="country", val="Mexico", type(val)="str"
2022-04-08 21:19:07,513 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,513 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,514 : INFO -> Inside convert_kv(): key="country", val="Mexico", type(val) is: "str"
2022-04-08 21:19:07,514 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,514 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,514 : INFO -> Looping inside convert_dict(): key="region", val="", type(val)="str"
2022-04-08 21:19:07,514 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,514 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,514 : INFO -> Inside convert_kv(): key="region", val="", type(val) is: "str"
2022-04-08 21:19:07,514 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,514 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,514 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,514 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,514 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,514 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,514 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,514 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,514 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,514 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,514 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,515 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,515 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,515 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,515 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,515 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,515 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,515 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,515 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,515 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,515 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,515 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,515 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,515 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,515 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,515 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,515 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,516 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,516 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,516 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,516 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,516 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,516 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,516 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,516 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,516 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,516 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,516 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,516 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,516 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,516 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,516 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,516 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,516 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,516 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,517 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,517 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,517 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,517 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,517 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,517 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,517 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,517 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,517 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,517 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,517 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,517 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,517 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,517 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,517 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,517 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,517 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,518 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/32", type(val)="str"
2022-04-08 21:19:07,518 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,518 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,518 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/32", type(val) is: "str"
2022-04-08 21:19:07,518 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,518 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,518 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,518 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,518 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,518 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,518 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,518 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,518 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,518 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,518 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,518 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,518 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,518 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,519 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,519 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,519 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,519 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,519 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,519 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,519 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,519 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,519 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,519 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,519 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,519 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,519 : INFO -> Looping inside convert_list(): item="{'objectID': 33, 'isHighlight': False, 'accessionNumber': '64.62', 'accessionYear': '1964', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 164590, 'role': 'Maker', 'name': 'James Gillinder and Sons', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500524407', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q99264077', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Bust', 'title': 'Bust of Abraham Lincoln', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'James Gillinder and Sons', 'artistDisplayBio': 'American, 1861–ca. 1930', 'artistSuffix': '', 'artistAlphaSort': 'Gillinder and Sons, James', 'artistNationality': 'American', 'artistBeginDate': '1861', 'artistEndDate': '1930', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q99264077', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500524407', 'objectDate': '1876', 'objectBeginDate': 1876, 'objectEndDate': 1876, 'medium': 'Pressed glass', 'dimensions': '2 3/4 x 3 1/2 x 2 3/4 in. (7 x 8.9 x 7 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 7, 'Height': 7, 'Width': 8.9}}], 'creditLine': 'Gift of Teunis G. B. Cortelyou, 1964', 'geographyType': 'Made in', 'city': 'Philadelphia', 'state': 'Pennsylvania', 'county': '', 'country': 'United States', 'region': 'Mid-Atlantic', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2022-02-09T04:42:08.947Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/33', 'tags': [{'term': 'Abraham Lincoln', 'AAT_URL': 'http://vocab.getty.edu/page/ulan/500344436', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q91'}, {'term': 'Portraits', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300015637', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q134307'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}", item_name="item", type="dict"
2022-04-08 21:19:07,519 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 33, 'isHighlight': False, 'accessionNumber': '64.62', 'accessionYear': '1964', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 164590, 'role': 'Maker', 'name': 'James Gillinder and Sons', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500524407', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q99264077', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Bust', 'title': 'Bust of Abraham Lincoln', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'James Gillinder and Sons', 'artistDisplayBio': 'American, 1861–ca. 1930', 'artistSuffix': '', 'artistAlphaSort': 'Gillinder and Sons, James', 'artistNationality': 'American', 'artistBeginDate': '1861', 'artistEndDate': '1930', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q99264077', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500524407', 'objectDate': '1876', 'objectBeginDate': 1876, 'objectEndDate': 1876, 'medium': 'Pressed glass', 'dimensions': '2 3/4 x 3 1/2 x 2 3/4 in. (7 x 8.9 x 7 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 7, 'Height': 7, 'Width': 8.9}}], 'creditLine': 'Gift of Teunis G. B. Cortelyou, 1964', 'geographyType': 'Made in', 'city': 'Philadelphia', 'state': 'Pennsylvania', 'county': '', 'country': 'United States', 'region': 'Mid-Atlantic', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2022-02-09T04:42:08.947Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/33', 'tags': [{'term': 'Abraham Lincoln', 'AAT_URL': 'http://vocab.getty.edu/page/ulan/500344436', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q91'}, {'term': 'Portraits', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300015637', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q134307'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}"
2022-04-08 21:19:07,519 : INFO -> Looping inside convert_dict(): key="objectID", val="33", type(val)="int"
2022-04-08 21:19:07,520 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,520 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,520 : INFO -> Inside convert_kv(): key="objectID", val="33", type(val) is: "int"
2022-04-08 21:19:07,520 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,520 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,520 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,520 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,520 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,520 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,520 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,520 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,520 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="64.62", type(val)="str"
2022-04-08 21:19:07,520 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,520 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,520 : INFO -> Inside convert_kv(): key="accessionNumber", val="64.62", type(val) is: "str"
2022-04-08 21:19:07,520 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,520 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,521 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1964", type(val)="str"
2022-04-08 21:19:07,521 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,521 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,521 : INFO -> Inside convert_kv(): key="accessionYear", val="1964", type(val) is: "str"
2022-04-08 21:19:07,521 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,521 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,521 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,521 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,521 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,521 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,521 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,521 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,521 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,521 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,521 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,521 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,521 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,521 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,522 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,522 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,522 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,522 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,522 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,522 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,522 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,522 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,522 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,522 : INFO -> Inside convert_list()
2022-04-08 21:19:07,522 : INFO -> Looping inside convert_dict(): key="constituents", val="[{'constituentID': 164590, 'role': 'Maker', 'name': 'James Gillinder and Sons', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500524407', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q99264077', 'gender': ''}]", type(val)="list"
2022-04-08 21:19:07,522 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,522 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,522 : INFO -> Inside convert_list()
2022-04-08 21:19:07,522 : INFO -> Looping inside convert_list(): item="{'constituentID': 164590, 'role': 'Maker', 'name': 'James Gillinder and Sons', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500524407', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q99264077', 'gender': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,522 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'constituentID': 164590, 'role': 'Maker', 'name': 'James Gillinder and Sons', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500524407', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q99264077', 'gender': ''}"
2022-04-08 21:19:07,522 : INFO -> Looping inside convert_dict(): key="constituentID", val="164590", type(val)="int"
2022-04-08 21:19:07,523 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,523 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,523 : INFO -> Inside convert_kv(): key="constituentID", val="164590", type(val) is: "int"
2022-04-08 21:19:07,523 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,523 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,523 : INFO -> Looping inside convert_dict(): key="role", val="Maker", type(val)="str"
2022-04-08 21:19:07,523 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,523 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,523 : INFO -> Inside convert_kv(): key="role", val="Maker", type(val) is: "str"
2022-04-08 21:19:07,523 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,523 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,523 : INFO -> Looping inside convert_dict(): key="name", val="James Gillinder and Sons", type(val)="str"
2022-04-08 21:19:07,523 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,523 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,523 : INFO -> Inside convert_kv(): key="name", val="James Gillinder and Sons", type(val) is: "str"
2022-04-08 21:19:07,523 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,523 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,524 : INFO -> Looping inside convert_dict(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500524407", type(val)="str"
2022-04-08 21:19:07,524 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,524 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,524 : INFO -> Inside convert_kv(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500524407", type(val) is: "str"
2022-04-08 21:19:07,524 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,524 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,524 : INFO -> Looping inside convert_dict(): key="constituentWikidata_URL", val="https://www.wikidata.org/wiki/Q99264077", type(val)="str"
2022-04-08 21:19:07,524 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,524 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,524 : INFO -> Inside convert_kv(): key="constituentWikidata_URL", val="https://www.wikidata.org/wiki/Q99264077", type(val) is: "str"
2022-04-08 21:19:07,524 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,524 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,524 : INFO -> Looping inside convert_dict(): key="gender", val="", type(val)="str"
2022-04-08 21:19:07,524 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,524 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,524 : INFO -> Inside convert_kv(): key="gender", val="", type(val) is: "str"
2022-04-08 21:19:07,524 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,524 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,525 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,525 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,525 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,525 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,525 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,525 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,525 : INFO -> Looping inside convert_dict(): key="objectName", val="Bust", type(val)="str"
2022-04-08 21:19:07,525 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,525 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,525 : INFO -> Inside convert_kv(): key="objectName", val="Bust", type(val) is: "str"
2022-04-08 21:19:07,525 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,525 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,525 : INFO -> Looping inside convert_dict(): key="title", val="Bust of Abraham Lincoln", type(val)="str"
2022-04-08 21:19:07,525 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,525 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,525 : INFO -> Inside convert_kv(): key="title", val="Bust of Abraham Lincoln", type(val) is: "str"
2022-04-08 21:19:07,525 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,526 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,526 : INFO -> Looping inside convert_dict(): key="culture", val="American", type(val)="str"
2022-04-08 21:19:07,526 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,526 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,526 : INFO -> Inside convert_kv(): key="culture", val="American", type(val) is: "str"
2022-04-08 21:19:07,526 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,526 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,526 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,526 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,526 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,526 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,526 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,526 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,526 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,526 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,527 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,527 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,527 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,527 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,527 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,527 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,527 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,527 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,527 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,527 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,527 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,527 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,527 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,527 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,527 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,527 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,527 : INFO -> Looping inside convert_dict(): key="artistRole", val="Maker", type(val)="str"
2022-04-08 21:19:07,528 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,528 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,528 : INFO -> Inside convert_kv(): key="artistRole", val="Maker", type(val) is: "str"
2022-04-08 21:19:07,528 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,528 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,528 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,528 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,528 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,528 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,528 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,528 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,528 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="James Gillinder and Sons", type(val)="str"
2022-04-08 21:19:07,528 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,528 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,528 : INFO -> Inside convert_kv(): key="artistDisplayName", val="James Gillinder and Sons", type(val) is: "str"
2022-04-08 21:19:07,528 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,528 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,529 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="American, 1861–ca. 1930", type(val)="str"
2022-04-08 21:19:07,529 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,529 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,529 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="American, 1861–ca. 1930", type(val) is: "str"
2022-04-08 21:19:07,529 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,529 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,529 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,529 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,529 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,529 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,529 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,529 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,529 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="Gillinder and Sons, James", type(val)="str"
2022-04-08 21:19:07,529 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,529 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,529 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="Gillinder and Sons, James", type(val) is: "str"
2022-04-08 21:19:07,529 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,529 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,530 : INFO -> Looping inside convert_dict(): key="artistNationality", val="American", type(val)="str"
2022-04-08 21:19:07,530 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,530 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,530 : INFO -> Inside convert_kv(): key="artistNationality", val="American", type(val) is: "str"
2022-04-08 21:19:07,530 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,530 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,530 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="1861", type(val)="str"
2022-04-08 21:19:07,530 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,530 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,530 : INFO -> Inside convert_kv(): key="artistBeginDate", val="1861", type(val) is: "str"
2022-04-08 21:19:07,530 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,530 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,530 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="1930", type(val)="str"
2022-04-08 21:19:07,530 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,530 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,530 : INFO -> Inside convert_kv(): key="artistEndDate", val="1930", type(val) is: "str"
2022-04-08 21:19:07,530 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,530 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,531 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,531 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,531 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,531 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,531 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,531 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,531 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="https://www.wikidata.org/wiki/Q99264077", type(val)="str"
2022-04-08 21:19:07,531 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,531 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,531 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="https://www.wikidata.org/wiki/Q99264077", type(val) is: "str"
2022-04-08 21:19:07,531 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,531 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,531 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500524407", type(val)="str"
2022-04-08 21:19:07,531 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,531 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,531 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500524407", type(val) is: "str"
2022-04-08 21:19:07,532 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,532 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,532 : INFO -> Looping inside convert_dict(): key="objectDate", val="1876", type(val)="str"
2022-04-08 21:19:07,532 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,532 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,532 : INFO -> Inside convert_kv(): key="objectDate", val="1876", type(val) is: "str"
2022-04-08 21:19:07,532 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,532 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,532 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1876", type(val)="int"
2022-04-08 21:19:07,532 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,532 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,532 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1876", type(val) is: "int"
2022-04-08 21:19:07,532 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,532 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,532 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1876", type(val)="int"
2022-04-08 21:19:07,532 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,532 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,532 : INFO -> Inside convert_kv(): key="objectEndDate", val="1876", type(val) is: "int"
2022-04-08 21:19:07,533 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,533 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,533 : INFO -> Looping inside convert_dict(): key="medium", val="Pressed glass", type(val)="str"
2022-04-08 21:19:07,533 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,533 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,533 : INFO -> Inside convert_kv(): key="medium", val="Pressed glass", type(val) is: "str"
2022-04-08 21:19:07,533 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,533 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,533 : INFO -> Looping inside convert_dict(): key="dimensions", val="2 3/4 x 3 1/2 x 2 3/4 in. (7 x 8.9 x 7 cm)", type(val)="str"
2022-04-08 21:19:07,533 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,533 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,533 : INFO -> Inside convert_kv(): key="dimensions", val="2 3/4 x 3 1/2 x 2 3/4 in. (7 x 8.9 x 7 cm)", type(val) is: "str"
2022-04-08 21:19:07,533 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,533 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,533 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 7, 'Height': 7, 'Width': 8.9}}]", type(val)="list"
2022-04-08 21:19:07,533 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,533 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,534 : INFO -> Inside convert_list()
2022-04-08 21:19:07,534 : INFO -> Looping inside convert_list(): item="{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 7, 'Height': 7, 'Width': 8.9}}", item_name="item", type="dict"
2022-04-08 21:19:07,534 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 7, 'Height': 7, 'Width': 8.9}}"
2022-04-08 21:19:07,534 : INFO -> Looping inside convert_dict(): key="elementName", val="Overall", type(val)="str"
2022-04-08 21:19:07,534 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,534 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,534 : INFO -> Inside convert_kv(): key="elementName", val="Overall", type(val) is: "str"
2022-04-08 21:19:07,534 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,534 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,534 : INFO -> Looping inside convert_dict(): key="elementDescription", val="None", type(val)="NoneType"
2022-04-08 21:19:07,534 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,534 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,534 : INFO -> Inside convert_none(): key="elementDescription"
2022-04-08 21:19:07,534 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,534 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,534 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Depth': 7, 'Height': 7, 'Width': 8.9}", type(val)="dict"
2022-04-08 21:19:07,534 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,534 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,535 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Depth': 7, 'Height': 7, 'Width': 8.9}"
2022-04-08 21:19:07,535 : INFO -> Looping inside convert_dict(): key="Depth", val="7", type(val)="int"
2022-04-08 21:19:07,535 : INFO -> Inside make_valid_xml_name(). Testing key "Depth" with attr "{}"
2022-04-08 21:19:07,535 : INFO -> Inside key_is_valid_xml(). Testing "Depth"
2022-04-08 21:19:07,535 : INFO -> Inside convert_kv(): key="Depth", val="7", type(val) is: "int"
2022-04-08 21:19:07,535 : INFO -> Inside make_valid_xml_name(). Testing key "Depth" with attr "{}"
2022-04-08 21:19:07,535 : INFO -> Inside key_is_valid_xml(). Testing "Depth"
2022-04-08 21:19:07,535 : INFO -> Looping inside convert_dict(): key="Height", val="7", type(val)="int"
2022-04-08 21:19:07,535 : INFO -> Inside make_valid_xml_name(). Testing key "Height" with attr "{}"
2022-04-08 21:19:07,535 : INFO -> Inside key_is_valid_xml(). Testing "Height"
2022-04-08 21:19:07,535 : INFO -> Inside convert_kv(): key="Height", val="7", type(val) is: "int"
2022-04-08 21:19:07,535 : INFO -> Inside make_valid_xml_name(). Testing key "Height" with attr "{}"
2022-04-08 21:19:07,535 : INFO -> Inside key_is_valid_xml(). Testing "Height"
2022-04-08 21:19:07,535 : INFO -> Looping inside convert_dict(): key="Width", val="8.9", type(val)="float"
2022-04-08 21:19:07,535 : INFO -> Inside make_valid_xml_name(). Testing key "Width" with attr "{}"
2022-04-08 21:19:07,535 : INFO -> Inside key_is_valid_xml(). Testing "Width"
2022-04-08 21:19:07,536 : INFO -> Inside convert_kv(): key="Width", val="8.9", type(val) is: "float"
2022-04-08 21:19:07,536 : INFO -> Inside make_valid_xml_name(). Testing key "Width" with attr "{}"
2022-04-08 21:19:07,536 : INFO -> Inside key_is_valid_xml(). Testing "Width"
2022-04-08 21:19:07,536 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Teunis G. B. Cortelyou, 1964", type(val)="str"
2022-04-08 21:19:07,536 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,536 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,536 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Teunis G. B. Cortelyou, 1964", type(val) is: "str"
2022-04-08 21:19:07,536 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,536 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,536 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,536 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,536 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,536 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,536 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,536 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,536 : INFO -> Looping inside convert_dict(): key="city", val="Philadelphia", type(val)="str"
2022-04-08 21:19:07,536 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,536 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,537 : INFO -> Inside convert_kv(): key="city", val="Philadelphia", type(val) is: "str"
2022-04-08 21:19:07,537 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,537 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,537 : INFO -> Looping inside convert_dict(): key="state", val="Pennsylvania", type(val)="str"
2022-04-08 21:19:07,537 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,537 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,537 : INFO -> Inside convert_kv(): key="state", val="Pennsylvania", type(val) is: "str"
2022-04-08 21:19:07,537 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,537 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,537 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,537 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,537 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,537 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,537 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,537 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,537 : INFO -> Looping inside convert_dict(): key="country", val="United States", type(val)="str"
2022-04-08 21:19:07,537 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,538 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,538 : INFO -> Inside convert_kv(): key="country", val="United States", type(val) is: "str"
2022-04-08 21:19:07,538 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,538 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,538 : INFO -> Looping inside convert_dict(): key="region", val="Mid-Atlantic", type(val)="str"
2022-04-08 21:19:07,538 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,538 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,538 : INFO -> Inside convert_kv(): key="region", val="Mid-Atlantic", type(val) is: "str"
2022-04-08 21:19:07,538 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,538 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,538 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,538 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,538 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,538 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,538 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,538 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,538 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,539 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,539 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,539 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,539 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,539 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,539 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,539 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,539 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,539 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,539 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,539 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,539 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,539 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,539 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,539 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,539 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,539 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,540 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,540 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,540 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,540 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,540 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,540 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,540 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,540 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,540 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,540 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,540 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,540 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,540 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,540 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,540 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,540 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,540 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,540 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,541 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,541 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,541 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,541 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,541 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,541 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,541 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2022-02-09T04:42:08.947Z", type(val)="str"
2022-04-08 21:19:07,541 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,541 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,541 : INFO -> Inside convert_kv(): key="metadataDate", val="2022-02-09T04:42:08.947Z", type(val) is: "str"
2022-04-08 21:19:07,541 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,541 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,541 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,541 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,541 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,541 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,541 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,542 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,542 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/33", type(val)="str"
2022-04-08 21:19:07,542 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,542 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,542 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/33", type(val) is: "str"
2022-04-08 21:19:07,542 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,542 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,542 : INFO -> Looping inside convert_dict(): key="tags", val="[{'term': 'Abraham Lincoln', 'AAT_URL': 'http://vocab.getty.edu/page/ulan/500344436', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q91'}, {'term': 'Portraits', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300015637', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q134307'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}]", type(val)="list"
2022-04-08 21:19:07,542 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,542 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,542 : INFO -> Inside convert_list()
2022-04-08 21:19:07,542 : INFO -> Looping inside convert_list(): item="{'term': 'Abraham Lincoln', 'AAT_URL': 'http://vocab.getty.edu/page/ulan/500344436', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q91'}", item_name="item", type="dict"
2022-04-08 21:19:07,542 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'term': 'Abraham Lincoln', 'AAT_URL': 'http://vocab.getty.edu/page/ulan/500344436', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q91'}"
2022-04-08 21:19:07,542 : INFO -> Looping inside convert_dict(): key="term", val="Abraham Lincoln", type(val)="str"
2022-04-08 21:19:07,542 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,542 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,542 : INFO -> Inside convert_kv(): key="term", val="Abraham Lincoln", type(val) is: "str"
2022-04-08 21:19:07,542 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,543 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,543 : INFO -> Looping inside convert_dict(): key="AAT_URL", val="http://vocab.getty.edu/page/ulan/500344436", type(val)="str"
2022-04-08 21:19:07,543 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,543 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,543 : INFO -> Inside convert_kv(): key="AAT_URL", val="http://vocab.getty.edu/page/ulan/500344436", type(val) is: "str"
2022-04-08 21:19:07,543 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,543 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,543 : INFO -> Looping inside convert_dict(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q91", type(val)="str"
2022-04-08 21:19:07,543 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,543 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,543 : INFO -> Inside convert_kv(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q91", type(val) is: "str"
2022-04-08 21:19:07,543 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,543 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,543 : INFO -> Looping inside convert_list(): item="{'term': 'Portraits', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300015637', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q134307'}", item_name="item", type="dict"
2022-04-08 21:19:07,543 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'term': 'Portraits', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300015637', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q134307'}"
2022-04-08 21:19:07,543 : INFO -> Looping inside convert_dict(): key="term", val="Portraits", type(val)="str"
2022-04-08 21:19:07,543 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,544 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,544 : INFO -> Inside convert_kv(): key="term", val="Portraits", type(val) is: "str"
2022-04-08 21:19:07,544 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,544 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,544 : INFO -> Looping inside convert_dict(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300015637", type(val)="str"
2022-04-08 21:19:07,544 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,544 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,544 : INFO -> Inside convert_kv(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300015637", type(val) is: "str"
2022-04-08 21:19:07,544 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,544 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,544 : INFO -> Looping inside convert_dict(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q134307", type(val)="str"
2022-04-08 21:19:07,544 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,544 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,544 : INFO -> Inside convert_kv(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q134307", type(val) is: "str"
2022-04-08 21:19:07,544 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,545 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,545 : INFO -> Looping inside convert_list(): item="{'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}", item_name="item", type="dict"
2022-04-08 21:19:07,545 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}"
2022-04-08 21:19:07,545 : INFO -> Looping inside convert_dict(): key="term", val="Men", type(val)="str"
2022-04-08 21:19:07,545 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,545 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,545 : INFO -> Inside convert_kv(): key="term", val="Men", type(val) is: "str"
2022-04-08 21:19:07,545 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,545 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,545 : INFO -> Looping inside convert_dict(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300025928", type(val)="str"
2022-04-08 21:19:07,545 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,545 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,545 : INFO -> Inside convert_kv(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300025928", type(val) is: "str"
2022-04-08 21:19:07,545 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,545 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,545 : INFO -> Looping inside convert_dict(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q8441", type(val)="str"
2022-04-08 21:19:07,545 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,545 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,546 : INFO -> Inside convert_kv(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q8441", type(val) is: "str"
2022-04-08 21:19:07,546 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,546 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,546 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,546 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,546 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,546 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,546 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,546 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,546 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,546 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,546 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,546 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,546 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,546 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,546 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="774", type(val)="str"
2022-04-08 21:19:07,546 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,546 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,547 : INFO -> Inside convert_kv(): key="GalleryNumber", val="774", type(val) is: "str"
2022-04-08 21:19:07,547 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,547 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,547 : INFO -> Looping inside convert_list(): item="{'objectID': 34, 'isHighlight': False, 'accessionNumber': '1970.289.6', 'accessionYear': '1970', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/204788.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/204788.jpg', 'additionalImages': [], 'constituents': [{'constituentID': 1082, 'role': 'Maker', 'name': 'Forestville Manufacturing Company', 'constituentULAN_URL': '', 'constituentWikidata_URL': '', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Clock', 'title': 'Acorn Clock', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Forestville Manufacturing Company', 'artistDisplayBio': '1835–1853', 'artistSuffix': '', 'artistAlphaSort': 'Forestville Manufacturing Company', 'artistNationality': '', 'artistBeginDate': '1835', 'artistEndDate': '1853', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1847–50', 'objectBeginDate': 1847, 'objectEndDate': 1850, 'medium': 'Mahogany, laminated', 'dimensions': '24 3/8 x 14 5/8 x 5 1/8 in. (61.9 x 37.1 x 13 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 13.0175, 'Height': 61.9, 'Width': 37.1}}], 'creditLine': 'Gift of Mrs. Paul Moore, 1970', 'geographyType': 'Made in', 'city': 'Bristol', 'state': 'Connecticut', 'county': '', 'country': 'United States', 'region': 'New England', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-06-30T04:39:57.037Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/34', 'tags': [{'term': 'Boats', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300178749', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q35872'}, {'term': 'Landscapes', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300132294', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q191163'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}", item_name="item", type="dict"
2022-04-08 21:19:07,547 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 34, 'isHighlight': False, 'accessionNumber': '1970.289.6', 'accessionYear': '1970', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/204788.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/204788.jpg', 'additionalImages': [], 'constituents': [{'constituentID': 1082, 'role': 'Maker', 'name': 'Forestville Manufacturing Company', 'constituentULAN_URL': '', 'constituentWikidata_URL': '', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Clock', 'title': 'Acorn Clock', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Forestville Manufacturing Company', 'artistDisplayBio': '1835–1853', 'artistSuffix': '', 'artistAlphaSort': 'Forestville Manufacturing Company', 'artistNationality': '', 'artistBeginDate': '1835', 'artistEndDate': '1853', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1847–50', 'objectBeginDate': 1847, 'objectEndDate': 1850, 'medium': 'Mahogany, laminated', 'dimensions': '24 3/8 x 14 5/8 x 5 1/8 in. (61.9 x 37.1 x 13 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 13.0175, 'Height': 61.9, 'Width': 37.1}}], 'creditLine': 'Gift of Mrs. Paul Moore, 1970', 'geographyType': 'Made in', 'city': 'Bristol', 'state': 'Connecticut', 'county': '', 'country': 'United States', 'region': 'New England', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-06-30T04:39:57.037Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/34', 'tags': [{'term': 'Boats', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300178749', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q35872'}, {'term': 'Landscapes', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300132294', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q191163'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}"
2022-04-08 21:19:07,547 : INFO -> Looping inside convert_dict(): key="objectID", val="34", type(val)="int"
2022-04-08 21:19:07,547 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,547 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,547 : INFO -> Inside convert_kv(): key="objectID", val="34", type(val) is: "int"
2022-04-08 21:19:07,547 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,547 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,547 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,547 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,547 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,548 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,548 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,548 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,548 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="1970.289.6", type(val)="str"
2022-04-08 21:19:07,548 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,548 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,548 : INFO -> Inside convert_kv(): key="accessionNumber", val="1970.289.6", type(val) is: "str"
2022-04-08 21:19:07,548 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,548 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,548 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1970", type(val)="str"
2022-04-08 21:19:07,548 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,548 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,548 : INFO -> Inside convert_kv(): key="accessionYear", val="1970", type(val) is: "str"
2022-04-08 21:19:07,548 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,548 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,548 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="True", type(val)="bool"
2022-04-08 21:19:07,548 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,548 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,549 : INFO -> Inside convert_kv(): key="isPublicDomain", val="True", type(val) is: "bool"
2022-04-08 21:19:07,549 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,549 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,549 : INFO -> Looping inside convert_dict(): key="primaryImage", val="https://images.metmuseum.org/CRDImages/ad/original/204788.jpg", type(val)="str"
2022-04-08 21:19:07,549 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,549 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,549 : INFO -> Inside convert_kv(): key="primaryImage", val="https://images.metmuseum.org/CRDImages/ad/original/204788.jpg", type(val) is: "str"
2022-04-08 21:19:07,549 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,549 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,549 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="https://images.metmuseum.org/CRDImages/ad/web-large/204788.jpg", type(val)="str"
2022-04-08 21:19:07,549 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,549 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,549 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="https://images.metmuseum.org/CRDImages/ad/web-large/204788.jpg", type(val) is: "str"
2022-04-08 21:19:07,549 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,549 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,549 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,549 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,550 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,550 : INFO -> Inside convert_list()
2022-04-08 21:19:07,550 : INFO -> Looping inside convert_dict(): key="constituents", val="[{'constituentID': 1082, 'role': 'Maker', 'name': 'Forestville Manufacturing Company', 'constituentULAN_URL': '', 'constituentWikidata_URL': '', 'gender': ''}]", type(val)="list"
2022-04-08 21:19:07,550 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,550 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,550 : INFO -> Inside convert_list()
2022-04-08 21:19:07,550 : INFO -> Looping inside convert_list(): item="{'constituentID': 1082, 'role': 'Maker', 'name': 'Forestville Manufacturing Company', 'constituentULAN_URL': '', 'constituentWikidata_URL': '', 'gender': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,550 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'constituentID': 1082, 'role': 'Maker', 'name': 'Forestville Manufacturing Company', 'constituentULAN_URL': '', 'constituentWikidata_URL': '', 'gender': ''}"
2022-04-08 21:19:07,550 : INFO -> Looping inside convert_dict(): key="constituentID", val="1082", type(val)="int"
2022-04-08 21:19:07,550 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,550 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,550 : INFO -> Inside convert_kv(): key="constituentID", val="1082", type(val) is: "int"
2022-04-08 21:19:07,550 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,550 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,550 : INFO -> Looping inside convert_dict(): key="role", val="Maker", type(val)="str"
2022-04-08 21:19:07,550 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,551 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,551 : INFO -> Inside convert_kv(): key="role", val="Maker", type(val) is: "str"
2022-04-08 21:19:07,551 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,551 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,551 : INFO -> Looping inside convert_dict(): key="name", val="Forestville Manufacturing Company", type(val)="str"
2022-04-08 21:19:07,551 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,551 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,551 : INFO -> Inside convert_kv(): key="name", val="Forestville Manufacturing Company", type(val) is: "str"
2022-04-08 21:19:07,551 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,551 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,552 : INFO -> Looping inside convert_dict(): key="constituentULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,552 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,552 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,552 : INFO -> Inside convert_kv(): key="constituentULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,552 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,552 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,552 : INFO -> Looping inside convert_dict(): key="constituentWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,552 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,552 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,552 : INFO -> Inside convert_kv(): key="constituentWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,552 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,552 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,552 : INFO -> Looping inside convert_dict(): key="gender", val="", type(val)="str"
2022-04-08 21:19:07,552 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,552 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,553 : INFO -> Inside convert_kv(): key="gender", val="", type(val) is: "str"
2022-04-08 21:19:07,553 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,553 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,553 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,553 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,553 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,553 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,553 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,553 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,553 : INFO -> Looping inside convert_dict(): key="objectName", val="Clock", type(val)="str"
2022-04-08 21:19:07,553 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,553 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,553 : INFO -> Inside convert_kv(): key="objectName", val="Clock", type(val) is: "str"
2022-04-08 21:19:07,553 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,553 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,553 : INFO -> Looping inside convert_dict(): key="title", val="Acorn Clock", type(val)="str"
2022-04-08 21:19:07,553 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,554 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,554 : INFO -> Inside convert_kv(): key="title", val="Acorn Clock", type(val) is: "str"
2022-04-08 21:19:07,554 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,554 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,554 : INFO -> Looping inside convert_dict(): key="culture", val="American", type(val)="str"
2022-04-08 21:19:07,554 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,554 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,554 : INFO -> Inside convert_kv(): key="culture", val="American", type(val) is: "str"
2022-04-08 21:19:07,554 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,554 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,554 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,554 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,554 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,554 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,554 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,554 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,554 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,555 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,555 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,555 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,555 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,555 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,555 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,555 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,555 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,555 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,555 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,555 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,555 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,555 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,555 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,555 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,555 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,555 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,556 : INFO -> Looping inside convert_dict(): key="artistRole", val="Maker", type(val)="str"
2022-04-08 21:19:07,556 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,556 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,556 : INFO -> Inside convert_kv(): key="artistRole", val="Maker", type(val) is: "str"
2022-04-08 21:19:07,556 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,556 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,556 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,556 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,556 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,556 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,556 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,556 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,556 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="Forestville Manufacturing Company", type(val)="str"
2022-04-08 21:19:07,556 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,556 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,556 : INFO -> Inside convert_kv(): key="artistDisplayName", val="Forestville Manufacturing Company", type(val) is: "str"
2022-04-08 21:19:07,557 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,557 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,557 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="1835–1853", type(val)="str"
2022-04-08 21:19:07,557 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,557 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,557 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="1835–1853", type(val) is: "str"
2022-04-08 21:19:07,557 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,557 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,557 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,557 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,557 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,557 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,557 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,557 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,557 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="Forestville Manufacturing Company", type(val)="str"
2022-04-08 21:19:07,557 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,557 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,558 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="Forestville Manufacturing Company", type(val) is: "str"
2022-04-08 21:19:07,558 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,558 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,558 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,558 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,558 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,558 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,558 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,558 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,558 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="1835", type(val)="str"
2022-04-08 21:19:07,558 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,558 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,558 : INFO -> Inside convert_kv(): key="artistBeginDate", val="1835", type(val) is: "str"
2022-04-08 21:19:07,558 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,558 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,558 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="1853", type(val)="str"
2022-04-08 21:19:07,558 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,558 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,559 : INFO -> Inside convert_kv(): key="artistEndDate", val="1853", type(val) is: "str"
2022-04-08 21:19:07,559 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,559 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,559 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,559 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,559 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,559 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,559 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,559 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,559 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,559 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,559 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,559 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,559 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,559 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,559 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,559 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,559 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,560 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,560 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,560 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,560 : INFO -> Looping inside convert_dict(): key="objectDate", val="1847–50", type(val)="str"
2022-04-08 21:19:07,560 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,560 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,560 : INFO -> Inside convert_kv(): key="objectDate", val="1847–50", type(val) is: "str"
2022-04-08 21:19:07,560 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,560 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,560 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1847", type(val)="int"
2022-04-08 21:19:07,560 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,560 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,560 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1847", type(val) is: "int"
2022-04-08 21:19:07,560 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,560 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,560 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1850", type(val)="int"
2022-04-08 21:19:07,560 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,561 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,561 : INFO -> Inside convert_kv(): key="objectEndDate", val="1850", type(val) is: "int"
2022-04-08 21:19:07,561 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,561 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,561 : INFO -> Looping inside convert_dict(): key="medium", val="Mahogany, laminated", type(val)="str"
2022-04-08 21:19:07,561 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,561 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,561 : INFO -> Inside convert_kv(): key="medium", val="Mahogany, laminated", type(val) is: "str"
2022-04-08 21:19:07,561 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,561 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,561 : INFO -> Looping inside convert_dict(): key="dimensions", val="24 3/8 x 14 5/8 x 5 1/8 in. (61.9 x 37.1 x 13 cm)", type(val)="str"
2022-04-08 21:19:07,561 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,561 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,561 : INFO -> Inside convert_kv(): key="dimensions", val="24 3/8 x 14 5/8 x 5 1/8 in. (61.9 x 37.1 x 13 cm)", type(val) is: "str"
2022-04-08 21:19:07,561 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,561 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,562 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 13.0175, 'Height': 61.9, 'Width': 37.1}}]", type(val)="list"
2022-04-08 21:19:07,562 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,562 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,562 : INFO -> Inside convert_list()
2022-04-08 21:19:07,562 : INFO -> Looping inside convert_list(): item="{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 13.0175, 'Height': 61.9, 'Width': 37.1}}", item_name="item", type="dict"
2022-04-08 21:19:07,562 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 13.0175, 'Height': 61.9, 'Width': 37.1}}"
2022-04-08 21:19:07,562 : INFO -> Looping inside convert_dict(): key="elementName", val="Overall", type(val)="str"
2022-04-08 21:19:07,562 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,562 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,562 : INFO -> Inside convert_kv(): key="elementName", val="Overall", type(val) is: "str"
2022-04-08 21:19:07,562 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,562 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,562 : INFO -> Looping inside convert_dict(): key="elementDescription", val="None", type(val)="NoneType"
2022-04-08 21:19:07,562 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,562 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,563 : INFO -> Inside convert_none(): key="elementDescription"
2022-04-08 21:19:07,563 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,563 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,563 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Depth': 13.0175, 'Height': 61.9, 'Width': 37.1}", type(val)="dict"
2022-04-08 21:19:07,563 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,563 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,563 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Depth': 13.0175, 'Height': 61.9, 'Width': 37.1}"
2022-04-08 21:19:07,563 : INFO -> Looping inside convert_dict(): key="Depth", val="13.0175", type(val)="float"
2022-04-08 21:19:07,563 : INFO -> Inside make_valid_xml_name(). Testing key "Depth" with attr "{}"
2022-04-08 21:19:07,563 : INFO -> Inside key_is_valid_xml(). Testing "Depth"
2022-04-08 21:19:07,563 : INFO -> Inside convert_kv(): key="Depth", val="13.0175", type(val) is: "float"
2022-04-08 21:19:07,563 : INFO -> Inside make_valid_xml_name(). Testing key "Depth" with attr "{}"
2022-04-08 21:19:07,563 : INFO -> Inside key_is_valid_xml(). Testing "Depth"
2022-04-08 21:19:07,563 : INFO -> Looping inside convert_dict(): key="Height", val="61.9", type(val)="float"
2022-04-08 21:19:07,563 : INFO -> Inside make_valid_xml_name(). Testing key "Height" with attr "{}"
2022-04-08 21:19:07,563 : INFO -> Inside key_is_valid_xml(). Testing "Height"
2022-04-08 21:19:07,563 : INFO -> Inside convert_kv(): key="Height", val="61.9", type(val) is: "float"
2022-04-08 21:19:07,564 : INFO -> Inside make_valid_xml_name(). Testing key "Height" with attr "{}"
2022-04-08 21:19:07,564 : INFO -> Inside key_is_valid_xml(). Testing "Height"
2022-04-08 21:19:07,564 : INFO -> Looping inside convert_dict(): key="Width", val="37.1", type(val)="float"
2022-04-08 21:19:07,564 : INFO -> Inside make_valid_xml_name(). Testing key "Width" with attr "{}"
2022-04-08 21:19:07,564 : INFO -> Inside key_is_valid_xml(). Testing "Width"
2022-04-08 21:19:07,564 : INFO -> Inside convert_kv(): key="Width", val="37.1", type(val) is: "float"
2022-04-08 21:19:07,564 : INFO -> Inside make_valid_xml_name(). Testing key "Width" with attr "{}"
2022-04-08 21:19:07,564 : INFO -> Inside key_is_valid_xml(). Testing "Width"
2022-04-08 21:19:07,564 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Mrs. Paul Moore, 1970", type(val)="str"
2022-04-08 21:19:07,564 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,564 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,564 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Mrs. Paul Moore, 1970", type(val) is: "str"
2022-04-08 21:19:07,564 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,564 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,564 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,564 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,564 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,565 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,565 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,565 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,565 : INFO -> Looping inside convert_dict(): key="city", val="Bristol", type(val)="str"
2022-04-08 21:19:07,565 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,565 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,565 : INFO -> Inside convert_kv(): key="city", val="Bristol", type(val) is: "str"
2022-04-08 21:19:07,565 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,565 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,565 : INFO -> Looping inside convert_dict(): key="state", val="Connecticut", type(val)="str"
2022-04-08 21:19:07,565 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,565 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,565 : INFO -> Inside convert_kv(): key="state", val="Connecticut", type(val) is: "str"
2022-04-08 21:19:07,565 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,565 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,565 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,565 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,565 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,566 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,566 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,566 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,566 : INFO -> Looping inside convert_dict(): key="country", val="United States", type(val)="str"
2022-04-08 21:19:07,566 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,566 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,566 : INFO -> Inside convert_kv(): key="country", val="United States", type(val) is: "str"
2022-04-08 21:19:07,566 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,566 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,566 : INFO -> Looping inside convert_dict(): key="region", val="New England", type(val)="str"
2022-04-08 21:19:07,566 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,566 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,566 : INFO -> Inside convert_kv(): key="region", val="New England", type(val) is: "str"
2022-04-08 21:19:07,566 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,566 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,566 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,566 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,567 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,567 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,567 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,567 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,567 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,567 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,567 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,567 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,567 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,567 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,567 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,567 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,567 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,567 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,567 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,568 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,568 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,568 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,568 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,568 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,568 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,568 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,568 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,568 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,568 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,568 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,568 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,568 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,568 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,568 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,568 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,568 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,569 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,569 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,569 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,569 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,569 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,569 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,569 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,569 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,569 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,569 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,569 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,569 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,569 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,569 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,569 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-06-30T04:39:57.037Z", type(val)="str"
2022-04-08 21:19:07,569 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,569 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,570 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-06-30T04:39:57.037Z", type(val) is: "str"
2022-04-08 21:19:07,570 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,570 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,570 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,570 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,570 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,570 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,570 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,570 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,570 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/34", type(val)="str"
2022-04-08 21:19:07,570 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,570 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,570 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/34", type(val) is: "str"
2022-04-08 21:19:07,570 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,570 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,570 : INFO -> Looping inside convert_dict(): key="tags", val="[{'term': 'Boats', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300178749', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q35872'}, {'term': 'Landscapes', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300132294', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q191163'}]", type(val)="list"
2022-04-08 21:19:07,570 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,570 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,571 : INFO -> Inside convert_list()
2022-04-08 21:19:07,571 : INFO -> Looping inside convert_list(): item="{'term': 'Boats', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300178749', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q35872'}", item_name="item", type="dict"
2022-04-08 21:19:07,571 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'term': 'Boats', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300178749', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q35872'}"
2022-04-08 21:19:07,571 : INFO -> Looping inside convert_dict(): key="term", val="Boats", type(val)="str"
2022-04-08 21:19:07,571 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,571 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,571 : INFO -> Inside convert_kv(): key="term", val="Boats", type(val) is: "str"
2022-04-08 21:19:07,571 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,571 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,571 : INFO -> Looping inside convert_dict(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300178749", type(val)="str"
2022-04-08 21:19:07,571 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,571 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,571 : INFO -> Inside convert_kv(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300178749", type(val) is: "str"
2022-04-08 21:19:07,571 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,571 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,571 : INFO -> Looping inside convert_dict(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q35872", type(val)="str"
2022-04-08 21:19:07,571 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,572 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,572 : INFO -> Inside convert_kv(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q35872", type(val) is: "str"
2022-04-08 21:19:07,572 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,572 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,572 : INFO -> Looping inside convert_list(): item="{'term': 'Landscapes', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300132294', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q191163'}", item_name="item", type="dict"
2022-04-08 21:19:07,572 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'term': 'Landscapes', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300132294', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q191163'}"
2022-04-08 21:19:07,572 : INFO -> Looping inside convert_dict(): key="term", val="Landscapes", type(val)="str"
2022-04-08 21:19:07,572 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,572 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,572 : INFO -> Inside convert_kv(): key="term", val="Landscapes", type(val) is: "str"
2022-04-08 21:19:07,572 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,572 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,572 : INFO -> Looping inside convert_dict(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300132294", type(val)="str"
2022-04-08 21:19:07,572 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,572 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,572 : INFO -> Inside convert_kv(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300132294", type(val) is: "str"
2022-04-08 21:19:07,572 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,573 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,573 : INFO -> Looping inside convert_dict(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q191163", type(val)="str"
2022-04-08 21:19:07,573 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,573 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,573 : INFO -> Inside convert_kv(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q191163", type(val) is: "str"
2022-04-08 21:19:07,573 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,573 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,573 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,573 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,573 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,573 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,573 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,573 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,573 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,573 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,573 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,573 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,574 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,574 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,574 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="774", type(val)="str"
2022-04-08 21:19:07,574 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,574 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,574 : INFO -> Inside convert_kv(): key="GalleryNumber", val="774", type(val) is: "str"
2022-04-08 21:19:07,574 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,574 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,574 : INFO -> Looping inside convert_list(): item="{'objectID': 35, 'isHighlight': True, 'accessionNumber': '04.1a–c', 'accessionYear': '1904', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1083, 'role': 'Designer', 'name': 'Designed by Paulding Farnham', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500336597', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q13476260', 'gender': ''}, {'constituentID': 162539, 'role': 'Manufacturer', 'name': 'Manufactured by Tiffany &amp; Co.', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500330306', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q1066858', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Vase', 'title': 'The Adams Vase', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Designer', 'artistPrefix': 'Designed by', 'artistDisplayName': 'Paulding Farnham', 'artistDisplayBio': '1859–1927', 'artistSuffix': '', 'artistAlphaSort': 'Farnham, Paulding', 'artistNationality': '', 'artistBeginDate': '1859', 'artistEndDate': '1927', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q13476260', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500336597', 'objectDate': '1893–95', 'objectBeginDate': 1893, 'objectEndDate': 1895, 'medium': 'Gold, amethysts, spessartites, tourmalines, fresh water pearls, quartzes, rock crystal, and enamel', 'dimensions': 'Overall: 19 7/16 x 13 x 9 1/4 in. (49.4 x 33 x 23.5 cm); 352 oz. 18 dwt. (10977 g)\r\nBody: H. 18 7/8 in. (47.9 cm)\r\nCover: 4 1/4 x 4 13/16 in. (10.8 x 12.2 cm); 19 oz. 6 dwt. (600.1 g)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 23.495, 'Height': 49.3713, 'Weight': 10.977, 'Width': 33}}, {'elementName': 'Other', 'elementDescription': 'Cover', 'elementMeasurements': {'Diameter': 12.2238, 'Height': 10.795, 'Weight': 0.6001}}, {'elementName': 'Other', 'elementDescription': 'Body', 'elementMeasurements': {'Height': 47.9426}}], 'creditLine': 'Gift of Edward D. Adams, 1904', 'geographyType': 'Made in', 'city': 'New York', 'state': 'New York', 'county': '', 'country': 'United States', 'region': 'Mid-Atlantic', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/35', 'tags': [{'term': 'Birds', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300266506', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q5113'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}, {'term': 'Animals', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300249525', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q729'}, {'term': 'Garlands', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300167386', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q756600'}], 'objectWikidata_URL': 'https://www.wikidata.org/wiki/Q83545838', 'isTimelineWork': True, 'GalleryNumber': '706'}", item_name="item", type="dict"
2022-04-08 21:19:07,574 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 35, 'isHighlight': True, 'accessionNumber': '04.1a–c', 'accessionYear': '1904', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1083, 'role': 'Designer', 'name': 'Designed by Paulding Farnham', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500336597', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q13476260', 'gender': ''}, {'constituentID': 162539, 'role': 'Manufacturer', 'name': 'Manufactured by Tiffany &amp; Co.', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500330306', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q1066858', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Vase', 'title': 'The Adams Vase', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Designer', 'artistPrefix': 'Designed by', 'artistDisplayName': 'Paulding Farnham', 'artistDisplayBio': '1859–1927', 'artistSuffix': '', 'artistAlphaSort': 'Farnham, Paulding', 'artistNationality': '', 'artistBeginDate': '1859', 'artistEndDate': '1927', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q13476260', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500336597', 'objectDate': '1893–95', 'objectBeginDate': 1893, 'objectEndDate': 1895, 'medium': 'Gold, amethysts, spessartites, tourmalines, fresh water pearls, quartzes, rock crystal, and enamel', 'dimensions': 'Overall: 19 7/16 x 13 x 9 1/4 in. (49.4 x 33 x 23.5 cm); 352 oz. 18 dwt. (10977 g)\r\nBody: H. 18 7/8 in. (47.9 cm)\r\nCover: 4 1/4 x 4 13/16 in. (10.8 x 12.2 cm); 19 oz. 6 dwt. (600.1 g)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 23.495, 'Height': 49.3713, 'Weight': 10.977, 'Width': 33}}, {'elementName': 'Other', 'elementDescription': 'Cover', 'elementMeasurements': {'Diameter': 12.2238, 'Height': 10.795, 'Weight': 0.6001}}, {'elementName': 'Other', 'elementDescription': 'Body', 'elementMeasurements': {'Height': 47.9426}}], 'creditLine': 'Gift of Edward D. Adams, 1904', 'geographyType': 'Made in', 'city': 'New York', 'state': 'New York', 'county': '', 'country': 'United States', 'region': 'Mid-Atlantic', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/35', 'tags': [{'term': 'Birds', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300266506', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q5113'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}, {'term': 'Animals', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300249525', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q729'}, {'term': 'Garlands', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300167386', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q756600'}], 'objectWikidata_URL': 'https://www.wikidata.org/wiki/Q83545838', 'isTimelineWork': True, 'GalleryNumber': '706'}"
2022-04-08 21:19:07,574 : INFO -> Looping inside convert_dict(): key="objectID", val="35", type(val)="int"
2022-04-08 21:19:07,574 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,574 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,574 : INFO -> Inside convert_kv(): key="objectID", val="35", type(val) is: "int"
2022-04-08 21:19:07,574 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,575 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,575 : INFO -> Looping inside convert_dict(): key="isHighlight", val="True", type(val)="bool"
2022-04-08 21:19:07,575 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,575 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,575 : INFO -> Inside convert_kv(): key="isHighlight", val="True", type(val) is: "bool"
2022-04-08 21:19:07,575 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,575 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,575 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="04.1a–c", type(val)="str"
2022-04-08 21:19:07,575 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,575 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,575 : INFO -> Inside convert_kv(): key="accessionNumber", val="04.1a–c", type(val) is: "str"
2022-04-08 21:19:07,575 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,575 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,575 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1904", type(val)="str"
2022-04-08 21:19:07,575 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,575 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,576 : INFO -> Inside convert_kv(): key="accessionYear", val="1904", type(val) is: "str"
2022-04-08 21:19:07,576 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,576 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,576 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,576 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,576 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,576 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,576 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,576 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,576 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,576 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,576 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,576 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,576 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,576 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,576 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,576 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,577 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,577 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,577 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,577 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,577 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,577 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,577 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,577 : INFO -> Inside convert_list()
2022-04-08 21:19:07,577 : INFO -> Looping inside convert_dict(): key="constituents", val="[{'constituentID': 1083, 'role': 'Designer', 'name': 'Designed by Paulding Farnham', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500336597', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q13476260', 'gender': ''}, {'constituentID': 162539, 'role': 'Manufacturer', 'name': 'Manufactured by Tiffany &amp; Co.', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500330306', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q1066858', 'gender': ''}]", type(val)="list"
2022-04-08 21:19:07,577 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,577 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,577 : INFO -> Inside convert_list()
2022-04-08 21:19:07,577 : INFO -> Looping inside convert_list(): item="{'constituentID': 1083, 'role': 'Designer', 'name': 'Designed by Paulding Farnham', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500336597', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q13476260', 'gender': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,577 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'constituentID': 1083, 'role': 'Designer', 'name': 'Designed by Paulding Farnham', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500336597', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q13476260', 'gender': ''}"
2022-04-08 21:19:07,577 : INFO -> Looping inside convert_dict(): key="constituentID", val="1083", type(val)="int"
2022-04-08 21:19:07,577 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,577 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,578 : INFO -> Inside convert_kv(): key="constituentID", val="1083", type(val) is: "int"
2022-04-08 21:19:07,578 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,578 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,578 : INFO -> Looping inside convert_dict(): key="role", val="Designer", type(val)="str"
2022-04-08 21:19:07,578 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,578 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,578 : INFO -> Inside convert_kv(): key="role", val="Designer", type(val) is: "str"
2022-04-08 21:19:07,578 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,578 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,578 : INFO -> Looping inside convert_dict(): key="name", val="Designed by Paulding Farnham", type(val)="str"
2022-04-08 21:19:07,578 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,578 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,578 : INFO -> Inside convert_kv(): key="name", val="Designed by Paulding Farnham", type(val) is: "str"
2022-04-08 21:19:07,578 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,578 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,578 : INFO -> Looping inside convert_dict(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500336597", type(val)="str"
2022-04-08 21:19:07,578 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,578 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,579 : INFO -> Inside convert_kv(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500336597", type(val) is: "str"
2022-04-08 21:19:07,579 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,579 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,579 : INFO -> Looping inside convert_dict(): key="constituentWikidata_URL", val="https://www.wikidata.org/wiki/Q13476260", type(val)="str"
2022-04-08 21:19:07,579 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,579 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,579 : INFO -> Inside convert_kv(): key="constituentWikidata_URL", val="https://www.wikidata.org/wiki/Q13476260", type(val) is: "str"
2022-04-08 21:19:07,579 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,579 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,579 : INFO -> Looping inside convert_dict(): key="gender", val="", type(val)="str"
2022-04-08 21:19:07,579 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,579 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,579 : INFO -> Inside convert_kv(): key="gender", val="", type(val) is: "str"
2022-04-08 21:19:07,579 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,579 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,579 : INFO -> Looping inside convert_list(): item="{'constituentID': 162539, 'role': 'Manufacturer', 'name': 'Manufactured by Tiffany &amp; Co.', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500330306', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q1066858', 'gender': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,580 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'constituentID': 162539, 'role': 'Manufacturer', 'name': 'Manufactured by Tiffany &amp; Co.', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500330306', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q1066858', 'gender': ''}"
2022-04-08 21:19:07,580 : INFO -> Looping inside convert_dict(): key="constituentID", val="162539", type(val)="int"
2022-04-08 21:19:07,580 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,580 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,580 : INFO -> Inside convert_kv(): key="constituentID", val="162539", type(val) is: "int"
2022-04-08 21:19:07,580 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,580 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,580 : INFO -> Looping inside convert_dict(): key="role", val="Manufacturer", type(val)="str"
2022-04-08 21:19:07,580 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,580 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,580 : INFO -> Inside convert_kv(): key="role", val="Manufacturer", type(val) is: "str"
2022-04-08 21:19:07,580 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,580 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,580 : INFO -> Looping inside convert_dict(): key="name", val="Manufactured by Tiffany &amp; Co.", type(val)="str"
2022-04-08 21:19:07,580 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,580 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,581 : INFO -> Inside convert_kv(): key="name", val="Manufactured by Tiffany &amp; Co.", type(val) is: "str"
2022-04-08 21:19:07,581 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,581 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,581 : INFO -> Looping inside convert_dict(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500330306", type(val)="str"
2022-04-08 21:19:07,581 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,581 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,581 : INFO -> Inside convert_kv(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500330306", type(val) is: "str"
2022-04-08 21:19:07,581 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,581 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,581 : INFO -> Looping inside convert_dict(): key="constituentWikidata_URL", val="https://www.wikidata.org/wiki/Q1066858", type(val)="str"
2022-04-08 21:19:07,581 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,581 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,581 : INFO -> Inside convert_kv(): key="constituentWikidata_URL", val="https://www.wikidata.org/wiki/Q1066858", type(val) is: "str"
2022-04-08 21:19:07,581 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,581 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,581 : INFO -> Looping inside convert_dict(): key="gender", val="", type(val)="str"
2022-04-08 21:19:07,582 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,582 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,582 : INFO -> Inside convert_kv(): key="gender", val="", type(val) is: "str"
2022-04-08 21:19:07,582 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,582 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,582 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,582 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,582 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,582 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,582 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,582 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,582 : INFO -> Looping inside convert_dict(): key="objectName", val="Vase", type(val)="str"
2022-04-08 21:19:07,582 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,582 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,582 : INFO -> Inside convert_kv(): key="objectName", val="Vase", type(val) is: "str"
2022-04-08 21:19:07,582 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,582 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,583 : INFO -> Looping inside convert_dict(): key="title", val="The Adams Vase", type(val)="str"
2022-04-08 21:19:07,583 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,583 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,583 : INFO -> Inside convert_kv(): key="title", val="The Adams Vase", type(val) is: "str"
2022-04-08 21:19:07,583 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,583 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,583 : INFO -> Looping inside convert_dict(): key="culture", val="American", type(val)="str"
2022-04-08 21:19:07,583 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,583 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,583 : INFO -> Inside convert_kv(): key="culture", val="American", type(val) is: "str"
2022-04-08 21:19:07,583 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,583 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,583 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,583 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,583 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,583 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,583 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,583 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,584 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,584 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,584 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,584 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,584 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,584 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,584 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,584 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,584 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,584 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,584 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,584 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,584 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,584 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,584 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,584 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,584 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,585 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,585 : INFO -> Looping inside convert_dict(): key="artistRole", val="Designer", type(val)="str"
2022-04-08 21:19:07,585 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,585 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,585 : INFO -> Inside convert_kv(): key="artistRole", val="Designer", type(val) is: "str"
2022-04-08 21:19:07,585 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,585 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,585 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="Designed by", type(val)="str"
2022-04-08 21:19:07,585 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,585 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,585 : INFO -> Inside convert_kv(): key="artistPrefix", val="Designed by", type(val) is: "str"
2022-04-08 21:19:07,585 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,585 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,585 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="Paulding Farnham", type(val)="str"
2022-04-08 21:19:07,585 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,585 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,585 : INFO -> Inside convert_kv(): key="artistDisplayName", val="Paulding Farnham", type(val) is: "str"
2022-04-08 21:19:07,586 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,586 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,586 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="1859–1927", type(val)="str"
2022-04-08 21:19:07,586 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,586 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,586 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="1859–1927", type(val) is: "str"
2022-04-08 21:19:07,586 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,586 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,586 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,586 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,586 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,586 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,586 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,586 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,586 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="Farnham, Paulding", type(val)="str"
2022-04-08 21:19:07,586 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,586 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,587 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="Farnham, Paulding", type(val) is: "str"
2022-04-08 21:19:07,587 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,587 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,587 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,587 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,587 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,587 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,587 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,587 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,587 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="1859", type(val)="str"
2022-04-08 21:19:07,587 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,587 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,587 : INFO -> Inside convert_kv(): key="artistBeginDate", val="1859", type(val) is: "str"
2022-04-08 21:19:07,587 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,587 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,587 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="1927", type(val)="str"
2022-04-08 21:19:07,588 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,588 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,588 : INFO -> Inside convert_kv(): key="artistEndDate", val="1927", type(val) is: "str"
2022-04-08 21:19:07,588 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,588 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,588 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,588 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,588 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,588 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,588 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,588 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,588 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="https://www.wikidata.org/wiki/Q13476260", type(val)="str"
2022-04-08 21:19:07,588 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,588 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,588 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="https://www.wikidata.org/wiki/Q13476260", type(val) is: "str"
2022-04-08 21:19:07,588 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,588 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,588 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500336597", type(val)="str"
2022-04-08 21:19:07,589 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,589 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,589 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500336597", type(val) is: "str"
2022-04-08 21:19:07,589 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,589 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,589 : INFO -> Looping inside convert_dict(): key="objectDate", val="1893–95", type(val)="str"
2022-04-08 21:19:07,589 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,589 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,589 : INFO -> Inside convert_kv(): key="objectDate", val="1893–95", type(val) is: "str"
2022-04-08 21:19:07,589 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,589 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,589 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1893", type(val)="int"
2022-04-08 21:19:07,589 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,589 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,589 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1893", type(val) is: "int"
2022-04-08 21:19:07,589 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,589 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,590 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1895", type(val)="int"
2022-04-08 21:19:07,590 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,590 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,590 : INFO -> Inside convert_kv(): key="objectEndDate", val="1895", type(val) is: "int"
2022-04-08 21:19:07,590 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,590 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,590 : INFO -> Looping inside convert_dict(): key="medium", val="Gold, amethysts, spessartites, tourmalines, fresh water pearls, quartzes, rock crystal, and enamel", type(val)="str"
2022-04-08 21:19:07,590 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,590 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,590 : INFO -> Inside convert_kv(): key="medium", val="Gold, amethysts, spessartites, tourmalines, fresh water pearls, quartzes, rock crystal, and enamel", type(val) is: "str"
2022-04-08 21:19:07,590 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,590 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,590 : INFO -> Looping inside convert_dict(): key="dimensions", val="Overall: 19 7/16 x 13 x 9 1/4 in. (49.4 x 33 x 23.5 cm); 352 oz. 18 dwt. (10977 g)
Body: H. 18 7/8 in. (47.9 cm)
Cover: 4 1/4 x 4 13/16 in. (10.8 x 12.2 cm); 19 oz. 6 dwt. (600.1 g)", type(val)="str"
2022-04-08 21:19:07,590 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,590 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,590 : INFO -> Inside convert_kv(): key="dimensions", val="Overall: 19 7/16 x 13 x 9 1/4 in. (49.4 x 33 x 23.5 cm); 352 oz. 18 dwt. (10977 g)
Body: H. 18 7/8 in. (47.9 cm)
Cover: 4 1/4 x 4 13/16 in. (10.8 x 12.2 cm); 19 oz. 6 dwt. (600.1 g)", type(val) is: "str"
2022-04-08 21:19:07,590 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,590 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,591 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 23.495, 'Height': 49.3713, 'Weight': 10.977, 'Width': 33}}, {'elementName': 'Other', 'elementDescription': 'Cover', 'elementMeasurements': {'Diameter': 12.2238, 'Height': 10.795, 'Weight': 0.6001}}, {'elementName': 'Other', 'elementDescription': 'Body', 'elementMeasurements': {'Height': 47.9426}}]", type(val)="list"
2022-04-08 21:19:07,591 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,591 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,591 : INFO -> Inside convert_list()
2022-04-08 21:19:07,591 : INFO -> Looping inside convert_list(): item="{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 23.495, 'Height': 49.3713, 'Weight': 10.977, 'Width': 33}}", item_name="item", type="dict"
2022-04-08 21:19:07,591 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 23.495, 'Height': 49.3713, 'Weight': 10.977, 'Width': 33}}"
2022-04-08 21:19:07,591 : INFO -> Looping inside convert_dict(): key="elementName", val="Overall", type(val)="str"
2022-04-08 21:19:07,591 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,591 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,591 : INFO -> Inside convert_kv(): key="elementName", val="Overall", type(val) is: "str"
2022-04-08 21:19:07,591 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,591 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,591 : INFO -> Looping inside convert_dict(): key="elementDescription", val="None", type(val)="NoneType"
2022-04-08 21:19:07,591 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,591 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,591 : INFO -> Inside convert_none(): key="elementDescription"
2022-04-08 21:19:07,592 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,592 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,592 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Depth': 23.495, 'Height': 49.3713, 'Weight': 10.977, 'Width': 33}", type(val)="dict"
2022-04-08 21:19:07,592 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,592 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,592 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Depth': 23.495, 'Height': 49.3713, 'Weight': 10.977, 'Width': 33}"
2022-04-08 21:19:07,592 : INFO -> Looping inside convert_dict(): key="Depth", val="23.495", type(val)="float"
2022-04-08 21:19:07,592 : INFO -> Inside make_valid_xml_name(). Testing key "Depth" with attr "{}"
2022-04-08 21:19:07,592 : INFO -> Inside key_is_valid_xml(). Testing "Depth"
2022-04-08 21:19:07,592 : INFO -> Inside convert_kv(): key="Depth", val="23.495", type(val) is: "float"
2022-04-08 21:19:07,592 : INFO -> Inside make_valid_xml_name(). Testing key "Depth" with attr "{}"
2022-04-08 21:19:07,592 : INFO -> Inside key_is_valid_xml(). Testing "Depth"
2022-04-08 21:19:07,592 : INFO -> Looping inside convert_dict(): key="Height", val="49.3713", type(val)="float"
2022-04-08 21:19:07,592 : INFO -> Inside make_valid_xml_name(). Testing key "Height" with attr "{}"
2022-04-08 21:19:07,592 : INFO -> Inside key_is_valid_xml(). Testing "Height"
2022-04-08 21:19:07,592 : INFO -> Inside convert_kv(): key="Height", val="49.3713", type(val) is: "float"
2022-04-08 21:19:07,592 : INFO -> Inside make_valid_xml_name(). Testing key "Height" with attr "{}"
2022-04-08 21:19:07,593 : INFO -> Inside key_is_valid_xml(). Testing "Height"
2022-04-08 21:19:07,593 : INFO -> Looping inside convert_dict(): key="Weight", val="10.977", type(val)="float"
2022-04-08 21:19:07,593 : INFO -> Inside make_valid_xml_name(). Testing key "Weight" with attr "{}"
2022-04-08 21:19:07,593 : INFO -> Inside key_is_valid_xml(). Testing "Weight"
2022-04-08 21:19:07,593 : INFO -> Inside convert_kv(): key="Weight", val="10.977", type(val) is: "float"
2022-04-08 21:19:07,593 : INFO -> Inside make_valid_xml_name(). Testing key "Weight" with attr "{}"
2022-04-08 21:19:07,593 : INFO -> Inside key_is_valid_xml(). Testing "Weight"
2022-04-08 21:19:07,593 : INFO -> Looping inside convert_dict(): key="Width", val="33", type(val)="int"
2022-04-08 21:19:07,593 : INFO -> Inside make_valid_xml_name(). Testing key "Width" with attr "{}"
2022-04-08 21:19:07,593 : INFO -> Inside key_is_valid_xml(). Testing "Width"
2022-04-08 21:19:07,593 : INFO -> Inside convert_kv(): key="Width", val="33", type(val) is: "int"
2022-04-08 21:19:07,593 : INFO -> Inside make_valid_xml_name(). Testing key "Width" with attr "{}"
2022-04-08 21:19:07,593 : INFO -> Inside key_is_valid_xml(). Testing "Width"
2022-04-08 21:19:07,593 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Cover', 'elementMeasurements': {'Diameter': 12.2238, 'Height': 10.795, 'Weight': 0.6001}}", item_name="item", type="dict"
2022-04-08 21:19:07,593 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Cover', 'elementMeasurements': {'Diameter': 12.2238, 'Height': 10.795, 'Weight': 0.6001}}"
2022-04-08 21:19:07,593 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,593 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,594 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,594 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,594 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,594 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,594 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Cover", type(val)="str"
2022-04-08 21:19:07,594 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,594 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,594 : INFO -> Inside convert_kv(): key="elementDescription", val="Cover", type(val) is: "str"
2022-04-08 21:19:07,594 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,594 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,594 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 12.2238, 'Height': 10.795, 'Weight': 0.6001}", type(val)="dict"
2022-04-08 21:19:07,594 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,594 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,594 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 12.2238, 'Height': 10.795, 'Weight': 0.6001}"
2022-04-08 21:19:07,594 : INFO -> Looping inside convert_dict(): key="Diameter", val="12.2238", type(val)="float"
2022-04-08 21:19:07,594 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,594 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,595 : INFO -> Inside convert_kv(): key="Diameter", val="12.2238", type(val) is: "float"
2022-04-08 21:19:07,595 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,595 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,595 : INFO -> Looping inside convert_dict(): key="Height", val="10.795", type(val)="float"
2022-04-08 21:19:07,595 : INFO -> Inside make_valid_xml_name(). Testing key "Height" with attr "{}"
2022-04-08 21:19:07,595 : INFO -> Inside key_is_valid_xml(). Testing "Height"
2022-04-08 21:19:07,595 : INFO -> Inside convert_kv(): key="Height", val="10.795", type(val) is: "float"
2022-04-08 21:19:07,595 : INFO -> Inside make_valid_xml_name(). Testing key "Height" with attr "{}"
2022-04-08 21:19:07,595 : INFO -> Inside key_is_valid_xml(). Testing "Height"
2022-04-08 21:19:07,595 : INFO -> Looping inside convert_dict(): key="Weight", val="0.6001", type(val)="float"
2022-04-08 21:19:07,595 : INFO -> Inside make_valid_xml_name(). Testing key "Weight" with attr "{}"
2022-04-08 21:19:07,595 : INFO -> Inside key_is_valid_xml(). Testing "Weight"
2022-04-08 21:19:07,595 : INFO -> Inside convert_kv(): key="Weight", val="0.6001", type(val) is: "float"
2022-04-08 21:19:07,595 : INFO -> Inside make_valid_xml_name(). Testing key "Weight" with attr "{}"
2022-04-08 21:19:07,595 : INFO -> Inside key_is_valid_xml(). Testing "Weight"
2022-04-08 21:19:07,595 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': 'Body', 'elementMeasurements': {'Height': 47.9426}}", item_name="item", type="dict"
2022-04-08 21:19:07,595 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': 'Body', 'elementMeasurements': {'Height': 47.9426}}"
2022-04-08 21:19:07,596 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,596 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,596 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,596 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,596 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,596 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,596 : INFO -> Looping inside convert_dict(): key="elementDescription", val="Body", type(val)="str"
2022-04-08 21:19:07,596 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,596 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,596 : INFO -> Inside convert_kv(): key="elementDescription", val="Body", type(val) is: "str"
2022-04-08 21:19:07,596 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,596 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,596 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Height': 47.9426}", type(val)="dict"
2022-04-08 21:19:07,596 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,596 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,596 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Height': 47.9426}"
2022-04-08 21:19:07,596 : INFO -> Looping inside convert_dict(): key="Height", val="47.9426", type(val)="float"
2022-04-08 21:19:07,597 : INFO -> Inside make_valid_xml_name(). Testing key "Height" with attr "{}"
2022-04-08 21:19:07,597 : INFO -> Inside key_is_valid_xml(). Testing "Height"
2022-04-08 21:19:07,597 : INFO -> Inside convert_kv(): key="Height", val="47.9426", type(val) is: "float"
2022-04-08 21:19:07,597 : INFO -> Inside make_valid_xml_name(). Testing key "Height" with attr "{}"
2022-04-08 21:19:07,597 : INFO -> Inside key_is_valid_xml(). Testing "Height"
2022-04-08 21:19:07,597 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Edward D. Adams, 1904", type(val)="str"
2022-04-08 21:19:07,597 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,597 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,597 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Edward D. Adams, 1904", type(val) is: "str"
2022-04-08 21:19:07,597 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,597 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,597 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,597 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,597 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,597 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,597 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,597 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,598 : INFO -> Looping inside convert_dict(): key="city", val="New York", type(val)="str"
2022-04-08 21:19:07,598 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,598 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,598 : INFO -> Inside convert_kv(): key="city", val="New York", type(val) is: "str"
2022-04-08 21:19:07,598 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,598 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,598 : INFO -> Looping inside convert_dict(): key="state", val="New York", type(val)="str"
2022-04-08 21:19:07,598 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,598 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,598 : INFO -> Inside convert_kv(): key="state", val="New York", type(val) is: "str"
2022-04-08 21:19:07,598 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,598 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,598 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,598 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,598 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,599 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,599 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,599 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,599 : INFO -> Looping inside convert_dict(): key="country", val="United States", type(val)="str"
2022-04-08 21:19:07,599 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,599 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,599 : INFO -> Inside convert_kv(): key="country", val="United States", type(val) is: "str"
2022-04-08 21:19:07,599 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,599 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,599 : INFO -> Looping inside convert_dict(): key="region", val="Mid-Atlantic", type(val)="str"
2022-04-08 21:19:07,599 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,599 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,599 : INFO -> Inside convert_kv(): key="region", val="Mid-Atlantic", type(val) is: "str"
2022-04-08 21:19:07,599 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,599 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,599 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,599 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,600 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,600 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,600 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,600 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,600 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,600 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,600 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,600 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,600 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,600 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,600 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,600 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,600 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,600 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,600 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,600 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,600 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,600 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,601 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,601 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,601 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,601 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,601 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,601 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,601 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,601 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,601 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,601 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,601 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,601 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,601 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,601 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,601 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,601 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,601 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,602 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,602 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,602 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,602 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,602 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,602 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,602 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,602 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,602 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,602 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,602 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,602 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,602 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,602 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,602 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,602 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,602 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,603 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,603 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,603 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,603 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,603 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,603 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,603 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/35", type(val)="str"
2022-04-08 21:19:07,603 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,603 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,603 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/35", type(val) is: "str"
2022-04-08 21:19:07,603 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,603 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,603 : INFO -> Looping inside convert_dict(): key="tags", val="[{'term': 'Birds', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300266506', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q5113'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}, {'term': 'Animals', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300249525', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q729'}, {'term': 'Garlands', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300167386', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q756600'}]", type(val)="list"
2022-04-08 21:19:07,603 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,603 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,603 : INFO -> Inside convert_list()
2022-04-08 21:19:07,603 : INFO -> Looping inside convert_list(): item="{'term': 'Birds', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300266506', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q5113'}", item_name="item", type="dict"
2022-04-08 21:19:07,604 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'term': 'Birds', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300266506', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q5113'}"
2022-04-08 21:19:07,604 : INFO -> Looping inside convert_dict(): key="term", val="Birds", type(val)="str"
2022-04-08 21:19:07,604 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,604 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,604 : INFO -> Inside convert_kv(): key="term", val="Birds", type(val) is: "str"
2022-04-08 21:19:07,604 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,604 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,604 : INFO -> Looping inside convert_dict(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300266506", type(val)="str"
2022-04-08 21:19:07,604 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,604 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,604 : INFO -> Inside convert_kv(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300266506", type(val) is: "str"
2022-04-08 21:19:07,604 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,604 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,604 : INFO -> Looping inside convert_dict(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q5113", type(val)="str"
2022-04-08 21:19:07,604 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,604 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,604 : INFO -> Inside convert_kv(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q5113", type(val) is: "str"
2022-04-08 21:19:07,604 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,605 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,605 : INFO -> Looping inside convert_list(): item="{'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}", item_name="item", type="dict"
2022-04-08 21:19:07,605 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}"
2022-04-08 21:19:07,605 : INFO -> Looping inside convert_dict(): key="term", val="Men", type(val)="str"
2022-04-08 21:19:07,605 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,605 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,605 : INFO -> Inside convert_kv(): key="term", val="Men", type(val) is: "str"
2022-04-08 21:19:07,605 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,605 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,605 : INFO -> Looping inside convert_dict(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300025928", type(val)="str"
2022-04-08 21:19:07,605 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,605 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,605 : INFO -> Inside convert_kv(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300025928", type(val) is: "str"
2022-04-08 21:19:07,605 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,605 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,605 : INFO -> Looping inside convert_dict(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q8441", type(val)="str"
2022-04-08 21:19:07,605 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,605 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,606 : INFO -> Inside convert_kv(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q8441", type(val) is: "str"
2022-04-08 21:19:07,606 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,606 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,606 : INFO -> Looping inside convert_list(): item="{'term': 'Animals', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300249525', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q729'}", item_name="item", type="dict"
2022-04-08 21:19:07,606 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'term': 'Animals', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300249525', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q729'}"
2022-04-08 21:19:07,606 : INFO -> Looping inside convert_dict(): key="term", val="Animals", type(val)="str"
2022-04-08 21:19:07,606 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,606 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,606 : INFO -> Inside convert_kv(): key="term", val="Animals", type(val) is: "str"
2022-04-08 21:19:07,606 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,606 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,606 : INFO -> Looping inside convert_dict(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300249525", type(val)="str"
2022-04-08 21:19:07,606 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,606 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,606 : INFO -> Inside convert_kv(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300249525", type(val) is: "str"
2022-04-08 21:19:07,606 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,606 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,607 : INFO -> Looping inside convert_dict(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q729", type(val)="str"
2022-04-08 21:19:07,607 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,607 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,607 : INFO -> Inside convert_kv(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q729", type(val) is: "str"
2022-04-08 21:19:07,607 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,607 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,607 : INFO -> Looping inside convert_list(): item="{'term': 'Garlands', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300167386', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q756600'}", item_name="item", type="dict"
2022-04-08 21:19:07,607 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'term': 'Garlands', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300167386', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q756600'}"
2022-04-08 21:19:07,607 : INFO -> Looping inside convert_dict(): key="term", val="Garlands", type(val)="str"
2022-04-08 21:19:07,607 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,607 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,607 : INFO -> Inside convert_kv(): key="term", val="Garlands", type(val) is: "str"
2022-04-08 21:19:07,607 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,607 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,607 : INFO -> Looping inside convert_dict(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300167386", type(val)="str"
2022-04-08 21:19:07,607 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,607 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,608 : INFO -> Inside convert_kv(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300167386", type(val) is: "str"
2022-04-08 21:19:07,608 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,608 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,608 : INFO -> Looping inside convert_dict(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q756600", type(val)="str"
2022-04-08 21:19:07,608 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,608 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,608 : INFO -> Inside convert_kv(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q756600", type(val) is: "str"
2022-04-08 21:19:07,608 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,608 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,608 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="https://www.wikidata.org/wiki/Q83545838", type(val)="str"
2022-04-08 21:19:07,608 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,608 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,608 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="https://www.wikidata.org/wiki/Q83545838", type(val) is: "str"
2022-04-08 21:19:07,608 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,608 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,608 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="True", type(val)="bool"
2022-04-08 21:19:07,608 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,609 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,609 : INFO -> Inside convert_kv(): key="isTimelineWork", val="True", type(val) is: "bool"
2022-04-08 21:19:07,609 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,609 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,609 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="706", type(val)="str"
2022-04-08 21:19:07,609 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,609 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,609 : INFO -> Inside convert_kv(): key="GalleryNumber", val="706", type(val) is: "str"
2022-04-08 21:19:07,609 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,609 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,609 : INFO -> Looping inside convert_list(): item="{'objectID': 36, 'isHighlight': False, 'accessionNumber': '1976.319', 'accessionYear': '1976', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1085, 'role': 'Maker', 'name': 'Conrad Henninger', 'constituentULAN_URL': '', 'constituentWikidata_URL': '', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Side Chair', 'title': 'Side Chair', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Conrad Henninger', 'artistDisplayBio': 'active ca. 1888–1932', 'artistSuffix': '', 'artistAlphaSort': 'Henninger, Conrad', 'artistNationality': '', 'artistBeginDate': '1885', 'artistEndDate': '1932', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': 'ca. 1887', 'objectBeginDate': 1884, 'objectEndDate': 1887, 'medium': 'Oak, tulip poplar', 'dimensions': '40 x 25 1/2 x 34 1/2 in. (101.6 x 64.8 x 87.6 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 87.6302, 'Height': 101.6, 'Width': 64.8}}], 'creditLine': 'Gift of Charlotte Pickman-Gertz, 1976', 'geographyType': 'Made in', 'city': 'Lebanon', 'state': 'Pennsylvania', 'county': '', 'country': 'United States', 'region': 'Mid-Atlantic', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/36', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}", item_name="item", type="dict"
2022-04-08 21:19:07,609 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 36, 'isHighlight': False, 'accessionNumber': '1976.319', 'accessionYear': '1976', 'isPublicDomain': False, 'primaryImage': '', 'primaryImageSmall': '', 'additionalImages': [], 'constituents': [{'constituentID': 1085, 'role': 'Maker', 'name': 'Conrad Henninger', 'constituentULAN_URL': '', 'constituentWikidata_URL': '', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Side Chair', 'title': 'Side Chair', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Conrad Henninger', 'artistDisplayBio': 'active ca. 1888–1932', 'artistSuffix': '', 'artistAlphaSort': 'Henninger, Conrad', 'artistNationality': '', 'artistBeginDate': '1885', 'artistEndDate': '1932', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': 'ca. 1887', 'objectBeginDate': 1884, 'objectEndDate': 1887, 'medium': 'Oak, tulip poplar', 'dimensions': '40 x 25 1/2 x 34 1/2 in. (101.6 x 64.8 x 87.6 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 87.6302, 'Height': 101.6, 'Width': 64.8}}], 'creditLine': 'Gift of Charlotte Pickman-Gertz, 1976', 'geographyType': 'Made in', 'city': 'Lebanon', 'state': 'Pennsylvania', 'county': '', 'country': 'United States', 'region': 'Mid-Atlantic', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/36', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}"
2022-04-08 21:19:07,609 : INFO -> Looping inside convert_dict(): key="objectID", val="36", type(val)="int"
2022-04-08 21:19:07,609 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,609 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,609 : INFO -> Inside convert_kv(): key="objectID", val="36", type(val) is: "int"
2022-04-08 21:19:07,610 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,610 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,610 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,610 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,610 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,610 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,610 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,610 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,610 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="1976.319", type(val)="str"
2022-04-08 21:19:07,610 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,610 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,610 : INFO -> Inside convert_kv(): key="accessionNumber", val="1976.319", type(val) is: "str"
2022-04-08 21:19:07,610 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,610 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,610 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1976", type(val)="str"
2022-04-08 21:19:07,610 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,610 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,611 : INFO -> Inside convert_kv(): key="accessionYear", val="1976", type(val) is: "str"
2022-04-08 21:19:07,611 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,611 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,611 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="False", type(val)="bool"
2022-04-08 21:19:07,611 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,611 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,611 : INFO -> Inside convert_kv(): key="isPublicDomain", val="False", type(val) is: "bool"
2022-04-08 21:19:07,611 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,611 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,611 : INFO -> Looping inside convert_dict(): key="primaryImage", val="", type(val)="str"
2022-04-08 21:19:07,611 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,611 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,611 : INFO -> Inside convert_kv(): key="primaryImage", val="", type(val) is: "str"
2022-04-08 21:19:07,611 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,611 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,611 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="", type(val)="str"
2022-04-08 21:19:07,611 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,612 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,612 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="", type(val) is: "str"
2022-04-08 21:19:07,612 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,612 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,612 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,612 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,612 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,612 : INFO -> Inside convert_list()
2022-04-08 21:19:07,612 : INFO -> Looping inside convert_dict(): key="constituents", val="[{'constituentID': 1085, 'role': 'Maker', 'name': 'Conrad Henninger', 'constituentULAN_URL': '', 'constituentWikidata_URL': '', 'gender': ''}]", type(val)="list"
2022-04-08 21:19:07,612 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,612 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,612 : INFO -> Inside convert_list()
2022-04-08 21:19:07,612 : INFO -> Looping inside convert_list(): item="{'constituentID': 1085, 'role': 'Maker', 'name': 'Conrad Henninger', 'constituentULAN_URL': '', 'constituentWikidata_URL': '', 'gender': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,612 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'constituentID': 1085, 'role': 'Maker', 'name': 'Conrad Henninger', 'constituentULAN_URL': '', 'constituentWikidata_URL': '', 'gender': ''}"
2022-04-08 21:19:07,612 : INFO -> Looping inside convert_dict(): key="constituentID", val="1085", type(val)="int"
2022-04-08 21:19:07,612 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,612 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,613 : INFO -> Inside convert_kv(): key="constituentID", val="1085", type(val) is: "int"
2022-04-08 21:19:07,613 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,613 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,613 : INFO -> Looping inside convert_dict(): key="role", val="Maker", type(val)="str"
2022-04-08 21:19:07,613 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,613 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,613 : INFO -> Inside convert_kv(): key="role", val="Maker", type(val) is: "str"
2022-04-08 21:19:07,613 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,613 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,613 : INFO -> Looping inside convert_dict(): key="name", val="Conrad Henninger", type(val)="str"
2022-04-08 21:19:07,613 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,613 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,613 : INFO -> Inside convert_kv(): key="name", val="Conrad Henninger", type(val) is: "str"
2022-04-08 21:19:07,613 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,613 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,613 : INFO -> Looping inside convert_dict(): key="constituentULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,613 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,613 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,614 : INFO -> Inside convert_kv(): key="constituentULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,614 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,614 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,614 : INFO -> Looping inside convert_dict(): key="constituentWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,614 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,614 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,614 : INFO -> Inside convert_kv(): key="constituentWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,614 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,614 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,614 : INFO -> Looping inside convert_dict(): key="gender", val="", type(val)="str"
2022-04-08 21:19:07,614 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,614 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,614 : INFO -> Inside convert_kv(): key="gender", val="", type(val) is: "str"
2022-04-08 21:19:07,614 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,614 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,614 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,614 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,615 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,615 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,615 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,615 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,615 : INFO -> Looping inside convert_dict(): key="objectName", val="Side Chair", type(val)="str"
2022-04-08 21:19:07,615 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,615 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,615 : INFO -> Inside convert_kv(): key="objectName", val="Side Chair", type(val) is: "str"
2022-04-08 21:19:07,615 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,615 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,615 : INFO -> Looping inside convert_dict(): key="title", val="Side Chair", type(val)="str"
2022-04-08 21:19:07,615 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,615 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,615 : INFO -> Inside convert_kv(): key="title", val="Side Chair", type(val) is: "str"
2022-04-08 21:19:07,615 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,615 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,615 : INFO -> Looping inside convert_dict(): key="culture", val="American", type(val)="str"
2022-04-08 21:19:07,616 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,616 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,616 : INFO -> Inside convert_kv(): key="culture", val="American", type(val) is: "str"
2022-04-08 21:19:07,616 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,616 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,616 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,616 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,616 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,616 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,616 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,616 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,616 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,616 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,616 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,616 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,617 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,617 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,617 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,617 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,617 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,617 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,617 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,617 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,617 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,617 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,617 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,617 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,617 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,617 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,617 : INFO -> Looping inside convert_dict(): key="artistRole", val="Maker", type(val)="str"
2022-04-08 21:19:07,617 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,617 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,618 : INFO -> Inside convert_kv(): key="artistRole", val="Maker", type(val) is: "str"
2022-04-08 21:19:07,618 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,618 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,618 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,618 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,618 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,618 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,618 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,618 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,618 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="Conrad Henninger", type(val)="str"
2022-04-08 21:19:07,618 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,618 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,618 : INFO -> Inside convert_kv(): key="artistDisplayName", val="Conrad Henninger", type(val) is: "str"
2022-04-08 21:19:07,618 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,618 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,618 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="active ca. 1888–1932", type(val)="str"
2022-04-08 21:19:07,618 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,618 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,619 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="active ca. 1888–1932", type(val) is: "str"
2022-04-08 21:19:07,619 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,619 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,619 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,619 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,619 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,619 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,619 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,619 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,619 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="Henninger, Conrad", type(val)="str"
2022-04-08 21:19:07,619 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,619 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,619 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="Henninger, Conrad", type(val) is: "str"
2022-04-08 21:19:07,619 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,619 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,619 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,620 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,620 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,620 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,620 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,620 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,620 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="1885", type(val)="str"
2022-04-08 21:19:07,620 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,620 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,620 : INFO -> Inside convert_kv(): key="artistBeginDate", val="1885", type(val) is: "str"
2022-04-08 21:19:07,620 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,620 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,620 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="1932", type(val)="str"
2022-04-08 21:19:07,620 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,620 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,620 : INFO -> Inside convert_kv(): key="artistEndDate", val="1932", type(val) is: "str"
2022-04-08 21:19:07,620 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,620 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,621 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,621 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,621 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,621 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,621 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,621 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,621 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,621 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,621 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,621 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,621 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,621 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,621 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,621 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,621 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,621 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,621 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,621 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,622 : INFO -> Looping inside convert_dict(): key="objectDate", val="ca. 1887", type(val)="str"
2022-04-08 21:19:07,622 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,622 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,622 : INFO -> Inside convert_kv(): key="objectDate", val="ca. 1887", type(val) is: "str"
2022-04-08 21:19:07,622 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,622 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,622 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1884", type(val)="int"
2022-04-08 21:19:07,622 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,622 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,622 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1884", type(val) is: "int"
2022-04-08 21:19:07,622 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,622 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,622 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1887", type(val)="int"
2022-04-08 21:19:07,622 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,622 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,622 : INFO -> Inside convert_kv(): key="objectEndDate", val="1887", type(val) is: "int"
2022-04-08 21:19:07,622 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,623 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,623 : INFO -> Looping inside convert_dict(): key="medium", val="Oak, tulip poplar", type(val)="str"
2022-04-08 21:19:07,623 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,623 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,623 : INFO -> Inside convert_kv(): key="medium", val="Oak, tulip poplar", type(val) is: "str"
2022-04-08 21:19:07,623 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,623 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,623 : INFO -> Looping inside convert_dict(): key="dimensions", val="40 x 25 1/2 x 34 1/2 in. (101.6 x 64.8 x 87.6 cm)", type(val)="str"
2022-04-08 21:19:07,623 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,623 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,623 : INFO -> Inside convert_kv(): key="dimensions", val="40 x 25 1/2 x 34 1/2 in. (101.6 x 64.8 x 87.6 cm)", type(val) is: "str"
2022-04-08 21:19:07,623 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,623 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,623 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 87.6302, 'Height': 101.6, 'Width': 64.8}}]", type(val)="list"
2022-04-08 21:19:07,623 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,623 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,623 : INFO -> Inside convert_list()
2022-04-08 21:19:07,624 : INFO -> Looping inside convert_list(): item="{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 87.6302, 'Height': 101.6, 'Width': 64.8}}", item_name="item", type="dict"
2022-04-08 21:19:07,624 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Depth': 87.6302, 'Height': 101.6, 'Width': 64.8}}"
2022-04-08 21:19:07,624 : INFO -> Looping inside convert_dict(): key="elementName", val="Overall", type(val)="str"
2022-04-08 21:19:07,624 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,624 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,624 : INFO -> Inside convert_kv(): key="elementName", val="Overall", type(val) is: "str"
2022-04-08 21:19:07,624 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,624 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,624 : INFO -> Looping inside convert_dict(): key="elementDescription", val="None", type(val)="NoneType"
2022-04-08 21:19:07,624 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,624 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,624 : INFO -> Inside convert_none(): key="elementDescription"
2022-04-08 21:19:07,624 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,624 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,624 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Depth': 87.6302, 'Height': 101.6, 'Width': 64.8}", type(val)="dict"
2022-04-08 21:19:07,624 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,624 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,625 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Depth': 87.6302, 'Height': 101.6, 'Width': 64.8}"
2022-04-08 21:19:07,625 : INFO -> Looping inside convert_dict(): key="Depth", val="87.6302", type(val)="float"
2022-04-08 21:19:07,625 : INFO -> Inside make_valid_xml_name(). Testing key "Depth" with attr "{}"
2022-04-08 21:19:07,625 : INFO -> Inside key_is_valid_xml(). Testing "Depth"
2022-04-08 21:19:07,625 : INFO -> Inside convert_kv(): key="Depth", val="87.6302", type(val) is: "float"
2022-04-08 21:19:07,625 : INFO -> Inside make_valid_xml_name(). Testing key "Depth" with attr "{}"
2022-04-08 21:19:07,625 : INFO -> Inside key_is_valid_xml(). Testing "Depth"
2022-04-08 21:19:07,625 : INFO -> Looping inside convert_dict(): key="Height", val="101.6", type(val)="float"
2022-04-08 21:19:07,625 : INFO -> Inside make_valid_xml_name(). Testing key "Height" with attr "{}"
2022-04-08 21:19:07,625 : INFO -> Inside key_is_valid_xml(). Testing "Height"
2022-04-08 21:19:07,625 : INFO -> Inside convert_kv(): key="Height", val="101.6", type(val) is: "float"
2022-04-08 21:19:07,625 : INFO -> Inside make_valid_xml_name(). Testing key "Height" with attr "{}"
2022-04-08 21:19:07,625 : INFO -> Inside key_is_valid_xml(). Testing "Height"
2022-04-08 21:19:07,625 : INFO -> Looping inside convert_dict(): key="Width", val="64.8", type(val)="float"
2022-04-08 21:19:07,625 : INFO -> Inside make_valid_xml_name(). Testing key "Width" with attr "{}"
2022-04-08 21:19:07,625 : INFO -> Inside key_is_valid_xml(). Testing "Width"
2022-04-08 21:19:07,625 : INFO -> Inside convert_kv(): key="Width", val="64.8", type(val) is: "float"
2022-04-08 21:19:07,625 : INFO -> Inside make_valid_xml_name(). Testing key "Width" with attr "{}"
2022-04-08 21:19:07,626 : INFO -> Inside key_is_valid_xml(). Testing "Width"
2022-04-08 21:19:07,626 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Charlotte Pickman-Gertz, 1976", type(val)="str"
2022-04-08 21:19:07,626 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,626 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,626 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Charlotte Pickman-Gertz, 1976", type(val) is: "str"
2022-04-08 21:19:07,626 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,626 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,626 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,626 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,626 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,626 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,626 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,626 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,626 : INFO -> Looping inside convert_dict(): key="city", val="Lebanon", type(val)="str"
2022-04-08 21:19:07,626 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,626 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,626 : INFO -> Inside convert_kv(): key="city", val="Lebanon", type(val) is: "str"
2022-04-08 21:19:07,627 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,627 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,627 : INFO -> Looping inside convert_dict(): key="state", val="Pennsylvania", type(val)="str"
2022-04-08 21:19:07,627 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,627 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,627 : INFO -> Inside convert_kv(): key="state", val="Pennsylvania", type(val) is: "str"
2022-04-08 21:19:07,627 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,627 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,627 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,627 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,627 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,627 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,627 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,627 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,627 : INFO -> Looping inside convert_dict(): key="country", val="United States", type(val)="str"
2022-04-08 21:19:07,627 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,627 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,628 : INFO -> Inside convert_kv(): key="country", val="United States", type(val) is: "str"
2022-04-08 21:19:07,628 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,628 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,628 : INFO -> Looping inside convert_dict(): key="region", val="Mid-Atlantic", type(val)="str"
2022-04-08 21:19:07,628 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,628 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,628 : INFO -> Inside convert_kv(): key="region", val="Mid-Atlantic", type(val) is: "str"
2022-04-08 21:19:07,628 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,628 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,628 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,628 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,628 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,628 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,628 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,628 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,628 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,628 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,629 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,629 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,629 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,629 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,629 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,629 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,629 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,629 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,629 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,629 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,629 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,629 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,629 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,629 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,629 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,629 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,629 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,630 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,630 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,630 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,630 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,630 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,630 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,630 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,630 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,630 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,630 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,630 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,630 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,630 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,630 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,630 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,630 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,630 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,630 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,631 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,631 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,631 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,631 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,631 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,631 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,631 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,631 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,631 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,631 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,631 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,631 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,631 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,631 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,631 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,631 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,631 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,632 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/36", type(val)="str"
2022-04-08 21:19:07,632 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,632 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,632 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/36", type(val) is: "str"
2022-04-08 21:19:07,632 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,632 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,632 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,632 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,632 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,632 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,632 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,632 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,632 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,632 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,632 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,632 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,632 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,633 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,633 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,633 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,633 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,633 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,633 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,633 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,633 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="774", type(val)="str"
2022-04-08 21:19:07,633 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,633 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,633 : INFO -> Inside convert_kv(): key="GalleryNumber", val="774", type(val) is: "str"
2022-04-08 21:19:07,633 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,633 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,633 : INFO -> Looping inside convert_list(): item="{'objectID': 37, 'isHighlight': False, 'accessionNumber': '38.165.51', 'accessionYear': '1938', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/DP247752.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/DP247752.jpg', 'additionalImages': ['https://images.metmuseum.org/CRDImages/ad/original/DP247756.jpg', 'https://images.metmuseum.org/CRDImages/ad/original/117430.jpg'], 'constituents': [{'constituentID': 164285, 'role': 'Maker', 'name': 'Pierre Stephan', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'constituentWikidata_URL': '', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Figure', 'title': 'Figure of Admiral George Rodney', 'culture': 'British (American market)', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Pierre Stephan', 'artistDisplayBio': 'French, active ca. 1770–95', 'artistSuffix': '', 'artistAlphaSort': 'Stephan, Pierre', 'artistNationality': 'French', 'artistBeginDate': '1765', 'artistEndDate': '1795', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'objectDate': 'ca. 1785', 'objectBeginDate': 1782, 'objectEndDate': 1785, 'medium': 'Earthenware, basalt', 'dimensions': 'H. 12 in. (30.5 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 30.5}}], 'creditLine': 'Harris Brisbane Dick Fund, 1938', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': 'Staffordshire', 'country': 'England', 'region': 'West Midlands', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/37', 'tags': [{'term': 'Cannons', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300036936', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q81103'}, {'term': 'Swords', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037048', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q12791'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}", item_name="item", type="dict"
2022-04-08 21:19:07,634 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 37, 'isHighlight': False, 'accessionNumber': '38.165.51', 'accessionYear': '1938', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/DP247752.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/DP247752.jpg', 'additionalImages': ['https://images.metmuseum.org/CRDImages/ad/original/DP247756.jpg', 'https://images.metmuseum.org/CRDImages/ad/original/117430.jpg'], 'constituents': [{'constituentID': 164285, 'role': 'Maker', 'name': 'Pierre Stephan', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'constituentWikidata_URL': '', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Figure', 'title': 'Figure of Admiral George Rodney', 'culture': 'British (American market)', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Pierre Stephan', 'artistDisplayBio': 'French, active ca. 1770–95', 'artistSuffix': '', 'artistAlphaSort': 'Stephan, Pierre', 'artistNationality': 'French', 'artistBeginDate': '1765', 'artistEndDate': '1795', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'objectDate': 'ca. 1785', 'objectBeginDate': 1782, 'objectEndDate': 1785, 'medium': 'Earthenware, basalt', 'dimensions': 'H. 12 in. (30.5 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 30.5}}], 'creditLine': 'Harris Brisbane Dick Fund, 1938', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': 'Staffordshire', 'country': 'England', 'region': 'West Midlands', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/37', 'tags': [{'term': 'Cannons', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300036936', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q81103'}, {'term': 'Swords', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037048', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q12791'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}"
2022-04-08 21:19:07,634 : INFO -> Looping inside convert_dict(): key="objectID", val="37", type(val)="int"
2022-04-08 21:19:07,634 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,634 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,634 : INFO -> Inside convert_kv(): key="objectID", val="37", type(val) is: "int"
2022-04-08 21:19:07,634 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,634 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,634 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,634 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,634 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,634 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,634 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,634 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,634 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="38.165.51", type(val)="str"
2022-04-08 21:19:07,634 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,634 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,635 : INFO -> Inside convert_kv(): key="accessionNumber", val="38.165.51", type(val) is: "str"
2022-04-08 21:19:07,635 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,635 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,635 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1938", type(val)="str"
2022-04-08 21:19:07,635 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,635 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,635 : INFO -> Inside convert_kv(): key="accessionYear", val="1938", type(val) is: "str"
2022-04-08 21:19:07,635 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,635 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,635 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="True", type(val)="bool"
2022-04-08 21:19:07,635 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,635 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,635 : INFO -> Inside convert_kv(): key="isPublicDomain", val="True", type(val) is: "bool"
2022-04-08 21:19:07,635 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,635 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,635 : INFO -> Looping inside convert_dict(): key="primaryImage", val="https://images.metmuseum.org/CRDImages/ad/original/DP247752.jpg", type(val)="str"
2022-04-08 21:19:07,635 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,636 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,636 : INFO -> Inside convert_kv(): key="primaryImage", val="https://images.metmuseum.org/CRDImages/ad/original/DP247752.jpg", type(val) is: "str"
2022-04-08 21:19:07,636 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,636 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,636 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="https://images.metmuseum.org/CRDImages/ad/web-large/DP247752.jpg", type(val)="str"
2022-04-08 21:19:07,636 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,636 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,636 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="https://images.metmuseum.org/CRDImages/ad/web-large/DP247752.jpg", type(val) is: "str"
2022-04-08 21:19:07,636 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,636 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,636 : INFO -> Looping inside convert_dict(): key="additionalImages", val="['https://images.metmuseum.org/CRDImages/ad/original/DP247756.jpg', 'https://images.metmuseum.org/CRDImages/ad/original/117430.jpg']", type(val)="list"
2022-04-08 21:19:07,636 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,636 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,636 : INFO -> Inside convert_list()
2022-04-08 21:19:07,636 : INFO -> Looping inside convert_list(): item="https://images.metmuseum.org/CRDImages/ad/original/DP247756.jpg", item_name="item", type="str"
2022-04-08 21:19:07,636 : INFO -> Inside convert_kv(): key="item", val="https://images.metmuseum.org/CRDImages/ad/original/DP247756.jpg", type(val) is: "str"
2022-04-08 21:19:07,636 : INFO -> Inside make_valid_xml_name(). Testing key "item" with attr "{}"
2022-04-08 21:19:07,636 : INFO -> Inside key_is_valid_xml(). Testing "item"
2022-04-08 21:19:07,637 : INFO -> Looping inside convert_list(): item="https://images.metmuseum.org/CRDImages/ad/original/117430.jpg", item_name="item", type="str"
2022-04-08 21:19:07,637 : INFO -> Inside convert_kv(): key="item", val="https://images.metmuseum.org/CRDImages/ad/original/117430.jpg", type(val) is: "str"
2022-04-08 21:19:07,637 : INFO -> Inside make_valid_xml_name(). Testing key "item" with attr "{}"
2022-04-08 21:19:07,637 : INFO -> Inside key_is_valid_xml(). Testing "item"
2022-04-08 21:19:07,637 : INFO -> Looping inside convert_dict(): key="constituents", val="[{'constituentID': 164285, 'role': 'Maker', 'name': 'Pierre Stephan', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'constituentWikidata_URL': '', 'gender': ''}]", type(val)="list"
2022-04-08 21:19:07,637 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,637 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,637 : INFO -> Inside convert_list()
2022-04-08 21:19:07,637 : INFO -> Looping inside convert_list(): item="{'constituentID': 164285, 'role': 'Maker', 'name': 'Pierre Stephan', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'constituentWikidata_URL': '', 'gender': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,637 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'constituentID': 164285, 'role': 'Maker', 'name': 'Pierre Stephan', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'constituentWikidata_URL': '', 'gender': ''}"
2022-04-08 21:19:07,637 : INFO -> Looping inside convert_dict(): key="constituentID", val="164285", type(val)="int"
2022-04-08 21:19:07,637 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,637 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,637 : INFO -> Inside convert_kv(): key="constituentID", val="164285", type(val) is: "int"
2022-04-08 21:19:07,637 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,637 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,637 : INFO -> Looping inside convert_dict(): key="role", val="Maker", type(val)="str"
2022-04-08 21:19:07,638 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,638 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,638 : INFO -> Inside convert_kv(): key="role", val="Maker", type(val) is: "str"
2022-04-08 21:19:07,638 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,638 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,638 : INFO -> Looping inside convert_dict(): key="name", val="Pierre Stephan", type(val)="str"
2022-04-08 21:19:07,638 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,638 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,638 : INFO -> Inside convert_kv(): key="name", val="Pierre Stephan", type(val) is: "str"
2022-04-08 21:19:07,638 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,638 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,638 : INFO -> Looping inside convert_dict(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500100483", type(val)="str"
2022-04-08 21:19:07,638 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,638 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,638 : INFO -> Inside convert_kv(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500100483", type(val) is: "str"
2022-04-08 21:19:07,638 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,638 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,639 : INFO -> Looping inside convert_dict(): key="constituentWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,639 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,639 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,639 : INFO -> Inside convert_kv(): key="constituentWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,639 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,639 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,639 : INFO -> Looping inside convert_dict(): key="gender", val="", type(val)="str"
2022-04-08 21:19:07,639 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,639 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,639 : INFO -> Inside convert_kv(): key="gender", val="", type(val) is: "str"
2022-04-08 21:19:07,639 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,639 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,639 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,639 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,639 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,639 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,639 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,639 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,640 : INFO -> Looping inside convert_dict(): key="objectName", val="Figure", type(val)="str"
2022-04-08 21:19:07,640 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,640 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,640 : INFO -> Inside convert_kv(): key="objectName", val="Figure", type(val) is: "str"
2022-04-08 21:19:07,640 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,640 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,640 : INFO -> Looping inside convert_dict(): key="title", val="Figure of Admiral George Rodney", type(val)="str"
2022-04-08 21:19:07,640 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,640 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,640 : INFO -> Inside convert_kv(): key="title", val="Figure of Admiral George Rodney", type(val) is: "str"
2022-04-08 21:19:07,640 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,640 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,640 : INFO -> Looping inside convert_dict(): key="culture", val="British (American market)", type(val)="str"
2022-04-08 21:19:07,640 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,640 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,640 : INFO -> Inside convert_kv(): key="culture", val="British (American market)", type(val) is: "str"
2022-04-08 21:19:07,640 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,641 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,641 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,641 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,641 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,641 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,641 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,641 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,641 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,641 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,641 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,641 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,641 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,641 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,641 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,641 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,641 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,641 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,642 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,642 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,642 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,642 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,642 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,642 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,642 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,642 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,642 : INFO -> Looping inside convert_dict(): key="artistRole", val="Maker", type(val)="str"
2022-04-08 21:19:07,642 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,642 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,642 : INFO -> Inside convert_kv(): key="artistRole", val="Maker", type(val) is: "str"
2022-04-08 21:19:07,642 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,642 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,642 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,642 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,642 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,643 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,643 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,643 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,643 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="Pierre Stephan", type(val)="str"
2022-04-08 21:19:07,643 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,643 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,643 : INFO -> Inside convert_kv(): key="artistDisplayName", val="Pierre Stephan", type(val) is: "str"
2022-04-08 21:19:07,643 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,643 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,643 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="French, active ca. 1770–95", type(val)="str"
2022-04-08 21:19:07,643 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,643 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,643 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="French, active ca. 1770–95", type(val) is: "str"
2022-04-08 21:19:07,643 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,643 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,643 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,643 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,644 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,644 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,644 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,644 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,644 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="Stephan, Pierre", type(val)="str"
2022-04-08 21:19:07,644 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,644 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,644 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="Stephan, Pierre", type(val) is: "str"
2022-04-08 21:19:07,644 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,644 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,644 : INFO -> Looping inside convert_dict(): key="artistNationality", val="French", type(val)="str"
2022-04-08 21:19:07,644 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,644 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,644 : INFO -> Inside convert_kv(): key="artistNationality", val="French", type(val) is: "str"
2022-04-08 21:19:07,644 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,644 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,644 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="1765", type(val)="str"
2022-04-08 21:19:07,645 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,645 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,645 : INFO -> Inside convert_kv(): key="artistBeginDate", val="1765", type(val) is: "str"
2022-04-08 21:19:07,645 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,645 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,645 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="1795", type(val)="str"
2022-04-08 21:19:07,645 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,645 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,645 : INFO -> Inside convert_kv(): key="artistEndDate", val="1795", type(val) is: "str"
2022-04-08 21:19:07,645 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,645 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,645 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,645 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,645 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,645 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,645 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,645 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,645 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,646 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,646 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,646 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,646 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,646 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,646 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500100483", type(val)="str"
2022-04-08 21:19:07,646 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,646 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,646 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500100483", type(val) is: "str"
2022-04-08 21:19:07,646 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,646 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,646 : INFO -> Looping inside convert_dict(): key="objectDate", val="ca. 1785", type(val)="str"
2022-04-08 21:19:07,646 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,646 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,646 : INFO -> Inside convert_kv(): key="objectDate", val="ca. 1785", type(val) is: "str"
2022-04-08 21:19:07,646 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,646 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,647 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1782", type(val)="int"
2022-04-08 21:19:07,647 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,647 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,647 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1782", type(val) is: "int"
2022-04-08 21:19:07,647 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,647 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,647 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1785", type(val)="int"
2022-04-08 21:19:07,647 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,647 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,647 : INFO -> Inside convert_kv(): key="objectEndDate", val="1785", type(val) is: "int"
2022-04-08 21:19:07,647 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,647 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,647 : INFO -> Looping inside convert_dict(): key="medium", val="Earthenware, basalt", type(val)="str"
2022-04-08 21:19:07,647 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,647 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,647 : INFO -> Inside convert_kv(): key="medium", val="Earthenware, basalt", type(val) is: "str"
2022-04-08 21:19:07,647 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,648 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,648 : INFO -> Looping inside convert_dict(): key="dimensions", val="H. 12 in. (30.5 cm)", type(val)="str"
2022-04-08 21:19:07,648 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,648 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,648 : INFO -> Inside convert_kv(): key="dimensions", val="H. 12 in. (30.5 cm)", type(val) is: "str"
2022-04-08 21:19:07,648 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,648 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,648 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 30.5}}]", type(val)="list"
2022-04-08 21:19:07,648 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,648 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,648 : INFO -> Inside convert_list()
2022-04-08 21:19:07,648 : INFO -> Looping inside convert_list(): item="{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 30.5}}", item_name="item", type="dict"
2022-04-08 21:19:07,648 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 30.5}}"
2022-04-08 21:19:07,648 : INFO -> Looping inside convert_dict(): key="elementName", val="Overall", type(val)="str"
2022-04-08 21:19:07,648 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,648 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,648 : INFO -> Inside convert_kv(): key="elementName", val="Overall", type(val) is: "str"
2022-04-08 21:19:07,648 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,649 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,649 : INFO -> Looping inside convert_dict(): key="elementDescription", val="None", type(val)="NoneType"
2022-04-08 21:19:07,649 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,649 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,649 : INFO -> Inside convert_none(): key="elementDescription"
2022-04-08 21:19:07,649 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,649 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,649 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Height': 30.5}", type(val)="dict"
2022-04-08 21:19:07,649 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,649 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,649 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Height': 30.5}"
2022-04-08 21:19:07,649 : INFO -> Looping inside convert_dict(): key="Height", val="30.5", type(val)="float"
2022-04-08 21:19:07,649 : INFO -> Inside make_valid_xml_name(). Testing key "Height" with attr "{}"
2022-04-08 21:19:07,649 : INFO -> Inside key_is_valid_xml(). Testing "Height"
2022-04-08 21:19:07,649 : INFO -> Inside convert_kv(): key="Height", val="30.5", type(val) is: "float"
2022-04-08 21:19:07,649 : INFO -> Inside make_valid_xml_name(). Testing key "Height" with attr "{}"
2022-04-08 21:19:07,649 : INFO -> Inside key_is_valid_xml(). Testing "Height"
2022-04-08 21:19:07,650 : INFO -> Looping inside convert_dict(): key="creditLine", val="Harris Brisbane Dick Fund, 1938", type(val)="str"
2022-04-08 21:19:07,650 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,650 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,650 : INFO -> Inside convert_kv(): key="creditLine", val="Harris Brisbane Dick Fund, 1938", type(val) is: "str"
2022-04-08 21:19:07,650 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,650 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,650 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,650 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,650 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,650 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,650 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,650 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,650 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,650 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,650 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,650 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,651 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,651 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,651 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,651 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,651 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,651 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,651 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,651 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,651 : INFO -> Looping inside convert_dict(): key="county", val="Staffordshire", type(val)="str"
2022-04-08 21:19:07,651 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,651 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,651 : INFO -> Inside convert_kv(): key="county", val="Staffordshire", type(val) is: "str"
2022-04-08 21:19:07,651 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,651 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,652 : INFO -> Looping inside convert_dict(): key="country", val="England", type(val)="str"
2022-04-08 21:19:07,652 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,652 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,652 : INFO -> Inside convert_kv(): key="country", val="England", type(val) is: "str"
2022-04-08 21:19:07,652 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,652 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,652 : INFO -> Looping inside convert_dict(): key="region", val="West Midlands", type(val)="str"
2022-04-08 21:19:07,652 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,652 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,652 : INFO -> Inside convert_kv(): key="region", val="West Midlands", type(val) is: "str"
2022-04-08 21:19:07,652 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,652 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,652 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,652 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,652 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,652 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,652 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,652 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,653 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,653 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,653 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,653 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,653 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,653 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,653 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,653 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,653 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,653 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,653 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,653 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,653 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,653 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,653 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,653 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,653 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,654 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,654 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,654 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,654 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,654 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,654 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,654 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,654 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,654 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,654 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,654 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,654 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,654 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,654 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,654 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,654 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,654 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,655 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,655 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,655 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,655 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,655 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,655 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,655 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,655 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,655 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,655 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,655 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,655 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,655 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,655 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,655 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,655 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,655 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,656 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,656 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,656 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,656 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/37", type(val)="str"
2022-04-08 21:19:07,656 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,656 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,656 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/37", type(val) is: "str"
2022-04-08 21:19:07,656 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,656 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,656 : INFO -> Looping inside convert_dict(): key="tags", val="[{'term': 'Cannons', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300036936', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q81103'}, {'term': 'Swords', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037048', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q12791'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}]", type(val)="list"
2022-04-08 21:19:07,656 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,656 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,656 : INFO -> Inside convert_list()
2022-04-08 21:19:07,656 : INFO -> Looping inside convert_list(): item="{'term': 'Cannons', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300036936', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q81103'}", item_name="item", type="dict"
2022-04-08 21:19:07,656 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'term': 'Cannons', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300036936', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q81103'}"
2022-04-08 21:19:07,656 : INFO -> Looping inside convert_dict(): key="term", val="Cannons", type(val)="str"
2022-04-08 21:19:07,656 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,656 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,657 : INFO -> Inside convert_kv(): key="term", val="Cannons", type(val) is: "str"
2022-04-08 21:19:07,657 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,657 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,657 : INFO -> Looping inside convert_dict(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300036936", type(val)="str"
2022-04-08 21:19:07,657 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,657 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,657 : INFO -> Inside convert_kv(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300036936", type(val) is: "str"
2022-04-08 21:19:07,657 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,657 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,657 : INFO -> Looping inside convert_dict(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q81103", type(val)="str"
2022-04-08 21:19:07,657 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,657 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,657 : INFO -> Inside convert_kv(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q81103", type(val) is: "str"
2022-04-08 21:19:07,657 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,657 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,657 : INFO -> Looping inside convert_list(): item="{'term': 'Swords', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037048', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q12791'}", item_name="item", type="dict"
2022-04-08 21:19:07,658 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'term': 'Swords', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037048', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q12791'}"
2022-04-08 21:19:07,658 : INFO -> Looping inside convert_dict(): key="term", val="Swords", type(val)="str"
2022-04-08 21:19:07,658 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,658 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,658 : INFO -> Inside convert_kv(): key="term", val="Swords", type(val) is: "str"
2022-04-08 21:19:07,658 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,658 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,658 : INFO -> Looping inside convert_dict(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300037048", type(val)="str"
2022-04-08 21:19:07,658 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,658 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,658 : INFO -> Inside convert_kv(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300037048", type(val) is: "str"
2022-04-08 21:19:07,658 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,658 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,658 : INFO -> Looping inside convert_dict(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q12791", type(val)="str"
2022-04-08 21:19:07,658 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,658 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,658 : INFO -> Inside convert_kv(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q12791", type(val) is: "str"
2022-04-08 21:19:07,658 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,659 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,659 : INFO -> Looping inside convert_list(): item="{'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}", item_name="item", type="dict"
2022-04-08 21:19:07,659 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}"
2022-04-08 21:19:07,659 : INFO -> Looping inside convert_dict(): key="term", val="Men", type(val)="str"
2022-04-08 21:19:07,659 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,659 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,659 : INFO -> Inside convert_kv(): key="term", val="Men", type(val) is: "str"
2022-04-08 21:19:07,659 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,659 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,659 : INFO -> Looping inside convert_dict(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300025928", type(val)="str"
2022-04-08 21:19:07,659 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,659 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,659 : INFO -> Inside convert_kv(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300025928", type(val) is: "str"
2022-04-08 21:19:07,659 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,659 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,659 : INFO -> Looping inside convert_dict(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q8441", type(val)="str"
2022-04-08 21:19:07,659 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,659 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,660 : INFO -> Inside convert_kv(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q8441", type(val) is: "str"
2022-04-08 21:19:07,660 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,660 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,660 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,660 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,660 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,660 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,660 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,660 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,660 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,660 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,660 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,660 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,660 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,660 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,660 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="774", type(val)="str"
2022-04-08 21:19:07,660 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,661 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,661 : INFO -> Inside convert_kv(): key="GalleryNumber", val="774", type(val) is: "str"
2022-04-08 21:19:07,661 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,661 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,661 : INFO -> Looping inside convert_list(): item="{'objectID': 38, 'isHighlight': False, 'accessionNumber': '38.165.50', 'accessionYear': '1938', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/DP247753.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/DP247753.jpg', 'additionalImages': ['https://images.metmuseum.org/CRDImages/ad/original/DP247755.jpg'], 'constituents': [{'constituentID': 164285, 'role': 'Maker', 'name': 'Pierre Stephan', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'constituentWikidata_URL': '', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Figure', 'title': 'Figure of Admiral Samuel Hood', 'culture': 'British (American market)', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Pierre Stephan', 'artistDisplayBio': 'French, active ca. 1770–95', 'artistSuffix': '', 'artistAlphaSort': 'Stephan, Pierre', 'artistNationality': 'French', 'artistBeginDate': '1765', 'artistEndDate': '1795', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'objectDate': 'ca. 1785', 'objectBeginDate': 1782, 'objectEndDate': 1785, 'medium': 'Earthenware, basalt', 'dimensions': 'H. 12 3/8 in. (31.4 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 31.4}}], 'creditLine': 'Harris Brisbane Dick Fund, 1938', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': 'Staffordshire', 'country': 'England', 'region': 'West Midlands', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/38', 'tags': [{'term': 'Cannons', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300036936', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q81103'}, {'term': 'Swords', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037048', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q12791'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}, {'term': 'Admirals', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300236014', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q132851'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}", item_name="item", type="dict"
2022-04-08 21:19:07,661 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 38, 'isHighlight': False, 'accessionNumber': '38.165.50', 'accessionYear': '1938', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/DP247753.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/DP247753.jpg', 'additionalImages': ['https://images.metmuseum.org/CRDImages/ad/original/DP247755.jpg'], 'constituents': [{'constituentID': 164285, 'role': 'Maker', 'name': 'Pierre Stephan', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'constituentWikidata_URL': '', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Figure', 'title': 'Figure of Admiral Samuel Hood', 'culture': 'British (American market)', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'Pierre Stephan', 'artistDisplayBio': 'French, active ca. 1770–95', 'artistSuffix': '', 'artistAlphaSort': 'Stephan, Pierre', 'artistNationality': 'French', 'artistBeginDate': '1765', 'artistEndDate': '1795', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'objectDate': 'ca. 1785', 'objectBeginDate': 1782, 'objectEndDate': 1785, 'medium': 'Earthenware, basalt', 'dimensions': 'H. 12 3/8 in. (31.4 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 31.4}}], 'creditLine': 'Harris Brisbane Dick Fund, 1938', 'geographyType': 'Made in', 'city': '', 'state': '', 'county': 'Staffordshire', 'country': 'England', 'region': 'West Midlands', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/38', 'tags': [{'term': 'Cannons', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300036936', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q81103'}, {'term': 'Swords', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037048', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q12791'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}, {'term': 'Admirals', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300236014', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q132851'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}"
2022-04-08 21:19:07,661 : INFO -> Looping inside convert_dict(): key="objectID", val="38", type(val)="int"
2022-04-08 21:19:07,661 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,661 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,661 : INFO -> Inside convert_kv(): key="objectID", val="38", type(val) is: "int"
2022-04-08 21:19:07,661 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,661 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,661 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,661 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,661 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,662 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,662 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,662 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,662 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="38.165.50", type(val)="str"
2022-04-08 21:19:07,662 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,662 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,662 : INFO -> Inside convert_kv(): key="accessionNumber", val="38.165.50", type(val) is: "str"
2022-04-08 21:19:07,662 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,662 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,662 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1938", type(val)="str"
2022-04-08 21:19:07,662 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,662 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,662 : INFO -> Inside convert_kv(): key="accessionYear", val="1938", type(val) is: "str"
2022-04-08 21:19:07,662 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,662 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,662 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="True", type(val)="bool"
2022-04-08 21:19:07,662 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,663 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,663 : INFO -> Inside convert_kv(): key="isPublicDomain", val="True", type(val) is: "bool"
2022-04-08 21:19:07,663 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,663 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,663 : INFO -> Looping inside convert_dict(): key="primaryImage", val="https://images.metmuseum.org/CRDImages/ad/original/DP247753.jpg", type(val)="str"
2022-04-08 21:19:07,663 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,663 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,663 : INFO -> Inside convert_kv(): key="primaryImage", val="https://images.metmuseum.org/CRDImages/ad/original/DP247753.jpg", type(val) is: "str"
2022-04-08 21:19:07,663 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,663 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,663 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="https://images.metmuseum.org/CRDImages/ad/web-large/DP247753.jpg", type(val)="str"
2022-04-08 21:19:07,663 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,663 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,663 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="https://images.metmuseum.org/CRDImages/ad/web-large/DP247753.jpg", type(val) is: "str"
2022-04-08 21:19:07,663 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,663 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,664 : INFO -> Looping inside convert_dict(): key="additionalImages", val="['https://images.metmuseum.org/CRDImages/ad/original/DP247755.jpg']", type(val)="list"
2022-04-08 21:19:07,664 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,664 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,664 : INFO -> Inside convert_list()
2022-04-08 21:19:07,664 : INFO -> Looping inside convert_list(): item="https://images.metmuseum.org/CRDImages/ad/original/DP247755.jpg", item_name="item", type="str"
2022-04-08 21:19:07,664 : INFO -> Inside convert_kv(): key="item", val="https://images.metmuseum.org/CRDImages/ad/original/DP247755.jpg", type(val) is: "str"
2022-04-08 21:19:07,664 : INFO -> Inside make_valid_xml_name(). Testing key "item" with attr "{}"
2022-04-08 21:19:07,664 : INFO -> Inside key_is_valid_xml(). Testing "item"
2022-04-08 21:19:07,664 : INFO -> Looping inside convert_dict(): key="constituents", val="[{'constituentID': 164285, 'role': 'Maker', 'name': 'Pierre Stephan', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'constituentWikidata_URL': '', 'gender': ''}]", type(val)="list"
2022-04-08 21:19:07,664 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,664 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,664 : INFO -> Inside convert_list()
2022-04-08 21:19:07,664 : INFO -> Looping inside convert_list(): item="{'constituentID': 164285, 'role': 'Maker', 'name': 'Pierre Stephan', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'constituentWikidata_URL': '', 'gender': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,664 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'constituentID': 164285, 'role': 'Maker', 'name': 'Pierre Stephan', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500100483', 'constituentWikidata_URL': '', 'gender': ''}"
2022-04-08 21:19:07,664 : INFO -> Looping inside convert_dict(): key="constituentID", val="164285", type(val)="int"
2022-04-08 21:19:07,664 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,664 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,664 : INFO -> Inside convert_kv(): key="constituentID", val="164285", type(val) is: "int"
2022-04-08 21:19:07,665 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,665 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,665 : INFO -> Looping inside convert_dict(): key="role", val="Maker", type(val)="str"
2022-04-08 21:19:07,665 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,665 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,665 : INFO -> Inside convert_kv(): key="role", val="Maker", type(val) is: "str"
2022-04-08 21:19:07,665 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,665 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,665 : INFO -> Looping inside convert_dict(): key="name", val="Pierre Stephan", type(val)="str"
2022-04-08 21:19:07,665 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,665 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,665 : INFO -> Inside convert_kv(): key="name", val="Pierre Stephan", type(val) is: "str"
2022-04-08 21:19:07,665 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,665 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,665 : INFO -> Looping inside convert_dict(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500100483", type(val)="str"
2022-04-08 21:19:07,665 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,665 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,666 : INFO -> Inside convert_kv(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500100483", type(val) is: "str"
2022-04-08 21:19:07,666 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,666 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,666 : INFO -> Looping inside convert_dict(): key="constituentWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,666 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,666 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,666 : INFO -> Inside convert_kv(): key="constituentWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,666 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,666 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,666 : INFO -> Looping inside convert_dict(): key="gender", val="", type(val)="str"
2022-04-08 21:19:07,666 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,666 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,666 : INFO -> Inside convert_kv(): key="gender", val="", type(val) is: "str"
2022-04-08 21:19:07,666 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,666 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,666 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,666 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,666 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,667 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,667 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,667 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,667 : INFO -> Looping inside convert_dict(): key="objectName", val="Figure", type(val)="str"
2022-04-08 21:19:07,667 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,667 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,667 : INFO -> Inside convert_kv(): key="objectName", val="Figure", type(val) is: "str"
2022-04-08 21:19:07,667 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,667 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,667 : INFO -> Looping inside convert_dict(): key="title", val="Figure of Admiral Samuel Hood", type(val)="str"
2022-04-08 21:19:07,667 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,667 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,667 : INFO -> Inside convert_kv(): key="title", val="Figure of Admiral Samuel Hood", type(val) is: "str"
2022-04-08 21:19:07,667 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,667 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,667 : INFO -> Looping inside convert_dict(): key="culture", val="British (American market)", type(val)="str"
2022-04-08 21:19:07,668 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,668 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,668 : INFO -> Inside convert_kv(): key="culture", val="British (American market)", type(val) is: "str"
2022-04-08 21:19:07,668 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,668 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,668 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,668 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,668 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,668 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,668 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,668 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,668 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,668 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,668 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,668 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,668 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,668 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,669 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,669 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,669 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,669 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,669 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,669 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,669 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,669 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,669 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,669 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,669 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,669 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,669 : INFO -> Looping inside convert_dict(): key="artistRole", val="Maker", type(val)="str"
2022-04-08 21:19:07,669 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,669 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,670 : INFO -> Inside convert_kv(): key="artistRole", val="Maker", type(val) is: "str"
2022-04-08 21:19:07,670 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,670 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,670 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,670 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,670 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,670 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,670 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,670 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,670 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="Pierre Stephan", type(val)="str"
2022-04-08 21:19:07,670 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,670 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,670 : INFO -> Inside convert_kv(): key="artistDisplayName", val="Pierre Stephan", type(val) is: "str"
2022-04-08 21:19:07,670 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,670 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,670 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="French, active ca. 1770–95", type(val)="str"
2022-04-08 21:19:07,670 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,670 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,671 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="French, active ca. 1770–95", type(val) is: "str"
2022-04-08 21:19:07,671 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,671 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,671 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,671 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,671 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,671 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,671 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,671 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,671 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="Stephan, Pierre", type(val)="str"
2022-04-08 21:19:07,671 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,671 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,671 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="Stephan, Pierre", type(val) is: "str"
2022-04-08 21:19:07,671 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,671 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,671 : INFO -> Looping inside convert_dict(): key="artistNationality", val="French", type(val)="str"
2022-04-08 21:19:07,671 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,672 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,672 : INFO -> Inside convert_kv(): key="artistNationality", val="French", type(val) is: "str"
2022-04-08 21:19:07,672 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,672 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,672 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="1765", type(val)="str"
2022-04-08 21:19:07,672 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,672 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,672 : INFO -> Inside convert_kv(): key="artistBeginDate", val="1765", type(val) is: "str"
2022-04-08 21:19:07,672 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,672 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,672 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="1795", type(val)="str"
2022-04-08 21:19:07,672 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,672 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,672 : INFO -> Inside convert_kv(): key="artistEndDate", val="1795", type(val) is: "str"
2022-04-08 21:19:07,672 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,672 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,672 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,673 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,673 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,673 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,673 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,673 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,673 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,673 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,673 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,673 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,673 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,673 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,673 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500100483", type(val)="str"
2022-04-08 21:19:07,673 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,673 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,673 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500100483", type(val) is: "str"
2022-04-08 21:19:07,673 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,673 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,674 : INFO -> Looping inside convert_dict(): key="objectDate", val="ca. 1785", type(val)="str"
2022-04-08 21:19:07,674 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,674 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,674 : INFO -> Inside convert_kv(): key="objectDate", val="ca. 1785", type(val) is: "str"
2022-04-08 21:19:07,674 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,674 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,674 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1782", type(val)="int"
2022-04-08 21:19:07,674 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,674 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,674 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1782", type(val) is: "int"
2022-04-08 21:19:07,674 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,674 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,674 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1785", type(val)="int"
2022-04-08 21:19:07,674 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,674 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,674 : INFO -> Inside convert_kv(): key="objectEndDate", val="1785", type(val) is: "int"
2022-04-08 21:19:07,674 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,674 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,675 : INFO -> Looping inside convert_dict(): key="medium", val="Earthenware, basalt", type(val)="str"
2022-04-08 21:19:07,675 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,675 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,675 : INFO -> Inside convert_kv(): key="medium", val="Earthenware, basalt", type(val) is: "str"
2022-04-08 21:19:07,675 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,675 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,675 : INFO -> Looping inside convert_dict(): key="dimensions", val="H. 12 3/8 in. (31.4 cm)", type(val)="str"
2022-04-08 21:19:07,675 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,675 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,675 : INFO -> Inside convert_kv(): key="dimensions", val="H. 12 3/8 in. (31.4 cm)", type(val) is: "str"
2022-04-08 21:19:07,675 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,675 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,675 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 31.4}}]", type(val)="list"
2022-04-08 21:19:07,675 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,675 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,675 : INFO -> Inside convert_list()
2022-04-08 21:19:07,676 : INFO -> Looping inside convert_list(): item="{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 31.4}}", item_name="item", type="dict"
2022-04-08 21:19:07,676 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 31.4}}"
2022-04-08 21:19:07,676 : INFO -> Looping inside convert_dict(): key="elementName", val="Overall", type(val)="str"
2022-04-08 21:19:07,676 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,676 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,676 : INFO -> Inside convert_kv(): key="elementName", val="Overall", type(val) is: "str"
2022-04-08 21:19:07,676 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,676 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,676 : INFO -> Looping inside convert_dict(): key="elementDescription", val="None", type(val)="NoneType"
2022-04-08 21:19:07,676 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,676 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,676 : INFO -> Inside convert_none(): key="elementDescription"
2022-04-08 21:19:07,676 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,676 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,676 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Height': 31.4}", type(val)="dict"
2022-04-08 21:19:07,676 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,676 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,676 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Height': 31.4}"
2022-04-08 21:19:07,677 : INFO -> Looping inside convert_dict(): key="Height", val="31.4", type(val)="float"
2022-04-08 21:19:07,677 : INFO -> Inside make_valid_xml_name(). Testing key "Height" with attr "{}"
2022-04-08 21:19:07,677 : INFO -> Inside key_is_valid_xml(). Testing "Height"
2022-04-08 21:19:07,677 : INFO -> Inside convert_kv(): key="Height", val="31.4", type(val) is: "float"
2022-04-08 21:19:07,677 : INFO -> Inside make_valid_xml_name(). Testing key "Height" with attr "{}"
2022-04-08 21:19:07,677 : INFO -> Inside key_is_valid_xml(). Testing "Height"
2022-04-08 21:19:07,677 : INFO -> Looping inside convert_dict(): key="creditLine", val="Harris Brisbane Dick Fund, 1938", type(val)="str"
2022-04-08 21:19:07,677 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,677 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,677 : INFO -> Inside convert_kv(): key="creditLine", val="Harris Brisbane Dick Fund, 1938", type(val) is: "str"
2022-04-08 21:19:07,677 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,677 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,677 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,677 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,677 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,677 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,677 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,678 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,678 : INFO -> Looping inside convert_dict(): key="city", val="", type(val)="str"
2022-04-08 21:19:07,678 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,678 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,678 : INFO -> Inside convert_kv(): key="city", val="", type(val) is: "str"
2022-04-08 21:19:07,678 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,678 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,678 : INFO -> Looping inside convert_dict(): key="state", val="", type(val)="str"
2022-04-08 21:19:07,678 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,678 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,678 : INFO -> Inside convert_kv(): key="state", val="", type(val) is: "str"
2022-04-08 21:19:07,678 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,678 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,678 : INFO -> Looping inside convert_dict(): key="county", val="Staffordshire", type(val)="str"
2022-04-08 21:19:07,678 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,678 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,678 : INFO -> Inside convert_kv(): key="county", val="Staffordshire", type(val) is: "str"
2022-04-08 21:19:07,679 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,679 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,679 : INFO -> Looping inside convert_dict(): key="country", val="England", type(val)="str"
2022-04-08 21:19:07,679 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,679 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,679 : INFO -> Inside convert_kv(): key="country", val="England", type(val) is: "str"
2022-04-08 21:19:07,679 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,679 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,679 : INFO -> Looping inside convert_dict(): key="region", val="West Midlands", type(val)="str"
2022-04-08 21:19:07,679 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,679 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,679 : INFO -> Inside convert_kv(): key="region", val="West Midlands", type(val) is: "str"
2022-04-08 21:19:07,679 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,679 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,679 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,679 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,679 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,680 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,680 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,680 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,680 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,680 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,680 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,680 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,680 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,680 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,680 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,680 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,680 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,680 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,680 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,680 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,680 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,680 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,680 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,681 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,681 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,681 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,681 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,681 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,681 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,681 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,681 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,681 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,681 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,681 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,681 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,681 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,681 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,681 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,681 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,681 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,682 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,682 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,682 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,682 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,682 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,682 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,682 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,682 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,682 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,682 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,682 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,682 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,682 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,682 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,682 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,682 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,683 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,683 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,683 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,683 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,683 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,683 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,683 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/38", type(val)="str"
2022-04-08 21:19:07,683 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,683 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,683 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/38", type(val) is: "str"
2022-04-08 21:19:07,683 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,683 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,683 : INFO -> Looping inside convert_dict(): key="tags", val="[{'term': 'Cannons', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300036936', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q81103'}, {'term': 'Swords', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037048', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q12791'}, {'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}, {'term': 'Admirals', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300236014', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q132851'}]", type(val)="list"
2022-04-08 21:19:07,683 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,683 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,683 : INFO -> Inside convert_list()
2022-04-08 21:19:07,683 : INFO -> Looping inside convert_list(): item="{'term': 'Cannons', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300036936', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q81103'}", item_name="item", type="dict"
2022-04-08 21:19:07,684 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'term': 'Cannons', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300036936', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q81103'}"
2022-04-08 21:19:07,684 : INFO -> Looping inside convert_dict(): key="term", val="Cannons", type(val)="str"
2022-04-08 21:19:07,684 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,684 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,684 : INFO -> Inside convert_kv(): key="term", val="Cannons", type(val) is: "str"
2022-04-08 21:19:07,684 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,684 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,684 : INFO -> Looping inside convert_dict(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300036936", type(val)="str"
2022-04-08 21:19:07,684 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,684 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,684 : INFO -> Inside convert_kv(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300036936", type(val) is: "str"
2022-04-08 21:19:07,684 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,684 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,684 : INFO -> Looping inside convert_dict(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q81103", type(val)="str"
2022-04-08 21:19:07,684 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,684 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,684 : INFO -> Inside convert_kv(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q81103", type(val) is: "str"
2022-04-08 21:19:07,684 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,685 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,685 : INFO -> Looping inside convert_list(): item="{'term': 'Swords', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037048', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q12791'}", item_name="item", type="dict"
2022-04-08 21:19:07,685 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'term': 'Swords', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300037048', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q12791'}"
2022-04-08 21:19:07,685 : INFO -> Looping inside convert_dict(): key="term", val="Swords", type(val)="str"
2022-04-08 21:19:07,685 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,685 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,685 : INFO -> Inside convert_kv(): key="term", val="Swords", type(val) is: "str"
2022-04-08 21:19:07,685 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,685 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,685 : INFO -> Looping inside convert_dict(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300037048", type(val)="str"
2022-04-08 21:19:07,685 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,685 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,685 : INFO -> Inside convert_kv(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300037048", type(val) is: "str"
2022-04-08 21:19:07,685 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,685 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,685 : INFO -> Looping inside convert_dict(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q12791", type(val)="str"
2022-04-08 21:19:07,685 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,685 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,686 : INFO -> Inside convert_kv(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q12791", type(val) is: "str"
2022-04-08 21:19:07,686 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,686 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,686 : INFO -> Looping inside convert_list(): item="{'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}", item_name="item", type="dict"
2022-04-08 21:19:07,686 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'term': 'Men', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300025928', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q8441'}"
2022-04-08 21:19:07,686 : INFO -> Looping inside convert_dict(): key="term", val="Men", type(val)="str"
2022-04-08 21:19:07,686 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,686 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,686 : INFO -> Inside convert_kv(): key="term", val="Men", type(val) is: "str"
2022-04-08 21:19:07,686 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,686 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,686 : INFO -> Looping inside convert_dict(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300025928", type(val)="str"
2022-04-08 21:19:07,686 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,686 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,686 : INFO -> Inside convert_kv(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300025928", type(val) is: "str"
2022-04-08 21:19:07,686 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,686 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,687 : INFO -> Looping inside convert_dict(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q8441", type(val)="str"
2022-04-08 21:19:07,687 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,687 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,687 : INFO -> Inside convert_kv(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q8441", type(val) is: "str"
2022-04-08 21:19:07,687 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,687 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,687 : INFO -> Looping inside convert_list(): item="{'term': 'Admirals', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300236014', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q132851'}", item_name="item", type="dict"
2022-04-08 21:19:07,687 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'term': 'Admirals', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300236014', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q132851'}"
2022-04-08 21:19:07,687 : INFO -> Looping inside convert_dict(): key="term", val="Admirals", type(val)="str"
2022-04-08 21:19:07,687 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,687 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,687 : INFO -> Inside convert_kv(): key="term", val="Admirals", type(val) is: "str"
2022-04-08 21:19:07,687 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,688 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,688 : INFO -> Looping inside convert_dict(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300236014", type(val)="str"
2022-04-08 21:19:07,688 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,688 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,688 : INFO -> Inside convert_kv(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300236014", type(val) is: "str"
2022-04-08 21:19:07,688 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,688 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,688 : INFO -> Looping inside convert_dict(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q132851", type(val)="str"
2022-04-08 21:19:07,688 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,688 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,688 : INFO -> Inside convert_kv(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q132851", type(val) is: "str"
2022-04-08 21:19:07,688 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,688 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,689 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,689 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,689 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,689 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,689 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,689 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,689 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,689 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,689 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,689 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,689 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,689 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,689 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="774", type(val)="str"
2022-04-08 21:19:07,689 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,689 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,689 : INFO -> Inside convert_kv(): key="GalleryNumber", val="774", type(val) is: "str"
2022-04-08 21:19:07,690 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,690 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,690 : INFO -> Looping inside convert_list(): item="{'objectID': 39, 'isHighlight': False, 'accessionNumber': '18.11.10', 'accessionYear': '1918', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/37808.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/37808.jpg', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Advertisement', 'title': 'Advertisement for Norwich Stone Ware Factory', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1770–1800', 'objectBeginDate': 1770, 'objectEndDate': 1800, 'medium': 'Paper', 'dimensions': '11 x 9 in. (27.9 x 22.9 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 27.9, 'Width': 22.86}}], 'creditLine': 'Rogers Fund, 1918', 'geographyType': 'Made in', 'city': 'Norwich', 'state': 'Connecticut', 'county': '', 'country': 'United States', 'region': 'New England', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/39', 'tags': [{'term': 'Advertisements', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300193993', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q39911916'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,690 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 39, 'isHighlight': False, 'accessionNumber': '18.11.10', 'accessionYear': '1918', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/37808.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/37808.jpg', 'additionalImages': [], 'constituents': None, 'department': 'The American Wing', 'objectName': 'Advertisement', 'title': 'Advertisement for Norwich Stone Ware Factory', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': '', 'artistPrefix': '', 'artistDisplayName': '', 'artistDisplayBio': '', 'artistSuffix': '', 'artistAlphaSort': '', 'artistNationality': '', 'artistBeginDate': '', 'artistEndDate': '', 'artistGender': '', 'artistWikidata_URL': '', 'artistULAN_URL': '', 'objectDate': '1770–1800', 'objectBeginDate': 1770, 'objectEndDate': 1800, 'medium': 'Paper', 'dimensions': '11 x 9 in. (27.9 x 22.9 cm)', 'measurements': [{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 27.9, 'Width': 22.86}}], 'creditLine': 'Rogers Fund, 1918', 'geographyType': 'Made in', 'city': 'Norwich', 'state': 'Connecticut', 'county': '', 'country': 'United States', 'region': 'New England', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2021-04-06T04:41:04.967Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/39', 'tags': [{'term': 'Advertisements', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300193993', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q39911916'}], 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': ''}"
2022-04-08 21:19:07,690 : INFO -> Looping inside convert_dict(): key="objectID", val="39", type(val)="int"
2022-04-08 21:19:07,690 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,690 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,690 : INFO -> Inside convert_kv(): key="objectID", val="39", type(val) is: "int"
2022-04-08 21:19:07,690 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,690 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,690 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,690 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,690 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,690 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,690 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,690 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,691 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="18.11.10", type(val)="str"
2022-04-08 21:19:07,691 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,691 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,691 : INFO -> Inside convert_kv(): key="accessionNumber", val="18.11.10", type(val) is: "str"
2022-04-08 21:19:07,691 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,691 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,691 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1918", type(val)="str"
2022-04-08 21:19:07,691 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,691 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,691 : INFO -> Inside convert_kv(): key="accessionYear", val="1918", type(val) is: "str"
2022-04-08 21:19:07,691 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,691 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,691 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="True", type(val)="bool"
2022-04-08 21:19:07,691 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,691 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,691 : INFO -> Inside convert_kv(): key="isPublicDomain", val="True", type(val) is: "bool"
2022-04-08 21:19:07,691 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,691 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,692 : INFO -> Looping inside convert_dict(): key="primaryImage", val="https://images.metmuseum.org/CRDImages/ad/original/37808.jpg", type(val)="str"
2022-04-08 21:19:07,692 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,692 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,692 : INFO -> Inside convert_kv(): key="primaryImage", val="https://images.metmuseum.org/CRDImages/ad/original/37808.jpg", type(val) is: "str"
2022-04-08 21:19:07,692 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,692 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,692 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="https://images.metmuseum.org/CRDImages/ad/web-large/37808.jpg", type(val)="str"
2022-04-08 21:19:07,692 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,692 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,692 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="https://images.metmuseum.org/CRDImages/ad/web-large/37808.jpg", type(val) is: "str"
2022-04-08 21:19:07,692 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,692 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,692 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,692 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,692 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,692 : INFO -> Inside convert_list()
2022-04-08 21:19:07,693 : INFO -> Looping inside convert_dict(): key="constituents", val="None", type(val)="NoneType"
2022-04-08 21:19:07,693 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,693 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,693 : INFO -> Inside convert_none(): key="constituents"
2022-04-08 21:19:07,693 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,693 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,693 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,693 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,693 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,693 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,693 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,693 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,693 : INFO -> Looping inside convert_dict(): key="objectName", val="Advertisement", type(val)="str"
2022-04-08 21:19:07,693 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,693 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,693 : INFO -> Inside convert_kv(): key="objectName", val="Advertisement", type(val) is: "str"
2022-04-08 21:19:07,693 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,693 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,694 : INFO -> Looping inside convert_dict(): key="title", val="Advertisement for Norwich Stone Ware Factory", type(val)="str"
2022-04-08 21:19:07,694 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,694 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,694 : INFO -> Inside convert_kv(): key="title", val="Advertisement for Norwich Stone Ware Factory", type(val) is: "str"
2022-04-08 21:19:07,694 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,694 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,694 : INFO -> Looping inside convert_dict(): key="culture", val="American", type(val)="str"
2022-04-08 21:19:07,694 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,694 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,694 : INFO -> Inside convert_kv(): key="culture", val="American", type(val) is: "str"
2022-04-08 21:19:07,694 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,694 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,694 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,694 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,694 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,694 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,694 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,695 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,695 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,695 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,695 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,695 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,695 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,695 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,695 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,695 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,695 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,695 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,695 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,695 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,695 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,695 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,695 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,696 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,696 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,696 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,696 : INFO -> Looping inside convert_dict(): key="artistRole", val="", type(val)="str"
2022-04-08 21:19:07,696 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,696 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,696 : INFO -> Inside convert_kv(): key="artistRole", val="", type(val) is: "str"
2022-04-08 21:19:07,696 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,696 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,696 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,696 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,696 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,696 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,696 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,696 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,696 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="", type(val)="str"
2022-04-08 21:19:07,696 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,696 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,697 : INFO -> Inside convert_kv(): key="artistDisplayName", val="", type(val) is: "str"
2022-04-08 21:19:07,697 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,697 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,697 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="", type(val)="str"
2022-04-08 21:19:07,697 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,697 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,697 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="", type(val) is: "str"
2022-04-08 21:19:07,697 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,697 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,697 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,697 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,697 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,697 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,697 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,697 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,697 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="", type(val)="str"
2022-04-08 21:19:07,697 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,698 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,698 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="", type(val) is: "str"
2022-04-08 21:19:07,698 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,698 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,698 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,698 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,698 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,698 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,698 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,698 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,698 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="", type(val)="str"
2022-04-08 21:19:07,698 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,698 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,698 : INFO -> Inside convert_kv(): key="artistBeginDate", val="", type(val) is: "str"
2022-04-08 21:19:07,698 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,698 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,698 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="", type(val)="str"
2022-04-08 21:19:07,699 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,699 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,699 : INFO -> Inside convert_kv(): key="artistEndDate", val="", type(val) is: "str"
2022-04-08 21:19:07,699 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,699 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,699 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,699 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,699 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,699 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,699 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,699 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,699 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,699 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,699 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,699 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,699 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,699 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,700 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="", type(val)="str"
2022-04-08 21:19:07,700 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,700 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,700 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,700 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,700 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,700 : INFO -> Looping inside convert_dict(): key="objectDate", val="1770–1800", type(val)="str"
2022-04-08 21:19:07,700 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,700 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,700 : INFO -> Inside convert_kv(): key="objectDate", val="1770–1800", type(val) is: "str"
2022-04-08 21:19:07,700 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,700 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,700 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1770", type(val)="int"
2022-04-08 21:19:07,700 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,700 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,700 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1770", type(val) is: "int"
2022-04-08 21:19:07,700 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,700 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,701 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1800", type(val)="int"
2022-04-08 21:19:07,701 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,701 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,701 : INFO -> Inside convert_kv(): key="objectEndDate", val="1800", type(val) is: "int"
2022-04-08 21:19:07,701 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,701 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,701 : INFO -> Looping inside convert_dict(): key="medium", val="Paper", type(val)="str"
2022-04-08 21:19:07,701 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,701 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,701 : INFO -> Inside convert_kv(): key="medium", val="Paper", type(val) is: "str"
2022-04-08 21:19:07,701 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,701 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,701 : INFO -> Looping inside convert_dict(): key="dimensions", val="11 x 9 in. (27.9 x 22.9 cm)", type(val)="str"
2022-04-08 21:19:07,701 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,701 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,701 : INFO -> Inside convert_kv(): key="dimensions", val="11 x 9 in. (27.9 x 22.9 cm)", type(val) is: "str"
2022-04-08 21:19:07,701 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,702 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,702 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 27.9, 'Width': 22.86}}]", type(val)="list"
2022-04-08 21:19:07,702 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,702 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,702 : INFO -> Inside convert_list()
2022-04-08 21:19:07,702 : INFO -> Looping inside convert_list(): item="{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 27.9, 'Width': 22.86}}", item_name="item", type="dict"
2022-04-08 21:19:07,702 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Overall', 'elementDescription': None, 'elementMeasurements': {'Height': 27.9, 'Width': 22.86}}"
2022-04-08 21:19:07,702 : INFO -> Looping inside convert_dict(): key="elementName", val="Overall", type(val)="str"
2022-04-08 21:19:07,702 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,702 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,702 : INFO -> Inside convert_kv(): key="elementName", val="Overall", type(val) is: "str"
2022-04-08 21:19:07,702 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,702 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,702 : INFO -> Looping inside convert_dict(): key="elementDescription", val="None", type(val)="NoneType"
2022-04-08 21:19:07,702 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,702 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,702 : INFO -> Inside convert_none(): key="elementDescription"
2022-04-08 21:19:07,703 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,703 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,703 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Height': 27.9, 'Width': 22.86}", type(val)="dict"
2022-04-08 21:19:07,703 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,703 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,703 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Height': 27.9, 'Width': 22.86}"
2022-04-08 21:19:07,703 : INFO -> Looping inside convert_dict(): key="Height", val="27.9", type(val)="float"
2022-04-08 21:19:07,703 : INFO -> Inside make_valid_xml_name(). Testing key "Height" with attr "{}"
2022-04-08 21:19:07,703 : INFO -> Inside key_is_valid_xml(). Testing "Height"
2022-04-08 21:19:07,703 : INFO -> Inside convert_kv(): key="Height", val="27.9", type(val) is: "float"
2022-04-08 21:19:07,703 : INFO -> Inside make_valid_xml_name(). Testing key "Height" with attr "{}"
2022-04-08 21:19:07,703 : INFO -> Inside key_is_valid_xml(). Testing "Height"
2022-04-08 21:19:07,703 : INFO -> Looping inside convert_dict(): key="Width", val="22.86", type(val)="float"
2022-04-08 21:19:07,703 : INFO -> Inside make_valid_xml_name(). Testing key "Width" with attr "{}"
2022-04-08 21:19:07,703 : INFO -> Inside key_is_valid_xml(). Testing "Width"
2022-04-08 21:19:07,703 : INFO -> Inside convert_kv(): key="Width", val="22.86", type(val) is: "float"
2022-04-08 21:19:07,703 : INFO -> Inside make_valid_xml_name(). Testing key "Width" with attr "{}"
2022-04-08 21:19:07,704 : INFO -> Inside key_is_valid_xml(). Testing "Width"
2022-04-08 21:19:07,704 : INFO -> Looping inside convert_dict(): key="creditLine", val="Rogers Fund, 1918", type(val)="str"
2022-04-08 21:19:07,704 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,704 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,704 : INFO -> Inside convert_kv(): key="creditLine", val="Rogers Fund, 1918", type(val) is: "str"
2022-04-08 21:19:07,704 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,704 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,704 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,704 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,704 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,704 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,704 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,704 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,704 : INFO -> Looping inside convert_dict(): key="city", val="Norwich", type(val)="str"
2022-04-08 21:19:07,704 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,704 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,704 : INFO -> Inside convert_kv(): key="city", val="Norwich", type(val) is: "str"
2022-04-08 21:19:07,705 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,705 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,705 : INFO -> Looping inside convert_dict(): key="state", val="Connecticut", type(val)="str"
2022-04-08 21:19:07,705 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,705 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,705 : INFO -> Inside convert_kv(): key="state", val="Connecticut", type(val) is: "str"
2022-04-08 21:19:07,705 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,705 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,705 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,705 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,705 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,705 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,705 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,705 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,705 : INFO -> Looping inside convert_dict(): key="country", val="United States", type(val)="str"
2022-04-08 21:19:07,706 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,706 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,706 : INFO -> Inside convert_kv(): key="country", val="United States", type(val) is: "str"
2022-04-08 21:19:07,706 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,706 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,706 : INFO -> Looping inside convert_dict(): key="region", val="New England", type(val)="str"
2022-04-08 21:19:07,706 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,706 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,706 : INFO -> Inside convert_kv(): key="region", val="New England", type(val) is: "str"
2022-04-08 21:19:07,706 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,706 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,706 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,706 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,706 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,706 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,706 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,706 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,707 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,707 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,707 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,707 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,707 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,707 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,707 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,707 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,707 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,707 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,707 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,707 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,707 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,707 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,707 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,707 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,707 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,707 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,708 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,708 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,708 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,708 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,708 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,708 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,708 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,708 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,708 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,708 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,708 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,708 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,708 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,708 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,708 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,708 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,708 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,709 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,709 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,709 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,709 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,709 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,709 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,709 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,709 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val)="str"
2022-04-08 21:19:07,709 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,709 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,709 : INFO -> Inside convert_kv(): key="metadataDate", val="2021-04-06T04:41:04.967Z", type(val) is: "str"
2022-04-08 21:19:07,709 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,709 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,709 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,709 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,709 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,709 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,710 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,710 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,710 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/39", type(val)="str"
2022-04-08 21:19:07,710 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,710 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,710 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/39", type(val) is: "str"
2022-04-08 21:19:07,710 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,710 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,710 : INFO -> Looping inside convert_dict(): key="tags", val="[{'term': 'Advertisements', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300193993', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q39911916'}]", type(val)="list"
2022-04-08 21:19:07,710 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,710 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,710 : INFO -> Inside convert_list()
2022-04-08 21:19:07,710 : INFO -> Looping inside convert_list(): item="{'term': 'Advertisements', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300193993', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q39911916'}", item_name="item", type="dict"
2022-04-08 21:19:07,710 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'term': 'Advertisements', 'AAT_URL': 'http://vocab.getty.edu/page/aat/300193993', 'Wikidata_URL': 'https://www.wikidata.org/wiki/Q39911916'}"
2022-04-08 21:19:07,710 : INFO -> Looping inside convert_dict(): key="term", val="Advertisements", type(val)="str"
2022-04-08 21:19:07,710 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,710 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,710 : INFO -> Inside convert_kv(): key="term", val="Advertisements", type(val) is: "str"
2022-04-08 21:19:07,711 : INFO -> Inside make_valid_xml_name(). Testing key "term" with attr "{}"
2022-04-08 21:19:07,711 : INFO -> Inside key_is_valid_xml(). Testing "term"
2022-04-08 21:19:07,711 : INFO -> Looping inside convert_dict(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300193993", type(val)="str"
2022-04-08 21:19:07,711 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,711 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,711 : INFO -> Inside convert_kv(): key="AAT_URL", val="http://vocab.getty.edu/page/aat/300193993", type(val) is: "str"
2022-04-08 21:19:07,711 : INFO -> Inside make_valid_xml_name(). Testing key "AAT_URL" with attr "{}"
2022-04-08 21:19:07,711 : INFO -> Inside key_is_valid_xml(). Testing "AAT_URL"
2022-04-08 21:19:07,711 : INFO -> Looping inside convert_dict(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q39911916", type(val)="str"
2022-04-08 21:19:07,711 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,711 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,711 : INFO -> Inside convert_kv(): key="Wikidata_URL", val="https://www.wikidata.org/wiki/Q39911916", type(val) is: "str"
2022-04-08 21:19:07,711 : INFO -> Inside make_valid_xml_name(). Testing key "Wikidata_URL" with attr "{}"
2022-04-08 21:19:07,711 : INFO -> Inside key_is_valid_xml(). Testing "Wikidata_URL"
2022-04-08 21:19:07,711 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,711 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,711 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,712 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,712 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,712 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,712 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,712 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,712 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,712 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,712 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,712 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,712 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="", type(val)="str"
2022-04-08 21:19:07,712 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,712 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,712 : INFO -> Inside convert_kv(): key="GalleryNumber", val="", type(val) is: "str"
2022-04-08 21:19:07,712 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,712 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,712 : INFO -> Looping inside convert_list(): item="{'objectID': 40, 'isHighlight': False, 'accessionNumber': '46.140.143', 'accessionYear': '1946', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/174118.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/174118.jpg', 'additionalImages': [], 'constituents': [{'constituentID': 1087, 'role': 'Maker', 'name': 'New England Glass Company', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500356007', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q17083157', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Ale glass', 'title': 'Ale Glass', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'New England Glass Company', 'artistDisplayBio': 'American, East Cambridge, Massachusetts, 1818–1888', 'artistSuffix': '', 'artistAlphaSort': 'New England Glass Company', 'artistNationality': '', 'artistBeginDate': '1818', 'artistEndDate': '1888', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q17083157', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500356007', 'objectDate': '1830–70', 'objectBeginDate': 1830, 'objectEndDate': 1870, 'medium': 'Pressed glass', 'dimensions': 'H. 6 9/16 in. (16.7 cm); Diam. 3 in. (7.6 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': None, 'elementMeasurements': {'Diameter': 7.62, 'Height': 16.6688}}], 'creditLine': 'Gift of Mrs. Emily Winthrop Miles, 1946', 'geographyType': 'Made in', 'city': 'East Cambridge', 'state': 'Massachusetts', 'county': '', 'country': 'United States', 'region': 'New England', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2022-02-09T04:42:08.947Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/40', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}", item_name="item", type="dict"
2022-04-08 21:19:07,713 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'objectID': 40, 'isHighlight': False, 'accessionNumber': '46.140.143', 'accessionYear': '1946', 'isPublicDomain': True, 'primaryImage': 'https://images.metmuseum.org/CRDImages/ad/original/174118.jpg', 'primaryImageSmall': 'https://images.metmuseum.org/CRDImages/ad/web-large/174118.jpg', 'additionalImages': [], 'constituents': [{'constituentID': 1087, 'role': 'Maker', 'name': 'New England Glass Company', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500356007', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q17083157', 'gender': ''}], 'department': 'The American Wing', 'objectName': 'Ale glass', 'title': 'Ale Glass', 'culture': 'American', 'period': '', 'dynasty': '', 'reign': '', 'portfolio': '', 'artistRole': 'Maker', 'artistPrefix': '', 'artistDisplayName': 'New England Glass Company', 'artistDisplayBio': 'American, East Cambridge, Massachusetts, 1818–1888', 'artistSuffix': '', 'artistAlphaSort': 'New England Glass Company', 'artistNationality': '', 'artistBeginDate': '1818', 'artistEndDate': '1888', 'artistGender': '', 'artistWikidata_URL': 'https://www.wikidata.org/wiki/Q17083157', 'artistULAN_URL': 'http://vocab.getty.edu/page/ulan/500356007', 'objectDate': '1830–70', 'objectBeginDate': 1830, 'objectEndDate': 1870, 'medium': 'Pressed glass', 'dimensions': 'H. 6 9/16 in. (16.7 cm); Diam. 3 in. (7.6 cm)', 'measurements': [{'elementName': 'Other', 'elementDescription': None, 'elementMeasurements': {'Diameter': 7.62, 'Height': 16.6688}}], 'creditLine': 'Gift of Mrs. Emily Winthrop Miles, 1946', 'geographyType': 'Made in', 'city': 'East Cambridge', 'state': 'Massachusetts', 'county': '', 'country': 'United States', 'region': 'New England', 'subregion': '', 'locale': '', 'locus': '', 'excavation': '', 'river': '', 'classification': '', 'rightsAndReproduction': '', 'linkResource': '', 'metadataDate': '2022-02-09T04:42:08.947Z', 'repository': 'Metropolitan Museum of Art, New York, NY', 'objectURL': 'https://www.metmuseum.org/art/collection/search/40', 'tags': None, 'objectWikidata_URL': '', 'isTimelineWork': False, 'GalleryNumber': '774'}"
2022-04-08 21:19:07,713 : INFO -> Looping inside convert_dict(): key="objectID", val="40", type(val)="int"
2022-04-08 21:19:07,713 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,713 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,713 : INFO -> Inside convert_kv(): key="objectID", val="40", type(val) is: "int"
2022-04-08 21:19:07,713 : INFO -> Inside make_valid_xml_name(). Testing key "objectID" with attr "{}"
2022-04-08 21:19:07,713 : INFO -> Inside key_is_valid_xml(). Testing "objectID"
2022-04-08 21:19:07,713 : INFO -> Looping inside convert_dict(): key="isHighlight", val="False", type(val)="bool"
2022-04-08 21:19:07,713 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,713 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,713 : INFO -> Inside convert_kv(): key="isHighlight", val="False", type(val) is: "bool"
2022-04-08 21:19:07,713 : INFO -> Inside make_valid_xml_name(). Testing key "isHighlight" with attr "{}"
2022-04-08 21:19:07,713 : INFO -> Inside key_is_valid_xml(). Testing "isHighlight"
2022-04-08 21:19:07,713 : INFO -> Looping inside convert_dict(): key="accessionNumber", val="46.140.143", type(val)="str"
2022-04-08 21:19:07,713 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,713 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,714 : INFO -> Inside convert_kv(): key="accessionNumber", val="46.140.143", type(val) is: "str"
2022-04-08 21:19:07,714 : INFO -> Inside make_valid_xml_name(). Testing key "accessionNumber" with attr "{}"
2022-04-08 21:19:07,714 : INFO -> Inside key_is_valid_xml(). Testing "accessionNumber"
2022-04-08 21:19:07,714 : INFO -> Looping inside convert_dict(): key="accessionYear", val="1946", type(val)="str"
2022-04-08 21:19:07,714 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,714 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,714 : INFO -> Inside convert_kv(): key="accessionYear", val="1946", type(val) is: "str"
2022-04-08 21:19:07,714 : INFO -> Inside make_valid_xml_name(). Testing key "accessionYear" with attr "{}"
2022-04-08 21:19:07,714 : INFO -> Inside key_is_valid_xml(). Testing "accessionYear"
2022-04-08 21:19:07,714 : INFO -> Looping inside convert_dict(): key="isPublicDomain", val="True", type(val)="bool"
2022-04-08 21:19:07,714 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,714 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,714 : INFO -> Inside convert_kv(): key="isPublicDomain", val="True", type(val) is: "bool"
2022-04-08 21:19:07,714 : INFO -> Inside make_valid_xml_name(). Testing key "isPublicDomain" with attr "{}"
2022-04-08 21:19:07,714 : INFO -> Inside key_is_valid_xml(). Testing "isPublicDomain"
2022-04-08 21:19:07,714 : INFO -> Looping inside convert_dict(): key="primaryImage", val="https://images.metmuseum.org/CRDImages/ad/original/174118.jpg", type(val)="str"
2022-04-08 21:19:07,714 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,714 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,715 : INFO -> Inside convert_kv(): key="primaryImage", val="https://images.metmuseum.org/CRDImages/ad/original/174118.jpg", type(val) is: "str"
2022-04-08 21:19:07,715 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImage" with attr "{}"
2022-04-08 21:19:07,715 : INFO -> Inside key_is_valid_xml(). Testing "primaryImage"
2022-04-08 21:19:07,715 : INFO -> Looping inside convert_dict(): key="primaryImageSmall", val="https://images.metmuseum.org/CRDImages/ad/web-large/174118.jpg", type(val)="str"
2022-04-08 21:19:07,715 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,715 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,715 : INFO -> Inside convert_kv(): key="primaryImageSmall", val="https://images.metmuseum.org/CRDImages/ad/web-large/174118.jpg", type(val) is: "str"
2022-04-08 21:19:07,715 : INFO -> Inside make_valid_xml_name(). Testing key "primaryImageSmall" with attr "{}"
2022-04-08 21:19:07,715 : INFO -> Inside key_is_valid_xml(). Testing "primaryImageSmall"
2022-04-08 21:19:07,715 : INFO -> Looping inside convert_dict(): key="additionalImages", val="[]", type(val)="list"
2022-04-08 21:19:07,715 : INFO -> Inside make_valid_xml_name(). Testing key "additionalImages" with attr "{}"
2022-04-08 21:19:07,715 : INFO -> Inside key_is_valid_xml(). Testing "additionalImages"
2022-04-08 21:19:07,715 : INFO -> Inside convert_list()
2022-04-08 21:19:07,715 : INFO -> Looping inside convert_dict(): key="constituents", val="[{'constituentID': 1087, 'role': 'Maker', 'name': 'New England Glass Company', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500356007', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q17083157', 'gender': ''}]", type(val)="list"
2022-04-08 21:19:07,715 : INFO -> Inside make_valid_xml_name(). Testing key "constituents" with attr "{}"
2022-04-08 21:19:07,715 : INFO -> Inside key_is_valid_xml(). Testing "constituents"
2022-04-08 21:19:07,716 : INFO -> Inside convert_list()
2022-04-08 21:19:07,716 : INFO -> Looping inside convert_list(): item="{'constituentID': 1087, 'role': 'Maker', 'name': 'New England Glass Company', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500356007', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q17083157', 'gender': ''}", item_name="item", type="dict"
2022-04-08 21:19:07,716 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'constituentID': 1087, 'role': 'Maker', 'name': 'New England Glass Company', 'constituentULAN_URL': 'http://vocab.getty.edu/page/ulan/500356007', 'constituentWikidata_URL': 'https://www.wikidata.org/wiki/Q17083157', 'gender': ''}"
2022-04-08 21:19:07,716 : INFO -> Looping inside convert_dict(): key="constituentID", val="1087", type(val)="int"
2022-04-08 21:19:07,716 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,716 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,716 : INFO -> Inside convert_kv(): key="constituentID", val="1087", type(val) is: "int"
2022-04-08 21:19:07,716 : INFO -> Inside make_valid_xml_name(). Testing key "constituentID" with attr "{}"
2022-04-08 21:19:07,716 : INFO -> Inside key_is_valid_xml(). Testing "constituentID"
2022-04-08 21:19:07,716 : INFO -> Looping inside convert_dict(): key="role", val="Maker", type(val)="str"
2022-04-08 21:19:07,716 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,716 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,716 : INFO -> Inside convert_kv(): key="role", val="Maker", type(val) is: "str"
2022-04-08 21:19:07,716 : INFO -> Inside make_valid_xml_name(). Testing key "role" with attr "{}"
2022-04-08 21:19:07,716 : INFO -> Inside key_is_valid_xml(). Testing "role"
2022-04-08 21:19:07,716 : INFO -> Looping inside convert_dict(): key="name", val="New England Glass Company", type(val)="str"
2022-04-08 21:19:07,716 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,716 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,717 : INFO -> Inside convert_kv(): key="name", val="New England Glass Company", type(val) is: "str"
2022-04-08 21:19:07,717 : INFO -> Inside make_valid_xml_name(). Testing key "name" with attr "{}"
2022-04-08 21:19:07,717 : INFO -> Inside key_is_valid_xml(). Testing "name"
2022-04-08 21:19:07,717 : INFO -> Looping inside convert_dict(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500356007", type(val)="str"
2022-04-08 21:19:07,717 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,717 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,717 : INFO -> Inside convert_kv(): key="constituentULAN_URL", val="http://vocab.getty.edu/page/ulan/500356007", type(val) is: "str"
2022-04-08 21:19:07,717 : INFO -> Inside make_valid_xml_name(). Testing key "constituentULAN_URL" with attr "{}"
2022-04-08 21:19:07,717 : INFO -> Inside key_is_valid_xml(). Testing "constituentULAN_URL"
2022-04-08 21:19:07,717 : INFO -> Looping inside convert_dict(): key="constituentWikidata_URL", val="https://www.wikidata.org/wiki/Q17083157", type(val)="str"
2022-04-08 21:19:07,717 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,717 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,717 : INFO -> Inside convert_kv(): key="constituentWikidata_URL", val="https://www.wikidata.org/wiki/Q17083157", type(val) is: "str"
2022-04-08 21:19:07,717 : INFO -> Inside make_valid_xml_name(). Testing key "constituentWikidata_URL" with attr "{}"
2022-04-08 21:19:07,717 : INFO -> Inside key_is_valid_xml(). Testing "constituentWikidata_URL"
2022-04-08 21:19:07,717 : INFO -> Looping inside convert_dict(): key="gender", val="", type(val)="str"
2022-04-08 21:19:07,717 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,717 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,718 : INFO -> Inside convert_kv(): key="gender", val="", type(val) is: "str"
2022-04-08 21:19:07,718 : INFO -> Inside make_valid_xml_name(). Testing key "gender" with attr "{}"
2022-04-08 21:19:07,718 : INFO -> Inside key_is_valid_xml(). Testing "gender"
2022-04-08 21:19:07,718 : INFO -> Looping inside convert_dict(): key="department", val="The American Wing", type(val)="str"
2022-04-08 21:19:07,718 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,718 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,718 : INFO -> Inside convert_kv(): key="department", val="The American Wing", type(val) is: "str"
2022-04-08 21:19:07,718 : INFO -> Inside make_valid_xml_name(). Testing key "department" with attr "{}"
2022-04-08 21:19:07,718 : INFO -> Inside key_is_valid_xml(). Testing "department"
2022-04-08 21:19:07,718 : INFO -> Looping inside convert_dict(): key="objectName", val="Ale glass", type(val)="str"
2022-04-08 21:19:07,718 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,718 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,718 : INFO -> Inside convert_kv(): key="objectName", val="Ale glass", type(val) is: "str"
2022-04-08 21:19:07,718 : INFO -> Inside make_valid_xml_name(). Testing key "objectName" with attr "{}"
2022-04-08 21:19:07,718 : INFO -> Inside key_is_valid_xml(). Testing "objectName"
2022-04-08 21:19:07,718 : INFO -> Looping inside convert_dict(): key="title", val="Ale Glass", type(val)="str"
2022-04-08 21:19:07,719 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,719 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,719 : INFO -> Inside convert_kv(): key="title", val="Ale Glass", type(val) is: "str"
2022-04-08 21:19:07,719 : INFO -> Inside make_valid_xml_name(). Testing key "title" with attr "{}"
2022-04-08 21:19:07,719 : INFO -> Inside key_is_valid_xml(). Testing "title"
2022-04-08 21:19:07,719 : INFO -> Looping inside convert_dict(): key="culture", val="American", type(val)="str"
2022-04-08 21:19:07,719 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,719 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,719 : INFO -> Inside convert_kv(): key="culture", val="American", type(val) is: "str"
2022-04-08 21:19:07,719 : INFO -> Inside make_valid_xml_name(). Testing key "culture" with attr "{}"
2022-04-08 21:19:07,719 : INFO -> Inside key_is_valid_xml(). Testing "culture"
2022-04-08 21:19:07,719 : INFO -> Looping inside convert_dict(): key="period", val="", type(val)="str"
2022-04-08 21:19:07,719 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,719 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,719 : INFO -> Inside convert_kv(): key="period", val="", type(val) is: "str"
2022-04-08 21:19:07,719 : INFO -> Inside make_valid_xml_name(). Testing key "period" with attr "{}"
2022-04-08 21:19:07,719 : INFO -> Inside key_is_valid_xml(). Testing "period"
2022-04-08 21:19:07,720 : INFO -> Looping inside convert_dict(): key="dynasty", val="", type(val)="str"
2022-04-08 21:19:07,720 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,720 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,720 : INFO -> Inside convert_kv(): key="dynasty", val="", type(val) is: "str"
2022-04-08 21:19:07,720 : INFO -> Inside make_valid_xml_name(). Testing key "dynasty" with attr "{}"
2022-04-08 21:19:07,720 : INFO -> Inside key_is_valid_xml(). Testing "dynasty"
2022-04-08 21:19:07,720 : INFO -> Looping inside convert_dict(): key="reign", val="", type(val)="str"
2022-04-08 21:19:07,720 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,720 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,720 : INFO -> Inside convert_kv(): key="reign", val="", type(val) is: "str"
2022-04-08 21:19:07,720 : INFO -> Inside make_valid_xml_name(). Testing key "reign" with attr "{}"
2022-04-08 21:19:07,720 : INFO -> Inside key_is_valid_xml(). Testing "reign"
2022-04-08 21:19:07,721 : INFO -> Looping inside convert_dict(): key="portfolio", val="", type(val)="str"
2022-04-08 21:19:07,721 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,721 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,721 : INFO -> Inside convert_kv(): key="portfolio", val="", type(val) is: "str"
2022-04-08 21:19:07,721 : INFO -> Inside make_valid_xml_name(). Testing key "portfolio" with attr "{}"
2022-04-08 21:19:07,721 : INFO -> Inside key_is_valid_xml(). Testing "portfolio"
2022-04-08 21:19:07,721 : INFO -> Looping inside convert_dict(): key="artistRole", val="Maker", type(val)="str"
2022-04-08 21:19:07,721 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,721 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,721 : INFO -> Inside convert_kv(): key="artistRole", val="Maker", type(val) is: "str"
2022-04-08 21:19:07,721 : INFO -> Inside make_valid_xml_name(). Testing key "artistRole" with attr "{}"
2022-04-08 21:19:07,721 : INFO -> Inside key_is_valid_xml(). Testing "artistRole"
2022-04-08 21:19:07,721 : INFO -> Looping inside convert_dict(): key="artistPrefix", val="", type(val)="str"
2022-04-08 21:19:07,721 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,721 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,721 : INFO -> Inside convert_kv(): key="artistPrefix", val="", type(val) is: "str"
2022-04-08 21:19:07,722 : INFO -> Inside make_valid_xml_name(). Testing key "artistPrefix" with attr "{}"
2022-04-08 21:19:07,722 : INFO -> Inside key_is_valid_xml(). Testing "artistPrefix"
2022-04-08 21:19:07,722 : INFO -> Looping inside convert_dict(): key="artistDisplayName", val="New England Glass Company", type(val)="str"
2022-04-08 21:19:07,722 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,722 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,722 : INFO -> Inside convert_kv(): key="artistDisplayName", val="New England Glass Company", type(val) is: "str"
2022-04-08 21:19:07,722 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayName" with attr "{}"
2022-04-08 21:19:07,722 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayName"
2022-04-08 21:19:07,722 : INFO -> Looping inside convert_dict(): key="artistDisplayBio", val="American, East Cambridge, Massachusetts, 1818–1888", type(val)="str"
2022-04-08 21:19:07,722 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,722 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,722 : INFO -> Inside convert_kv(): key="artistDisplayBio", val="American, East Cambridge, Massachusetts, 1818–1888", type(val) is: "str"
2022-04-08 21:19:07,722 : INFO -> Inside make_valid_xml_name(). Testing key "artistDisplayBio" with attr "{}"
2022-04-08 21:19:07,722 : INFO -> Inside key_is_valid_xml(). Testing "artistDisplayBio"
2022-04-08 21:19:07,723 : INFO -> Looping inside convert_dict(): key="artistSuffix", val="", type(val)="str"
2022-04-08 21:19:07,723 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,723 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,723 : INFO -> Inside convert_kv(): key="artistSuffix", val="", type(val) is: "str"
2022-04-08 21:19:07,723 : INFO -> Inside make_valid_xml_name(). Testing key "artistSuffix" with attr "{}"
2022-04-08 21:19:07,723 : INFO -> Inside key_is_valid_xml(). Testing "artistSuffix"
2022-04-08 21:19:07,723 : INFO -> Looping inside convert_dict(): key="artistAlphaSort", val="New England Glass Company", type(val)="str"
2022-04-08 21:19:07,723 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,723 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,724 : INFO -> Inside convert_kv(): key="artistAlphaSort", val="New England Glass Company", type(val) is: "str"
2022-04-08 21:19:07,724 : INFO -> Inside make_valid_xml_name(). Testing key "artistAlphaSort" with attr "{}"
2022-04-08 21:19:07,724 : INFO -> Inside key_is_valid_xml(). Testing "artistAlphaSort"
2022-04-08 21:19:07,724 : INFO -> Looping inside convert_dict(): key="artistNationality", val="", type(val)="str"
2022-04-08 21:19:07,724 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,724 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,725 : INFO -> Inside convert_kv(): key="artistNationality", val="", type(val) is: "str"
2022-04-08 21:19:07,725 : INFO -> Inside make_valid_xml_name(). Testing key "artistNationality" with attr "{}"
2022-04-08 21:19:07,725 : INFO -> Inside key_is_valid_xml(). Testing "artistNationality"
2022-04-08 21:19:07,725 : INFO -> Looping inside convert_dict(): key="artistBeginDate", val="1818", type(val)="str"
2022-04-08 21:19:07,725 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,725 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,725 : INFO -> Inside convert_kv(): key="artistBeginDate", val="1818", type(val) is: "str"
2022-04-08 21:19:07,725 : INFO -> Inside make_valid_xml_name(). Testing key "artistBeginDate" with attr "{}"
2022-04-08 21:19:07,725 : INFO -> Inside key_is_valid_xml(). Testing "artistBeginDate"
2022-04-08 21:19:07,726 : INFO -> Looping inside convert_dict(): key="artistEndDate", val="1888", type(val)="str"
2022-04-08 21:19:07,726 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,726 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,726 : INFO -> Inside convert_kv(): key="artistEndDate", val="1888", type(val) is: "str"
2022-04-08 21:19:07,726 : INFO -> Inside make_valid_xml_name(). Testing key "artistEndDate" with attr "{}"
2022-04-08 21:19:07,726 : INFO -> Inside key_is_valid_xml(). Testing "artistEndDate"
2022-04-08 21:19:07,726 : INFO -> Looping inside convert_dict(): key="artistGender", val="", type(val)="str"
2022-04-08 21:19:07,726 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,726 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,727 : INFO -> Inside convert_kv(): key="artistGender", val="", type(val) is: "str"
2022-04-08 21:19:07,727 : INFO -> Inside make_valid_xml_name(). Testing key "artistGender" with attr "{}"
2022-04-08 21:19:07,727 : INFO -> Inside key_is_valid_xml(). Testing "artistGender"
2022-04-08 21:19:07,727 : INFO -> Looping inside convert_dict(): key="artistWikidata_URL", val="https://www.wikidata.org/wiki/Q17083157", type(val)="str"
2022-04-08 21:19:07,727 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,727 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,727 : INFO -> Inside convert_kv(): key="artistWikidata_URL", val="https://www.wikidata.org/wiki/Q17083157", type(val) is: "str"
2022-04-08 21:19:07,727 : INFO -> Inside make_valid_xml_name(). Testing key "artistWikidata_URL" with attr "{}"
2022-04-08 21:19:07,727 : INFO -> Inside key_is_valid_xml(). Testing "artistWikidata_URL"
2022-04-08 21:19:07,727 : INFO -> Looping inside convert_dict(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500356007", type(val)="str"
2022-04-08 21:19:07,728 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,728 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,728 : INFO -> Inside convert_kv(): key="artistULAN_URL", val="http://vocab.getty.edu/page/ulan/500356007", type(val) is: "str"
2022-04-08 21:19:07,728 : INFO -> Inside make_valid_xml_name(). Testing key "artistULAN_URL" with attr "{}"
2022-04-08 21:19:07,728 : INFO -> Inside key_is_valid_xml(). Testing "artistULAN_URL"
2022-04-08 21:19:07,728 : INFO -> Looping inside convert_dict(): key="objectDate", val="1830–70", type(val)="str"
2022-04-08 21:19:07,728 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,728 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,728 : INFO -> Inside convert_kv(): key="objectDate", val="1830–70", type(val) is: "str"
2022-04-08 21:19:07,729 : INFO -> Inside make_valid_xml_name(). Testing key "objectDate" with attr "{}"
2022-04-08 21:19:07,729 : INFO -> Inside key_is_valid_xml(). Testing "objectDate"
2022-04-08 21:19:07,729 : INFO -> Looping inside convert_dict(): key="objectBeginDate", val="1830", type(val)="int"
2022-04-08 21:19:07,729 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,729 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,729 : INFO -> Inside convert_kv(): key="objectBeginDate", val="1830", type(val) is: "int"
2022-04-08 21:19:07,729 : INFO -> Inside make_valid_xml_name(). Testing key "objectBeginDate" with attr "{}"
2022-04-08 21:19:07,729 : INFO -> Inside key_is_valid_xml(). Testing "objectBeginDate"
2022-04-08 21:19:07,729 : INFO -> Looping inside convert_dict(): key="objectEndDate", val="1870", type(val)="int"
2022-04-08 21:19:07,729 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,730 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,730 : INFO -> Inside convert_kv(): key="objectEndDate", val="1870", type(val) is: "int"
2022-04-08 21:19:07,730 : INFO -> Inside make_valid_xml_name(). Testing key "objectEndDate" with attr "{}"
2022-04-08 21:19:07,730 : INFO -> Inside key_is_valid_xml(). Testing "objectEndDate"
2022-04-08 21:19:07,730 : INFO -> Looping inside convert_dict(): key="medium", val="Pressed glass", type(val)="str"
2022-04-08 21:19:07,730 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,730 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,730 : INFO -> Inside convert_kv(): key="medium", val="Pressed glass", type(val) is: "str"
2022-04-08 21:19:07,730 : INFO -> Inside make_valid_xml_name(). Testing key "medium" with attr "{}"
2022-04-08 21:19:07,730 : INFO -> Inside key_is_valid_xml(). Testing "medium"
2022-04-08 21:19:07,731 : INFO -> Looping inside convert_dict(): key="dimensions", val="H. 6 9/16 in. (16.7 cm); Diam. 3 in. (7.6 cm)", type(val)="str"
2022-04-08 21:19:07,731 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,731 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,731 : INFO -> Inside convert_kv(): key="dimensions", val="H. 6 9/16 in. (16.7 cm); Diam. 3 in. (7.6 cm)", type(val) is: "str"
2022-04-08 21:19:07,731 : INFO -> Inside make_valid_xml_name(). Testing key "dimensions" with attr "{}"
2022-04-08 21:19:07,731 : INFO -> Inside key_is_valid_xml(). Testing "dimensions"
2022-04-08 21:19:07,731 : INFO -> Looping inside convert_dict(): key="measurements", val="[{'elementName': 'Other', 'elementDescription': None, 'elementMeasurements': {'Diameter': 7.62, 'Height': 16.6688}}]", type(val)="list"
2022-04-08 21:19:07,731 : INFO -> Inside make_valid_xml_name(). Testing key "measurements" with attr "{}"
2022-04-08 21:19:07,731 : INFO -> Inside key_is_valid_xml(). Testing "measurements"
2022-04-08 21:19:07,732 : INFO -> Inside convert_list()
2022-04-08 21:19:07,732 : INFO -> Looping inside convert_list(): item="{'elementName': 'Other', 'elementDescription': None, 'elementMeasurements': {'Diameter': 7.62, 'Height': 16.6688}}", item_name="item", type="dict"
2022-04-08 21:19:07,732 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'elementName': 'Other', 'elementDescription': None, 'elementMeasurements': {'Diameter': 7.62, 'Height': 16.6688}}"
2022-04-08 21:19:07,732 : INFO -> Looping inside convert_dict(): key="elementName", val="Other", type(val)="str"
2022-04-08 21:19:07,732 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,732 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,732 : INFO -> Inside convert_kv(): key="elementName", val="Other", type(val) is: "str"
2022-04-08 21:19:07,732 : INFO -> Inside make_valid_xml_name(). Testing key "elementName" with attr "{}"
2022-04-08 21:19:07,732 : INFO -> Inside key_is_valid_xml(). Testing "elementName"
2022-04-08 21:19:07,732 : INFO -> Looping inside convert_dict(): key="elementDescription", val="None", type(val)="NoneType"
2022-04-08 21:19:07,733 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,733 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,733 : INFO -> Inside convert_none(): key="elementDescription"
2022-04-08 21:19:07,733 : INFO -> Inside make_valid_xml_name(). Testing key "elementDescription" with attr "{}"
2022-04-08 21:19:07,733 : INFO -> Inside key_is_valid_xml(). Testing "elementDescription"
2022-04-08 21:19:07,733 : INFO -> Looping inside convert_dict(): key="elementMeasurements", val="{'Diameter': 7.62, 'Height': 16.6688}", type(val)="dict"
2022-04-08 21:19:07,733 : INFO -> Inside make_valid_xml_name(). Testing key "elementMeasurements" with attr "{}"
2022-04-08 21:19:07,733 : INFO -> Inside key_is_valid_xml(). Testing "elementMeasurements"
2022-04-08 21:19:07,733 : INFO -> Inside convert_dict(): obj type is: "dict", obj="{'Diameter': 7.62, 'Height': 16.6688}"
2022-04-08 21:19:07,733 : INFO -> Looping inside convert_dict(): key="Diameter", val="7.62", type(val)="float"
2022-04-08 21:19:07,733 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,733 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,733 : INFO -> Inside convert_kv(): key="Diameter", val="7.62", type(val) is: "float"
2022-04-08 21:19:07,734 : INFO -> Inside make_valid_xml_name(). Testing key "Diameter" with attr "{}"
2022-04-08 21:19:07,734 : INFO -> Inside key_is_valid_xml(). Testing "Diameter"
2022-04-08 21:19:07,734 : INFO -> Looping inside convert_dict(): key="Height", val="16.6688", type(val)="float"
2022-04-08 21:19:07,734 : INFO -> Inside make_valid_xml_name(). Testing key "Height" with attr "{}"
2022-04-08 21:19:07,734 : INFO -> Inside key_is_valid_xml(). Testing "Height"
2022-04-08 21:19:07,734 : INFO -> Inside convert_kv(): key="Height", val="16.6688", type(val) is: "float"
2022-04-08 21:19:07,734 : INFO -> Inside make_valid_xml_name(). Testing key "Height" with attr "{}"
2022-04-08 21:19:07,734 : INFO -> Inside key_is_valid_xml(). Testing "Height"
2022-04-08 21:19:07,734 : INFO -> Looping inside convert_dict(): key="creditLine", val="Gift of Mrs. Emily Winthrop Miles, 1946", type(val)="str"
2022-04-08 21:19:07,734 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,734 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,734 : INFO -> Inside convert_kv(): key="creditLine", val="Gift of Mrs. Emily Winthrop Miles, 1946", type(val) is: "str"
2022-04-08 21:19:07,734 : INFO -> Inside make_valid_xml_name(). Testing key "creditLine" with attr "{}"
2022-04-08 21:19:07,734 : INFO -> Inside key_is_valid_xml(). Testing "creditLine"
2022-04-08 21:19:07,734 : INFO -> Looping inside convert_dict(): key="geographyType", val="Made in", type(val)="str"
2022-04-08 21:19:07,734 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,735 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,735 : INFO -> Inside convert_kv(): key="geographyType", val="Made in", type(val) is: "str"
2022-04-08 21:19:07,735 : INFO -> Inside make_valid_xml_name(). Testing key "geographyType" with attr "{}"
2022-04-08 21:19:07,735 : INFO -> Inside key_is_valid_xml(). Testing "geographyType"
2022-04-08 21:19:07,735 : INFO -> Looping inside convert_dict(): key="city", val="East Cambridge", type(val)="str"
2022-04-08 21:19:07,735 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,735 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,735 : INFO -> Inside convert_kv(): key="city", val="East Cambridge", type(val) is: "str"
2022-04-08 21:19:07,735 : INFO -> Inside make_valid_xml_name(). Testing key "city" with attr "{}"
2022-04-08 21:19:07,735 : INFO -> Inside key_is_valid_xml(). Testing "city"
2022-04-08 21:19:07,735 : INFO -> Looping inside convert_dict(): key="state", val="Massachusetts", type(val)="str"
2022-04-08 21:19:07,735 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,735 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,735 : INFO -> Inside convert_kv(): key="state", val="Massachusetts", type(val) is: "str"
2022-04-08 21:19:07,735 : INFO -> Inside make_valid_xml_name(). Testing key "state" with attr "{}"
2022-04-08 21:19:07,735 : INFO -> Inside key_is_valid_xml(). Testing "state"
2022-04-08 21:19:07,736 : INFO -> Looping inside convert_dict(): key="county", val="", type(val)="str"
2022-04-08 21:19:07,736 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,736 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,736 : INFO -> Inside convert_kv(): key="county", val="", type(val) is: "str"
2022-04-08 21:19:07,736 : INFO -> Inside make_valid_xml_name(). Testing key "county" with attr "{}"
2022-04-08 21:19:07,736 : INFO -> Inside key_is_valid_xml(). Testing "county"
2022-04-08 21:19:07,736 : INFO -> Looping inside convert_dict(): key="country", val="United States", type(val)="str"
2022-04-08 21:19:07,736 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,736 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,736 : INFO -> Inside convert_kv(): key="country", val="United States", type(val) is: "str"
2022-04-08 21:19:07,736 : INFO -> Inside make_valid_xml_name(). Testing key "country" with attr "{}"
2022-04-08 21:19:07,736 : INFO -> Inside key_is_valid_xml(). Testing "country"
2022-04-08 21:19:07,736 : INFO -> Looping inside convert_dict(): key="region", val="New England", type(val)="str"
2022-04-08 21:19:07,736 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,736 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,736 : INFO -> Inside convert_kv(): key="region", val="New England", type(val) is: "str"
2022-04-08 21:19:07,736 : INFO -> Inside make_valid_xml_name(). Testing key "region" with attr "{}"
2022-04-08 21:19:07,736 : INFO -> Inside key_is_valid_xml(). Testing "region"
2022-04-08 21:19:07,737 : INFO -> Looping inside convert_dict(): key="subregion", val="", type(val)="str"
2022-04-08 21:19:07,737 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,737 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,737 : INFO -> Inside convert_kv(): key="subregion", val="", type(val) is: "str"
2022-04-08 21:19:07,737 : INFO -> Inside make_valid_xml_name(). Testing key "subregion" with attr "{}"
2022-04-08 21:19:07,737 : INFO -> Inside key_is_valid_xml(). Testing "subregion"
2022-04-08 21:19:07,737 : INFO -> Looping inside convert_dict(): key="locale", val="", type(val)="str"
2022-04-08 21:19:07,737 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,737 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,737 : INFO -> Inside convert_kv(): key="locale", val="", type(val) is: "str"
2022-04-08 21:19:07,737 : INFO -> Inside make_valid_xml_name(). Testing key "locale" with attr "{}"
2022-04-08 21:19:07,737 : INFO -> Inside key_is_valid_xml(). Testing "locale"
2022-04-08 21:19:07,737 : INFO -> Looping inside convert_dict(): key="locus", val="", type(val)="str"
2022-04-08 21:19:07,737 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,737 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,737 : INFO -> Inside convert_kv(): key="locus", val="", type(val) is: "str"
2022-04-08 21:19:07,738 : INFO -> Inside make_valid_xml_name(). Testing key "locus" with attr "{}"
2022-04-08 21:19:07,738 : INFO -> Inside key_is_valid_xml(). Testing "locus"
2022-04-08 21:19:07,738 : INFO -> Looping inside convert_dict(): key="excavation", val="", type(val)="str"
2022-04-08 21:19:07,738 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,738 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,738 : INFO -> Inside convert_kv(): key="excavation", val="", type(val) is: "str"
2022-04-08 21:19:07,738 : INFO -> Inside make_valid_xml_name(). Testing key "excavation" with attr "{}"
2022-04-08 21:19:07,738 : INFO -> Inside key_is_valid_xml(). Testing "excavation"
2022-04-08 21:19:07,738 : INFO -> Looping inside convert_dict(): key="river", val="", type(val)="str"
2022-04-08 21:19:07,738 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,738 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,738 : INFO -> Inside convert_kv(): key="river", val="", type(val) is: "str"
2022-04-08 21:19:07,738 : INFO -> Inside make_valid_xml_name(). Testing key "river" with attr "{}"
2022-04-08 21:19:07,738 : INFO -> Inside key_is_valid_xml(). Testing "river"
2022-04-08 21:19:07,738 : INFO -> Looping inside convert_dict(): key="classification", val="", type(val)="str"
2022-04-08 21:19:07,738 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,738 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,738 : INFO -> Inside convert_kv(): key="classification", val="", type(val) is: "str"
2022-04-08 21:19:07,739 : INFO -> Inside make_valid_xml_name(). Testing key "classification" with attr "{}"
2022-04-08 21:19:07,739 : INFO -> Inside key_is_valid_xml(). Testing "classification"
2022-04-08 21:19:07,739 : INFO -> Looping inside convert_dict(): key="rightsAndReproduction", val="", type(val)="str"
2022-04-08 21:19:07,739 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,739 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,739 : INFO -> Inside convert_kv(): key="rightsAndReproduction", val="", type(val) is: "str"
2022-04-08 21:19:07,739 : INFO -> Inside make_valid_xml_name(). Testing key "rightsAndReproduction" with attr "{}"
2022-04-08 21:19:07,739 : INFO -> Inside key_is_valid_xml(). Testing "rightsAndReproduction"
2022-04-08 21:19:07,739 : INFO -> Looping inside convert_dict(): key="linkResource", val="", type(val)="str"
2022-04-08 21:19:07,739 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,739 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,739 : INFO -> Inside convert_kv(): key="linkResource", val="", type(val) is: "str"
2022-04-08 21:19:07,739 : INFO -> Inside make_valid_xml_name(). Testing key "linkResource" with attr "{}"
2022-04-08 21:19:07,739 : INFO -> Inside key_is_valid_xml(). Testing "linkResource"
2022-04-08 21:19:07,739 : INFO -> Looping inside convert_dict(): key="metadataDate", val="2022-02-09T04:42:08.947Z", type(val)="str"
2022-04-08 21:19:07,739 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,739 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,740 : INFO -> Inside convert_kv(): key="metadataDate", val="2022-02-09T04:42:08.947Z", type(val) is: "str"
2022-04-08 21:19:07,740 : INFO -> Inside make_valid_xml_name(). Testing key "metadataDate" with attr "{}"
2022-04-08 21:19:07,740 : INFO -> Inside key_is_valid_xml(). Testing "metadataDate"
2022-04-08 21:19:07,740 : INFO -> Looping inside convert_dict(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val)="str"
2022-04-08 21:19:07,740 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,740 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,740 : INFO -> Inside convert_kv(): key="repository", val="Metropolitan Museum of Art, New York, NY", type(val) is: "str"
2022-04-08 21:19:07,740 : INFO -> Inside make_valid_xml_name(). Testing key "repository" with attr "{}"
2022-04-08 21:19:07,740 : INFO -> Inside key_is_valid_xml(). Testing "repository"
2022-04-08 21:19:07,740 : INFO -> Looping inside convert_dict(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/40", type(val)="str"
2022-04-08 21:19:07,740 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,740 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,740 : INFO -> Inside convert_kv(): key="objectURL", val="https://www.metmuseum.org/art/collection/search/40", type(val) is: "str"
2022-04-08 21:19:07,740 : INFO -> Inside make_valid_xml_name(). Testing key "objectURL" with attr "{}"
2022-04-08 21:19:07,740 : INFO -> Inside key_is_valid_xml(). Testing "objectURL"
2022-04-08 21:19:07,740 : INFO -> Looping inside convert_dict(): key="tags", val="None", type(val)="NoneType"
2022-04-08 21:19:07,740 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,740 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,741 : INFO -> Inside convert_none(): key="tags"
2022-04-08 21:19:07,741 : INFO -> Inside make_valid_xml_name(). Testing key "tags" with attr "{}"
2022-04-08 21:19:07,741 : INFO -> Inside key_is_valid_xml(). Testing "tags"
2022-04-08 21:19:07,741 : INFO -> Looping inside convert_dict(): key="objectWikidata_URL", val="", type(val)="str"
2022-04-08 21:19:07,741 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,741 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,741 : INFO -> Inside convert_kv(): key="objectWikidata_URL", val="", type(val) is: "str"
2022-04-08 21:19:07,741 : INFO -> Inside make_valid_xml_name(). Testing key "objectWikidata_URL" with attr "{}"
2022-04-08 21:19:07,741 : INFO -> Inside key_is_valid_xml(). Testing "objectWikidata_URL"
2022-04-08 21:19:07,741 : INFO -> Looping inside convert_dict(): key="isTimelineWork", val="False", type(val)="bool"
2022-04-08 21:19:07,741 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,741 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,741 : INFO -> Inside convert_kv(): key="isTimelineWork", val="False", type(val) is: "bool"
2022-04-08 21:19:07,741 : INFO -> Inside make_valid_xml_name(). Testing key "isTimelineWork" with attr "{}"
2022-04-08 21:19:07,741 : INFO -> Inside key_is_valid_xml(). Testing "isTimelineWork"
2022-04-08 21:19:07,741 : INFO -> Looping inside convert_dict(): key="GalleryNumber", val="774", type(val)="str"
2022-04-08 21:19:07,741 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,742 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,742 : INFO -> Inside convert_kv(): key="GalleryNumber", val="774", type(val) is: "str"
2022-04-08 21:19:07,742 : INFO -> Inside make_valid_xml_name(). Testing key "GalleryNumber" with attr "{}"
2022-04-08 21:19:07,742 : INFO -> Inside key_is_valid_xml(). Testing "GalleryNumber"
2022-04-08 21:19:07,763 : INFO -> generated xml string : <?xml version="1.0" ?>
<root>
	<item>
		<objectID>1</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>1979.486.1</accessionNumber>
		<accessionYear>1979</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents>
			<item>
				<constituentID>164292</constituentID>
				<role>Maker</role>
				<name>James Barton Longacre</name>
				<constituentULAN_URL>http://vocab.getty.edu/page/ulan/500011409</constituentULAN_URL>
				<constituentWikidata_URL>https://www.wikidata.org/wiki/Q3806459</constituentWikidata_URL>
				<gender/>
			</item>
		</constituents>
		<department>The American Wing</department>
		<objectName>Coin</objectName>
		<title>One-dollar Liberty Head Coin</title>
		<culture/>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole>Maker</artistRole>
		<artistPrefix/>
		<artistDisplayName>James Barton Longacre</artistDisplayName>
		<artistDisplayBio>American, Delaware County, Pennsylvania 1794–1869 Philadelphia, Pennsylvania</artistDisplayBio>
		<artistSuffix/>
		<artistAlphaSort>Longacre, James Barton</artistAlphaSort>
		<artistNationality>American</artistNationality>
		<artistBeginDate>1794</artistBeginDate>
		<artistEndDate>1869</artistEndDate>
		<artistGender/>
		<artistWikidata_URL>https://www.wikidata.org/wiki/Q3806459</artistWikidata_URL>
		<artistULAN_URL>http://vocab.getty.edu/page/ulan/500011409</artistULAN_URL>
		<objectDate>1853</objectDate>
		<objectBeginDate>1853</objectBeginDate>
		<objectEndDate>1853</objectEndDate>
		<medium>Gold</medium>
		<dimensions>Dimensions unavailable</dimensions>
		<measurements/>
		<creditLine>Gift of Heinz L. Stoppelmann, 1979</creditLine>
		<geographyType/>
		<city/>
		<state/>
		<county/>
		<country/>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/1</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>2</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>1980.264.5</accessionNumber>
		<accessionYear>1980</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents>
			<item>
				<constituentID>1079</constituentID>
				<role>Maker</role>
				<name>Christian Gobrecht</name>
				<constituentULAN_URL>http://vocab.getty.edu/page/ulan/500077295</constituentULAN_URL>
				<constituentWikidata_URL>https://www.wikidata.org/wiki/Q5109648</constituentWikidata_URL>
				<gender/>
			</item>
		</constituents>
		<department>The American Wing</department>
		<objectName>Coin</objectName>
		<title>Ten-dollar Liberty Head Coin</title>
		<culture/>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole>Maker</artistRole>
		<artistPrefix/>
		<artistDisplayName>Christian Gobrecht</artistDisplayName>
		<artistDisplayBio>1785–1844</artistDisplayBio>
		<artistSuffix/>
		<artistAlphaSort>Gobrecht, Christian</artistAlphaSort>
		<artistNationality/>
		<artistBeginDate>1785</artistBeginDate>
		<artistEndDate>1844</artistEndDate>
		<artistGender/>
		<artistWikidata_URL>https://www.wikidata.org/wiki/Q5109648</artistWikidata_URL>
		<artistULAN_URL>http://vocab.getty.edu/page/ulan/500077295</artistULAN_URL>
		<objectDate>1901</objectDate>
		<objectBeginDate>1901</objectBeginDate>
		<objectEndDate>1901</objectEndDate>
		<medium>Gold</medium>
		<dimensions>Dimensions unavailable</dimensions>
		<measurements/>
		<creditLine>Gift of Heinz L. Stoppelmann, 1980</creditLine>
		<geographyType/>
		<city/>
		<state/>
		<county/>
		<country/>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/2</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>3</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>67.265.9</accessionNumber>
		<accessionYear>1967</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Coin</objectName>
		<title>Two-and-a-Half Dollar Coin</title>
		<culture/>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1909–27</objectDate>
		<objectBeginDate>1909</objectBeginDate>
		<objectEndDate>1927</objectEndDate>
		<medium>Gold</medium>
		<dimensions>Diam. 11/16 in. (1.7 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>1.7463</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of C. Ruxton Love Jr., 1967</creditLine>
		<geographyType/>
		<city/>
		<state/>
		<county/>
		<country/>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/3</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>4</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>67.265.10</accessionNumber>
		<accessionYear>1967</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Coin</objectName>
		<title>Two-and-a-Half Dollar Coin</title>
		<culture/>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1909–27</objectDate>
		<objectBeginDate>1909</objectBeginDate>
		<objectEndDate>1927</objectEndDate>
		<medium>Gold</medium>
		<dimensions>Diam. 11/16 in. (1.7 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>1.7463</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of C. Ruxton Love Jr., 1967</creditLine>
		<geographyType/>
		<city/>
		<state/>
		<county/>
		<country/>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/4</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>5</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>67.265.11</accessionNumber>
		<accessionYear>1967</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Coin</objectName>
		<title>Two-and-a-Half Dollar Coin</title>
		<culture/>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1909–27</objectDate>
		<objectBeginDate>1909</objectBeginDate>
		<objectEndDate>1927</objectEndDate>
		<medium>Gold</medium>
		<dimensions>Diam. 11/16 in. (1.7 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>1.7463</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of C. Ruxton Love Jr., 1967</creditLine>
		<geographyType/>
		<city/>
		<state/>
		<county/>
		<country/>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/5</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>6</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>67.265.12</accessionNumber>
		<accessionYear>1967</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Coin</objectName>
		<title>Two-and-a-Half Dollar Coin</title>
		<culture/>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1909–27</objectDate>
		<objectBeginDate>1909</objectBeginDate>
		<objectEndDate>1927</objectEndDate>
		<medium>Gold</medium>
		<dimensions>Diam. 11/16 in. (1.7 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>1.7463</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of C. Ruxton Love Jr., 1967</creditLine>
		<geographyType/>
		<city/>
		<state/>
		<county/>
		<country/>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/6</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>7</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>67.265.13</accessionNumber>
		<accessionYear>1967</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Coin</objectName>
		<title>Two-and-a-Half Dollar Coin</title>
		<culture/>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1909–27</objectDate>
		<objectBeginDate>1909</objectBeginDate>
		<objectEndDate>1927</objectEndDate>
		<medium>Gold</medium>
		<dimensions>Diam. 11/16 in. (1.7 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>1.7463</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of C. Ruxton Love Jr., 1967</creditLine>
		<geographyType/>
		<city/>
		<state/>
		<county/>
		<country/>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/7</objectURL>
		<tags>
			<item>
				<term>Birds</term>
				<AAT_URL>http://vocab.getty.edu/page/aat/300266506</AAT_URL>
				<Wikidata_URL>https://www.wikidata.org/wiki/Q5113</Wikidata_URL>
			</item>
			<item>
				<term>Coins</term>
				<AAT_URL>http://vocab.getty.edu/page/aat/300037222</AAT_URL>
				<Wikidata_URL>https://www.wikidata.org/wiki/Q41207</Wikidata_URL>
			</item>
		</tags>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>8</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>67.265.14</accessionNumber>
		<accessionYear>1967</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Coin</objectName>
		<title>Two-and-a-Half Dollar Coin</title>
		<culture/>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1909–27</objectDate>
		<objectBeginDate>1909</objectBeginDate>
		<objectEndDate>1927</objectEndDate>
		<medium>Gold</medium>
		<dimensions>Diam. 11/16 in. (1.7 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>1.7463</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of C. Ruxton Love Jr., 1967</creditLine>
		<geographyType/>
		<city/>
		<state/>
		<county/>
		<country/>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/8</objectURL>
		<tags>
			<item>
				<term>Men</term>
				<AAT_URL>http://vocab.getty.edu/page/aat/300025928</AAT_URL>
				<Wikidata_URL>https://www.wikidata.org/wiki/Q8441</Wikidata_URL>
			</item>
			<item>
				<term>Profiles</term>
				<AAT_URL>http://vocab.getty.edu/page/aat/300123319</AAT_URL>
				<Wikidata_URL>https://www.wikidata.org/wiki/Q4382010</Wikidata_URL>
			</item>
			<item>
				<term>Eagles</term>
				<AAT_URL>http://vocab.getty.edu/page/aat/300250049</AAT_URL>
				<Wikidata_URL>https://www.wikidata.org/wiki/Q2092297</Wikidata_URL>
			</item>
		</tags>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>9</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>67.265.15</accessionNumber>
		<accessionYear>1967</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Coin</objectName>
		<title>Two-and-a-Half Dollar Coin</title>
		<culture/>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1909–27</objectDate>
		<objectBeginDate>1909</objectBeginDate>
		<objectEndDate>1927</objectEndDate>
		<medium>Gold</medium>
		<dimensions>Diam. 11/16 in. (1.7 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>1.7463</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of C. Ruxton Love Jr., 1967</creditLine>
		<geographyType/>
		<city/>
		<state/>
		<county/>
		<country/>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/9</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>10</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>1979.486.3</accessionNumber>
		<accessionYear>1979</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents>
			<item>
				<constituentID>1080</constituentID>
				<role>Maker</role>
				<name>Bela Lyon Pratt</name>
				<constituentULAN_URL>http://vocab.getty.edu/page/ulan/500095555</constituentULAN_URL>
				<constituentWikidata_URL>https://www.wikidata.org/wiki/Q4881787</constituentWikidata_URL>
				<gender/>
			</item>
		</constituents>
		<department>The American Wing</department>
		<objectName>Coin</objectName>
		<title>Two-and-a-half-dollar Indian Head Coin</title>
		<culture/>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole>Maker</artistRole>
		<artistPrefix/>
		<artistDisplayName>Bela Lyon Pratt</artistDisplayName>
		<artistDisplayBio>1867–1917</artistDisplayBio>
		<artistSuffix/>
		<artistAlphaSort>Pratt, Bela Lyon</artistAlphaSort>
		<artistNationality/>
		<artistBeginDate>1867</artistBeginDate>
		<artistEndDate>1917</artistEndDate>
		<artistGender/>
		<artistWikidata_URL>https://www.wikidata.org/wiki/Q4881787</artistWikidata_URL>
		<artistULAN_URL>http://vocab.getty.edu/page/ulan/500095555</artistULAN_URL>
		<objectDate>1912</objectDate>
		<objectBeginDate>1912</objectBeginDate>
		<objectEndDate>1912</objectEndDate>
		<medium>Gold</medium>
		<dimensions>Dimensions unavailable</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>1.7</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Heinz L. Stoppelmann, 1979</creditLine>
		<geographyType/>
		<city/>
		<state/>
		<county/>
		<country/>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/10</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>11</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>1979.486.2</accessionNumber>
		<accessionYear>1979</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents>
			<item>
				<constituentID>1079</constituentID>
				<role>Maker</role>
				<name>Christian Gobrecht</name>
				<constituentULAN_URL>http://vocab.getty.edu/page/ulan/500077295</constituentULAN_URL>
				<constituentWikidata_URL>https://www.wikidata.org/wiki/Q5109648</constituentWikidata_URL>
				<gender/>
			</item>
		</constituents>
		<department>The American Wing</department>
		<objectName>Coin</objectName>
		<title>Two-and-a-half-dollar Liberty Head Coin</title>
		<culture/>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole>Maker</artistRole>
		<artistPrefix/>
		<artistDisplayName>Christian Gobrecht</artistDisplayName>
		<artistDisplayBio>1785–1844</artistDisplayBio>
		<artistSuffix/>
		<artistAlphaSort>Gobrecht, Christian</artistAlphaSort>
		<artistNationality/>
		<artistBeginDate>1785</artistBeginDate>
		<artistEndDate>1844</artistEndDate>
		<artistGender/>
		<artistWikidata_URL>https://www.wikidata.org/wiki/Q5109648</artistWikidata_URL>
		<artistULAN_URL>http://vocab.getty.edu/page/ulan/500077295</artistULAN_URL>
		<objectDate>1907</objectDate>
		<objectBeginDate>1907</objectBeginDate>
		<objectEndDate>1907</objectEndDate>
		<medium>Gold</medium>
		<dimensions>Dimensions unavailable</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>1.7</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Heinz L. Stoppelmann, 1979</creditLine>
		<geographyType/>
		<city/>
		<state/>
		<county/>
		<country/>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/11</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>12</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>1979.486.7</accessionNumber>
		<accessionYear>1979</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents>
			<item>
				<constituentID>164292</constituentID>
				<role>Maker</role>
				<name>James Barton Longacre</name>
				<constituentULAN_URL>http://vocab.getty.edu/page/ulan/500011409</constituentULAN_URL>
				<constituentWikidata_URL>https://www.wikidata.org/wiki/Q3806459</constituentWikidata_URL>
				<gender/>
			</item>
		</constituents>
		<department>The American Wing</department>
		<objectName>Coin</objectName>
		<title>Twenty-dollar Liberty Head Coin</title>
		<culture/>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole>Maker</artistRole>
		<artistPrefix/>
		<artistDisplayName>James Barton Longacre</artistDisplayName>
		<artistDisplayBio>American, Delaware County, Pennsylvania 1794–1869 Philadelphia, Pennsylvania</artistDisplayBio>
		<artistSuffix/>
		<artistAlphaSort>Longacre, James Barton</artistAlphaSort>
		<artistNationality>American</artistNationality>
		<artistBeginDate>1794</artistBeginDate>
		<artistEndDate>1869</artistEndDate>
		<artistGender/>
		<artistWikidata_URL>https://www.wikidata.org/wiki/Q3806459</artistWikidata_URL>
		<artistULAN_URL>http://vocab.getty.edu/page/ulan/500011409</artistULAN_URL>
		<objectDate>1876</objectDate>
		<objectBeginDate>1876</objectBeginDate>
		<objectEndDate>1876</objectEndDate>
		<medium>Gold</medium>
		<dimensions>Dimensions unavailable</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>1.7</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Heinz L. Stoppelmann, 1979</creditLine>
		<geographyType/>
		<city/>
		<state/>
		<county/>
		<country/>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/12</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>13</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>1979.486.4</accessionNumber>
		<accessionYear>1979</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents>
			<item>
				<constituentID>1080</constituentID>
				<role>Maker</role>
				<name>Bela Lyon Pratt</name>
				<constituentULAN_URL>http://vocab.getty.edu/page/ulan/500095555</constituentULAN_URL>
				<constituentWikidata_URL>https://www.wikidata.org/wiki/Q4881787</constituentWikidata_URL>
				<gender/>
			</item>
		</constituents>
		<department>The American Wing</department>
		<objectName>Coin</objectName>
		<title>Five-dollar Indian Head Coin</title>
		<culture/>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole>Maker</artistRole>
		<artistPrefix/>
		<artistDisplayName>Bela Lyon Pratt</artistDisplayName>
		<artistDisplayBio>1867–1917</artistDisplayBio>
		<artistSuffix/>
		<artistAlphaSort>Pratt, Bela Lyon</artistAlphaSort>
		<artistNationality/>
		<artistBeginDate>1867</artistBeginDate>
		<artistEndDate>1917</artistEndDate>
		<artistGender/>
		<artistWikidata_URL>https://www.wikidata.org/wiki/Q4881787</artistWikidata_URL>
		<artistULAN_URL>http://vocab.getty.edu/page/ulan/500095555</artistULAN_URL>
		<objectDate>1910</objectDate>
		<objectBeginDate>1910</objectBeginDate>
		<objectEndDate>1910</objectEndDate>
		<medium>Gold</medium>
		<dimensions>Dimensions unavailable</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>1.7</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Heinz L. Stoppelmann, 1979</creditLine>
		<geographyType/>
		<city/>
		<state/>
		<county/>
		<country/>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/13</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>14</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>1979.486.5</accessionNumber>
		<accessionYear>1979</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents>
			<item>
				<constituentID>1079</constituentID>
				<role>Maker</role>
				<name>Christian Gobrecht</name>
				<constituentULAN_URL>http://vocab.getty.edu/page/ulan/500077295</constituentULAN_URL>
				<constituentWikidata_URL>https://www.wikidata.org/wiki/Q5109648</constituentWikidata_URL>
				<gender/>
			</item>
		</constituents>
		<department>The American Wing</department>
		<objectName>Coin</objectName>
		<title>Five-dollar Liberty Head Coin</title>
		<culture/>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole>Maker</artistRole>
		<artistPrefix/>
		<artistDisplayName>Christian Gobrecht</artistDisplayName>
		<artistDisplayBio>1785–1844</artistDisplayBio>
		<artistSuffix/>
		<artistAlphaSort>Gobrecht, Christian</artistAlphaSort>
		<artistNationality/>
		<artistBeginDate>1785</artistBeginDate>
		<artistEndDate>1844</artistEndDate>
		<artistGender/>
		<artistWikidata_URL>https://www.wikidata.org/wiki/Q5109648</artistWikidata_URL>
		<artistULAN_URL>http://vocab.getty.edu/page/ulan/500077295</artistULAN_URL>
		<objectDate>1907</objectDate>
		<objectBeginDate>1907</objectBeginDate>
		<objectEndDate>1907</objectEndDate>
		<medium>Gold</medium>
		<dimensions>Dimensions unavailable</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>1.7</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Heinz L. Stoppelmann, 1979</creditLine>
		<geographyType/>
		<city/>
		<state/>
		<county/>
		<country/>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/14</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>15</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>16.74.49</accessionNumber>
		<accessionYear>1916</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Coin</objectName>
		<title>Coin, 1/2 Real</title>
		<culture>Mexican</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1665–1700</objectDate>
		<objectBeginDate>1665</objectBeginDate>
		<objectEndDate>1700</objectEndDate>
		<medium>Silver</medium>
		<dimensions>Diam. 1/2 in. (1.3 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>1.27</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Mrs. Russell Sage, 1916</creditLine>
		<geographyType>Made in</geographyType>
		<city/>
		<state/>
		<county/>
		<country>Mexico</country>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/15</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>16</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>16.74.27</accessionNumber>
		<accessionYear>1916</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Peso</objectName>
		<title>Coin, 1/4 Peso</title>
		<culture>Mexican</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1800–1900</objectDate>
		<objectBeginDate>1800</objectBeginDate>
		<objectEndDate>1900</objectEndDate>
		<medium>Bronze or copper</medium>
		<dimensions>Diam. 1 1/8 in. (2.9 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>2.8575</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Mrs. Russell Sage, 1916</creditLine>
		<geographyType>Made in</geographyType>
		<city/>
		<state/>
		<county/>
		<country>Mexico</country>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/16</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>17</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>16.74.28</accessionNumber>
		<accessionYear>1916</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Peso</objectName>
		<title>Coin, 1/4 Peso</title>
		<culture>Mexican</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1867</objectDate>
		<objectBeginDate>1867</objectBeginDate>
		<objectEndDate>1867</objectEndDate>
		<medium>Bronze or copper</medium>
		<dimensions>Diam. 1 1/8 in. (2.9 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>2.8575</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Mrs. Russell Sage, 1916</creditLine>
		<geographyType>Made in</geographyType>
		<city/>
		<state/>
		<county/>
		<country>Mexico</country>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/17</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>18</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>16.74.29</accessionNumber>
		<accessionYear>1916</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Peso</objectName>
		<title>Coin, 1/4 Peso</title>
		<culture>Mexican</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1860</objectDate>
		<objectBeginDate>1860</objectBeginDate>
		<objectEndDate>1860</objectEndDate>
		<medium>Bronze or copper</medium>
		<dimensions>Diam. 1 1/8 in. (2.9 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>2.8575</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Mrs. Russell Sage, 1916</creditLine>
		<geographyType>Made in</geographyType>
		<city/>
		<state/>
		<county/>
		<country>Mexico</country>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/18</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>19</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>16.74.30</accessionNumber>
		<accessionYear>1916</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Peso</objectName>
		<title>Coin, 1/4 Peso</title>
		<culture>Mexican</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1859</objectDate>
		<objectBeginDate>1859</objectBeginDate>
		<objectEndDate>1859</objectEndDate>
		<medium>Bronze or copper</medium>
		<dimensions>Diam. 1 1/8 in. (2.9 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>2.9</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Mrs. Russell Sage, 1916</creditLine>
		<geographyType>Made in</geographyType>
		<city/>
		<state/>
		<county/>
		<country>Mexico</country>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/19</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>20</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>16.74.31</accessionNumber>
		<accessionYear>1916</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Peso</objectName>
		<title>Coin, 1/4 Peso</title>
		<culture>Mexican</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1860</objectDate>
		<objectBeginDate>1860</objectBeginDate>
		<objectEndDate>1860</objectEndDate>
		<medium>Bronze or copper</medium>
		<dimensions>Diam. 1 1/8 in. (2.9 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>2.9</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Mrs. Russell Sage, 1916</creditLine>
		<geographyType>Made in</geographyType>
		<city/>
		<state/>
		<county/>
		<country>Mexico</country>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/20</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>21</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>16.74.32</accessionNumber>
		<accessionYear>1916</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Peso</objectName>
		<title>Coin, 1/4 Peso</title>
		<culture>Mexican</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1859</objectDate>
		<objectBeginDate>1859</objectBeginDate>
		<objectEndDate>1859</objectEndDate>
		<medium>Bronze or copper</medium>
		<dimensions>Diam. 1 1/8 in. (2.9 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>2.9</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Mrs. Russell Sage, 1916</creditLine>
		<geographyType>Made in</geographyType>
		<city/>
		<state/>
		<county/>
		<country>Mexico</country>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/21</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>22</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>16.74.43</accessionNumber>
		<accessionYear>1916</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Coin</objectName>
		<title>Coin, 1/4 Real</title>
		<culture>Guatemalan</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1881</objectDate>
		<objectBeginDate>1881</objectBeginDate>
		<objectEndDate>1881</objectEndDate>
		<medium>Silver</medium>
		<dimensions>Diam. 1/2 in. (1.3 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>1.27</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Mrs. Russell Sage, 1916</creditLine>
		<geographyType>Made in</geographyType>
		<city/>
		<state/>
		<county/>
		<country>Guatemala</country>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/22</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>23</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>16.74.44</accessionNumber>
		<accessionYear>1916</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Coin</objectName>
		<title>Coin, 1/4 Real</title>
		<culture>Guatemalan</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1878</objectDate>
		<objectBeginDate>1878</objectBeginDate>
		<objectEndDate>1878</objectEndDate>
		<medium>Silver</medium>
		<dimensions>Diam. 1/2 in. (1.3 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>1.27</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Mrs. Russell Sage, 1916</creditLine>
		<geographyType>Made in</geographyType>
		<city/>
		<state/>
		<county/>
		<country>Guatemala</country>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/23</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>24</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>16.74.33</accessionNumber>
		<accessionYear>1916</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Centavos</objectName>
		<title>Coin, 10 Centavos</title>
		<culture>Mexican</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1860–70</objectDate>
		<objectBeginDate>1860</objectBeginDate>
		<objectEndDate>1870</objectEndDate>
		<medium>Nickel</medium>
		<dimensions>Diam. 3/4 in. (1.9 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>1.905</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Mrs. Russell Sage, 1916</creditLine>
		<geographyType>Made in</geographyType>
		<city/>
		<state/>
		<county/>
		<country>Mexico</country>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/24</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>25</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>16.74.34</accessionNumber>
		<accessionYear>1916</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Centavos</objectName>
		<title>Coin, 10 Centavos</title>
		<culture>Mexican</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1860–70</objectDate>
		<objectBeginDate>1860</objectBeginDate>
		<objectEndDate>1870</objectEndDate>
		<medium>Nickel</medium>
		<dimensions>Diam. 3/4 in. (1.9 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>1.905</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Mrs. Russell Sage, 1916</creditLine>
		<geographyType>Made in</geographyType>
		<city/>
		<state/>
		<county/>
		<country>Mexico</country>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/25</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>26</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>16.74.35</accessionNumber>
		<accessionYear>1916</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Centavos</objectName>
		<title>Coin, 10 Centavos</title>
		<culture>Mexican</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1860–70</objectDate>
		<objectBeginDate>1860</objectBeginDate>
		<objectEndDate>1870</objectEndDate>
		<medium>Nickel</medium>
		<dimensions>Diam. 3/4 in. (1.9 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>1.905</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Mrs. Russell Sage, 1916</creditLine>
		<geographyType>Made in</geographyType>
		<city/>
		<state/>
		<county/>
		<country>Mexico</country>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/26</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>27</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>16.74.36</accessionNumber>
		<accessionYear>1916</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Centavos</objectName>
		<title>Coin, 10 Centavos</title>
		<culture>Mexican</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1860–70</objectDate>
		<objectBeginDate>1860</objectBeginDate>
		<objectEndDate>1870</objectEndDate>
		<medium>Nickel</medium>
		<dimensions>Diam. 3/4 in. (1.9 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>1.905</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Mrs. Russell Sage, 1916</creditLine>
		<geographyType>Made in</geographyType>
		<city/>
		<state/>
		<county/>
		<country>Mexico</country>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/27</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>28</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>16.74.38</accessionNumber>
		<accessionYear>1916</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Centavos</objectName>
		<title>Coin, 10 Centavos</title>
		<culture>Mexican</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1860–70</objectDate>
		<objectBeginDate>1860</objectBeginDate>
		<objectEndDate>1870</objectEndDate>
		<medium>Nickel</medium>
		<dimensions>Diam. 3/4 in. (1.9 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>1.905</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Mrs. Russell Sage, 1916</creditLine>
		<geographyType>Made in</geographyType>
		<city/>
		<state/>
		<county/>
		<country>Mexico</country>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/28</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>29</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>16.74.39</accessionNumber>
		<accessionYear>1916</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Centavos</objectName>
		<title>Coin, 10 Centavos</title>
		<culture>Mexican</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1860–70</objectDate>
		<objectBeginDate>1860</objectBeginDate>
		<objectEndDate>1870</objectEndDate>
		<medium>Nickel</medium>
		<dimensions>Diam. 3/4 in. (1.9 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>1.905</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Mrs. Russell Sage, 1916</creditLine>
		<geographyType>Made in</geographyType>
		<city/>
		<state/>
		<county/>
		<country>Mexico</country>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/29</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>30</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>16.74.37</accessionNumber>
		<accessionYear>1916</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Centavos</objectName>
		<title>Coin, 10 Centavos</title>
		<culture>Mexican</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1885</objectDate>
		<objectBeginDate>1885</objectBeginDate>
		<objectEndDate>1885</objectEndDate>
		<medium>Nickel</medium>
		<dimensions>Diam. 3/4 in. (1.9 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>1.905</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Mrs. Russell Sage, 1916</creditLine>
		<geographyType>Made in</geographyType>
		<city/>
		<state/>
		<county/>
		<country>Mexico</country>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/30</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>31</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>16.74.40</accessionNumber>
		<accessionYear>1916</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Centavos</objectName>
		<title>Coin, 10 Centavos</title>
		<culture>Mexican</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1885</objectDate>
		<objectBeginDate>1885</objectBeginDate>
		<objectEndDate>1885</objectEndDate>
		<medium>Nickel</medium>
		<dimensions>Diam. 3/4 in. (1.9 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>1.905</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Mrs. Russell Sage, 1916</creditLine>
		<geographyType>Made in</geographyType>
		<city/>
		<state/>
		<county/>
		<country>Mexico</country>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/31</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>32</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>09.9.15</accessionNumber>
		<accessionYear>1909</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Pesos</objectName>
		<title>Coin, 20 Pesos</title>
		<culture>Mexican</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1866</objectDate>
		<objectBeginDate>1866</objectBeginDate>
		<objectEndDate>1866</objectEndDate>
		<medium>Gold</medium>
		<dimensions>Diam. 2 1/8 in. (5.4 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Object diameter</elementDescription>
				<elementMeasurements>
					<Diameter>5.3975</Diameter>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of H. R. Ickelheimer, 1909</creditLine>
		<geographyType>Made in</geographyType>
		<city/>
		<state/>
		<county/>
		<country>Mexico</country>
		<region/>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/32</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>33</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>64.62</accessionNumber>
		<accessionYear>1964</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents>
			<item>
				<constituentID>164590</constituentID>
				<role>Maker</role>
				<name>James Gillinder and Sons</name>
				<constituentULAN_URL>http://vocab.getty.edu/page/ulan/500524407</constituentULAN_URL>
				<constituentWikidata_URL>https://www.wikidata.org/wiki/Q99264077</constituentWikidata_URL>
				<gender/>
			</item>
		</constituents>
		<department>The American Wing</department>
		<objectName>Bust</objectName>
		<title>Bust of Abraham Lincoln</title>
		<culture>American</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole>Maker</artistRole>
		<artistPrefix/>
		<artistDisplayName>James Gillinder and Sons</artistDisplayName>
		<artistDisplayBio>American, 1861–ca. 1930</artistDisplayBio>
		<artistSuffix/>
		<artistAlphaSort>Gillinder and Sons, James</artistAlphaSort>
		<artistNationality>American</artistNationality>
		<artistBeginDate>1861</artistBeginDate>
		<artistEndDate>1930</artistEndDate>
		<artistGender/>
		<artistWikidata_URL>https://www.wikidata.org/wiki/Q99264077</artistWikidata_URL>
		<artistULAN_URL>http://vocab.getty.edu/page/ulan/500524407</artistULAN_URL>
		<objectDate>1876</objectDate>
		<objectBeginDate>1876</objectBeginDate>
		<objectEndDate>1876</objectEndDate>
		<medium>Pressed glass</medium>
		<dimensions>2 3/4 x 3 1/2 x 2 3/4 in. (7 x 8.9 x 7 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Overall</elementName>
				<elementDescription/>
				<elementMeasurements>
					<Depth>7</Depth>
					<Height>7</Height>
					<Width>8.9</Width>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Teunis G. B. Cortelyou, 1964</creditLine>
		<geographyType>Made in</geographyType>
		<city>Philadelphia</city>
		<state>Pennsylvania</state>
		<county/>
		<country>United States</country>
		<region>Mid-Atlantic</region>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2022-02-09T04:42:08.947Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/33</objectURL>
		<tags>
			<item>
				<term>Abraham Lincoln</term>
				<AAT_URL>http://vocab.getty.edu/page/ulan/500344436</AAT_URL>
				<Wikidata_URL>https://www.wikidata.org/wiki/Q91</Wikidata_URL>
			</item>
			<item>
				<term>Portraits</term>
				<AAT_URL>http://vocab.getty.edu/page/aat/300015637</AAT_URL>
				<Wikidata_URL>https://www.wikidata.org/wiki/Q134307</Wikidata_URL>
			</item>
			<item>
				<term>Men</term>
				<AAT_URL>http://vocab.getty.edu/page/aat/300025928</AAT_URL>
				<Wikidata_URL>https://www.wikidata.org/wiki/Q8441</Wikidata_URL>
			</item>
		</tags>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber>774</GalleryNumber>
	</item>
	<item>
		<objectID>34</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>1970.289.6</accessionNumber>
		<accessionYear>1970</accessionYear>
		<isPublicDomain>True</isPublicDomain>
		<primaryImage>https://images.metmuseum.org/CRDImages/ad/original/204788.jpg</primaryImage>
		<primaryImageSmall>https://images.metmuseum.org/CRDImages/ad/web-large/204788.jpg</primaryImageSmall>
		<additionalImages/>
		<constituents>
			<item>
				<constituentID>1082</constituentID>
				<role>Maker</role>
				<name>Forestville Manufacturing Company</name>
				<constituentULAN_URL/>
				<constituentWikidata_URL/>
				<gender/>
			</item>
		</constituents>
		<department>The American Wing</department>
		<objectName>Clock</objectName>
		<title>Acorn Clock</title>
		<culture>American</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole>Maker</artistRole>
		<artistPrefix/>
		<artistDisplayName>Forestville Manufacturing Company</artistDisplayName>
		<artistDisplayBio>1835–1853</artistDisplayBio>
		<artistSuffix/>
		<artistAlphaSort>Forestville Manufacturing Company</artistAlphaSort>
		<artistNationality/>
		<artistBeginDate>1835</artistBeginDate>
		<artistEndDate>1853</artistEndDate>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1847–50</objectDate>
		<objectBeginDate>1847</objectBeginDate>
		<objectEndDate>1850</objectEndDate>
		<medium>Mahogany, laminated</medium>
		<dimensions>24 3/8 x 14 5/8 x 5 1/8 in. (61.9 x 37.1 x 13 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Overall</elementName>
				<elementDescription/>
				<elementMeasurements>
					<Depth>13.0175</Depth>
					<Height>61.9</Height>
					<Width>37.1</Width>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Mrs. Paul Moore, 1970</creditLine>
		<geographyType>Made in</geographyType>
		<city>Bristol</city>
		<state>Connecticut</state>
		<county/>
		<country>United States</country>
		<region>New England</region>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-06-30T04:39:57.037Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/34</objectURL>
		<tags>
			<item>
				<term>Boats</term>
				<AAT_URL>http://vocab.getty.edu/page/aat/300178749</AAT_URL>
				<Wikidata_URL>https://www.wikidata.org/wiki/Q35872</Wikidata_URL>
			</item>
			<item>
				<term>Landscapes</term>
				<AAT_URL>http://vocab.getty.edu/page/aat/300132294</AAT_URL>
				<Wikidata_URL>https://www.wikidata.org/wiki/Q191163</Wikidata_URL>
			</item>
		</tags>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber>774</GalleryNumber>
	</item>
	<item>
		<objectID>35</objectID>
		<isHighlight>True</isHighlight>
		<accessionNumber>04.1a–c</accessionNumber>
		<accessionYear>1904</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents>
			<item>
				<constituentID>1083</constituentID>
				<role>Designer</role>
				<name>Designed by Paulding Farnham</name>
				<constituentULAN_URL>http://vocab.getty.edu/page/ulan/500336597</constituentULAN_URL>
				<constituentWikidata_URL>https://www.wikidata.org/wiki/Q13476260</constituentWikidata_URL>
				<gender/>
			</item>
			<item>
				<constituentID>162539</constituentID>
				<role>Manufacturer</role>
				<name>Manufactured by Tiffany &amp;amp; Co.</name>
				<constituentULAN_URL>http://vocab.getty.edu/page/ulan/500330306</constituentULAN_URL>
				<constituentWikidata_URL>https://www.wikidata.org/wiki/Q1066858</constituentWikidata_URL>
				<gender/>
			</item>
		</constituents>
		<department>The American Wing</department>
		<objectName>Vase</objectName>
		<title>The Adams Vase</title>
		<culture>American</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole>Designer</artistRole>
		<artistPrefix>Designed by</artistPrefix>
		<artistDisplayName>Paulding Farnham</artistDisplayName>
		<artistDisplayBio>1859–1927</artistDisplayBio>
		<artistSuffix/>
		<artistAlphaSort>Farnham, Paulding</artistAlphaSort>
		<artistNationality/>
		<artistBeginDate>1859</artistBeginDate>
		<artistEndDate>1927</artistEndDate>
		<artistGender/>
		<artistWikidata_URL>https://www.wikidata.org/wiki/Q13476260</artistWikidata_URL>
		<artistULAN_URL>http://vocab.getty.edu/page/ulan/500336597</artistULAN_URL>
		<objectDate>1893–95</objectDate>
		<objectBeginDate>1893</objectBeginDate>
		<objectEndDate>1895</objectEndDate>
		<medium>Gold, amethysts, spessartites, tourmalines, fresh water pearls, quartzes, rock crystal, and enamel</medium>
		<dimensions>Overall: 19 7/16 x 13 x 9 1/4 in. (49.4 x 33 x 23.5 cm); 352 oz. 18 dwt. (10977 g)
Body: H. 18 7/8 in. (47.9 cm)
Cover: 4 1/4 x 4 13/16 in. (10.8 x 12.2 cm); 19 oz. 6 dwt. (600.1 g)</dimensions>
		<measurements>
			<item>
				<elementName>Overall</elementName>
				<elementDescription/>
				<elementMeasurements>
					<Depth>23.495</Depth>
					<Height>49.3713</Height>
					<Weight>10.977</Weight>
					<Width>33</Width>
				</elementMeasurements>
			</item>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Cover</elementDescription>
				<elementMeasurements>
					<Diameter>12.2238</Diameter>
					<Height>10.795</Height>
					<Weight>0.6001</Weight>
				</elementMeasurements>
			</item>
			<item>
				<elementName>Other</elementName>
				<elementDescription>Body</elementDescription>
				<elementMeasurements>
					<Height>47.9426</Height>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Edward D. Adams, 1904</creditLine>
		<geographyType>Made in</geographyType>
		<city>New York</city>
		<state>New York</state>
		<county/>
		<country>United States</country>
		<region>Mid-Atlantic</region>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/35</objectURL>
		<tags>
			<item>
				<term>Birds</term>
				<AAT_URL>http://vocab.getty.edu/page/aat/300266506</AAT_URL>
				<Wikidata_URL>https://www.wikidata.org/wiki/Q5113</Wikidata_URL>
			</item>
			<item>
				<term>Men</term>
				<AAT_URL>http://vocab.getty.edu/page/aat/300025928</AAT_URL>
				<Wikidata_URL>https://www.wikidata.org/wiki/Q8441</Wikidata_URL>
			</item>
			<item>
				<term>Animals</term>
				<AAT_URL>http://vocab.getty.edu/page/aat/300249525</AAT_URL>
				<Wikidata_URL>https://www.wikidata.org/wiki/Q729</Wikidata_URL>
			</item>
			<item>
				<term>Garlands</term>
				<AAT_URL>http://vocab.getty.edu/page/aat/300167386</AAT_URL>
				<Wikidata_URL>https://www.wikidata.org/wiki/Q756600</Wikidata_URL>
			</item>
		</tags>
		<objectWikidata_URL>https://www.wikidata.org/wiki/Q83545838</objectWikidata_URL>
		<isTimelineWork>True</isTimelineWork>
		<GalleryNumber>706</GalleryNumber>
	</item>
	<item>
		<objectID>36</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>1976.319</accessionNumber>
		<accessionYear>1976</accessionYear>
		<isPublicDomain>False</isPublicDomain>
		<primaryImage/>
		<primaryImageSmall/>
		<additionalImages/>
		<constituents>
			<item>
				<constituentID>1085</constituentID>
				<role>Maker</role>
				<name>Conrad Henninger</name>
				<constituentULAN_URL/>
				<constituentWikidata_URL/>
				<gender/>
			</item>
		</constituents>
		<department>The American Wing</department>
		<objectName>Side Chair</objectName>
		<title>Side Chair</title>
		<culture>American</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole>Maker</artistRole>
		<artistPrefix/>
		<artistDisplayName>Conrad Henninger</artistDisplayName>
		<artistDisplayBio>active ca. 1888–1932</artistDisplayBio>
		<artistSuffix/>
		<artistAlphaSort>Henninger, Conrad</artistAlphaSort>
		<artistNationality/>
		<artistBeginDate>1885</artistBeginDate>
		<artistEndDate>1932</artistEndDate>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>ca. 1887</objectDate>
		<objectBeginDate>1884</objectBeginDate>
		<objectEndDate>1887</objectEndDate>
		<medium>Oak, tulip poplar</medium>
		<dimensions>40 x 25 1/2 x 34 1/2 in. (101.6 x 64.8 x 87.6 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Overall</elementName>
				<elementDescription/>
				<elementMeasurements>
					<Depth>87.6302</Depth>
					<Height>101.6</Height>
					<Width>64.8</Width>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Charlotte Pickman-Gertz, 1976</creditLine>
		<geographyType>Made in</geographyType>
		<city>Lebanon</city>
		<state>Pennsylvania</state>
		<county/>
		<country>United States</country>
		<region>Mid-Atlantic</region>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/36</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber>774</GalleryNumber>
	</item>
	<item>
		<objectID>37</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>38.165.51</accessionNumber>
		<accessionYear>1938</accessionYear>
		<isPublicDomain>True</isPublicDomain>
		<primaryImage>https://images.metmuseum.org/CRDImages/ad/original/DP247752.jpg</primaryImage>
		<primaryImageSmall>https://images.metmuseum.org/CRDImages/ad/web-large/DP247752.jpg</primaryImageSmall>
		<additionalImages>
			<item>https://images.metmuseum.org/CRDImages/ad/original/DP247756.jpg</item>
			<item>https://images.metmuseum.org/CRDImages/ad/original/117430.jpg</item>
		</additionalImages>
		<constituents>
			<item>
				<constituentID>164285</constituentID>
				<role>Maker</role>
				<name>Pierre Stephan</name>
				<constituentULAN_URL>http://vocab.getty.edu/page/ulan/500100483</constituentULAN_URL>
				<constituentWikidata_URL/>
				<gender/>
			</item>
		</constituents>
		<department>The American Wing</department>
		<objectName>Figure</objectName>
		<title>Figure of Admiral George Rodney</title>
		<culture>British (American market)</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole>Maker</artistRole>
		<artistPrefix/>
		<artistDisplayName>Pierre Stephan</artistDisplayName>
		<artistDisplayBio>French, active ca. 1770–95</artistDisplayBio>
		<artistSuffix/>
		<artistAlphaSort>Stephan, Pierre</artistAlphaSort>
		<artistNationality>French</artistNationality>
		<artistBeginDate>1765</artistBeginDate>
		<artistEndDate>1795</artistEndDate>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL>http://vocab.getty.edu/page/ulan/500100483</artistULAN_URL>
		<objectDate>ca. 1785</objectDate>
		<objectBeginDate>1782</objectBeginDate>
		<objectEndDate>1785</objectEndDate>
		<medium>Earthenware, basalt</medium>
		<dimensions>H. 12 in. (30.5 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Overall</elementName>
				<elementDescription/>
				<elementMeasurements>
					<Height>30.5</Height>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Harris Brisbane Dick Fund, 1938</creditLine>
		<geographyType>Made in</geographyType>
		<city/>
		<state/>
		<county>Staffordshire</county>
		<country>England</country>
		<region>West Midlands</region>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/37</objectURL>
		<tags>
			<item>
				<term>Cannons</term>
				<AAT_URL>http://vocab.getty.edu/page/aat/300036936</AAT_URL>
				<Wikidata_URL>https://www.wikidata.org/wiki/Q81103</Wikidata_URL>
			</item>
			<item>
				<term>Swords</term>
				<AAT_URL>http://vocab.getty.edu/page/aat/300037048</AAT_URL>
				<Wikidata_URL>https://www.wikidata.org/wiki/Q12791</Wikidata_URL>
			</item>
			<item>
				<term>Men</term>
				<AAT_URL>http://vocab.getty.edu/page/aat/300025928</AAT_URL>
				<Wikidata_URL>https://www.wikidata.org/wiki/Q8441</Wikidata_URL>
			</item>
		</tags>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber>774</GalleryNumber>
	</item>
	<item>
		<objectID>38</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>38.165.50</accessionNumber>
		<accessionYear>1938</accessionYear>
		<isPublicDomain>True</isPublicDomain>
		<primaryImage>https://images.metmuseum.org/CRDImages/ad/original/DP247753.jpg</primaryImage>
		<primaryImageSmall>https://images.metmuseum.org/CRDImages/ad/web-large/DP247753.jpg</primaryImageSmall>
		<additionalImages>
			<item>https://images.metmuseum.org/CRDImages/ad/original/DP247755.jpg</item>
		</additionalImages>
		<constituents>
			<item>
				<constituentID>164285</constituentID>
				<role>Maker</role>
				<name>Pierre Stephan</name>
				<constituentULAN_URL>http://vocab.getty.edu/page/ulan/500100483</constituentULAN_URL>
				<constituentWikidata_URL/>
				<gender/>
			</item>
		</constituents>
		<department>The American Wing</department>
		<objectName>Figure</objectName>
		<title>Figure of Admiral Samuel Hood</title>
		<culture>British (American market)</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole>Maker</artistRole>
		<artistPrefix/>
		<artistDisplayName>Pierre Stephan</artistDisplayName>
		<artistDisplayBio>French, active ca. 1770–95</artistDisplayBio>
		<artistSuffix/>
		<artistAlphaSort>Stephan, Pierre</artistAlphaSort>
		<artistNationality>French</artistNationality>
		<artistBeginDate>1765</artistBeginDate>
		<artistEndDate>1795</artistEndDate>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL>http://vocab.getty.edu/page/ulan/500100483</artistULAN_URL>
		<objectDate>ca. 1785</objectDate>
		<objectBeginDate>1782</objectBeginDate>
		<objectEndDate>1785</objectEndDate>
		<medium>Earthenware, basalt</medium>
		<dimensions>H. 12 3/8 in. (31.4 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Overall</elementName>
				<elementDescription/>
				<elementMeasurements>
					<Height>31.4</Height>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Harris Brisbane Dick Fund, 1938</creditLine>
		<geographyType>Made in</geographyType>
		<city/>
		<state/>
		<county>Staffordshire</county>
		<country>England</country>
		<region>West Midlands</region>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/38</objectURL>
		<tags>
			<item>
				<term>Cannons</term>
				<AAT_URL>http://vocab.getty.edu/page/aat/300036936</AAT_URL>
				<Wikidata_URL>https://www.wikidata.org/wiki/Q81103</Wikidata_URL>
			</item>
			<item>
				<term>Swords</term>
				<AAT_URL>http://vocab.getty.edu/page/aat/300037048</AAT_URL>
				<Wikidata_URL>https://www.wikidata.org/wiki/Q12791</Wikidata_URL>
			</item>
			<item>
				<term>Men</term>
				<AAT_URL>http://vocab.getty.edu/page/aat/300025928</AAT_URL>
				<Wikidata_URL>https://www.wikidata.org/wiki/Q8441</Wikidata_URL>
			</item>
			<item>
				<term>Admirals</term>
				<AAT_URL>http://vocab.getty.edu/page/aat/300236014</AAT_URL>
				<Wikidata_URL>https://www.wikidata.org/wiki/Q132851</Wikidata_URL>
			</item>
		</tags>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber>774</GalleryNumber>
	</item>
	<item>
		<objectID>39</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>18.11.10</accessionNumber>
		<accessionYear>1918</accessionYear>
		<isPublicDomain>True</isPublicDomain>
		<primaryImage>https://images.metmuseum.org/CRDImages/ad/original/37808.jpg</primaryImage>
		<primaryImageSmall>https://images.metmuseum.org/CRDImages/ad/web-large/37808.jpg</primaryImageSmall>
		<additionalImages/>
		<constituents/>
		<department>The American Wing</department>
		<objectName>Advertisement</objectName>
		<title>Advertisement for Norwich Stone Ware Factory</title>
		<culture>American</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole/>
		<artistPrefix/>
		<artistDisplayName/>
		<artistDisplayBio/>
		<artistSuffix/>
		<artistAlphaSort/>
		<artistNationality/>
		<artistBeginDate/>
		<artistEndDate/>
		<artistGender/>
		<artistWikidata_URL/>
		<artistULAN_URL/>
		<objectDate>1770–1800</objectDate>
		<objectBeginDate>1770</objectBeginDate>
		<objectEndDate>1800</objectEndDate>
		<medium>Paper</medium>
		<dimensions>11 x 9 in. (27.9 x 22.9 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Overall</elementName>
				<elementDescription/>
				<elementMeasurements>
					<Height>27.9</Height>
					<Width>22.86</Width>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Rogers Fund, 1918</creditLine>
		<geographyType>Made in</geographyType>
		<city>Norwich</city>
		<state>Connecticut</state>
		<county/>
		<country>United States</country>
		<region>New England</region>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2021-04-06T04:41:04.967Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/39</objectURL>
		<tags>
			<item>
				<term>Advertisements</term>
				<AAT_URL>http://vocab.getty.edu/page/aat/300193993</AAT_URL>
				<Wikidata_URL>https://www.wikidata.org/wiki/Q39911916</Wikidata_URL>
			</item>
		</tags>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber/>
	</item>
	<item>
		<objectID>40</objectID>
		<isHighlight>False</isHighlight>
		<accessionNumber>46.140.143</accessionNumber>
		<accessionYear>1946</accessionYear>
		<isPublicDomain>True</isPublicDomain>
		<primaryImage>https://images.metmuseum.org/CRDImages/ad/original/174118.jpg</primaryImage>
		<primaryImageSmall>https://images.metmuseum.org/CRDImages/ad/web-large/174118.jpg</primaryImageSmall>
		<additionalImages/>
		<constituents>
			<item>
				<constituentID>1087</constituentID>
				<role>Maker</role>
				<name>New England Glass Company</name>
				<constituentULAN_URL>http://vocab.getty.edu/page/ulan/500356007</constituentULAN_URL>
				<constituentWikidata_URL>https://www.wikidata.org/wiki/Q17083157</constituentWikidata_URL>
				<gender/>
			</item>
		</constituents>
		<department>The American Wing</department>
		<objectName>Ale glass</objectName>
		<title>Ale Glass</title>
		<culture>American</culture>
		<period/>
		<dynasty/>
		<reign/>
		<portfolio/>
		<artistRole>Maker</artistRole>
		<artistPrefix/>
		<artistDisplayName>New England Glass Company</artistDisplayName>
		<artistDisplayBio>American, East Cambridge, Massachusetts, 1818–1888</artistDisplayBio>
		<artistSuffix/>
		<artistAlphaSort>New England Glass Company</artistAlphaSort>
		<artistNationality/>
		<artistBeginDate>1818</artistBeginDate>
		<artistEndDate>1888</artistEndDate>
		<artistGender/>
		<artistWikidata_URL>https://www.wikidata.org/wiki/Q17083157</artistWikidata_URL>
		<artistULAN_URL>http://vocab.getty.edu/page/ulan/500356007</artistULAN_URL>
		<objectDate>1830–70</objectDate>
		<objectBeginDate>1830</objectBeginDate>
		<objectEndDate>1870</objectEndDate>
		<medium>Pressed glass</medium>
		<dimensions>H. 6 9/16 in. (16.7 cm); Diam. 3 in. (7.6 cm)</dimensions>
		<measurements>
			<item>
				<elementName>Other</elementName>
				<elementDescription/>
				<elementMeasurements>
					<Diameter>7.62</Diameter>
					<Height>16.6688</Height>
				</elementMeasurements>
			</item>
		</measurements>
		<creditLine>Gift of Mrs. Emily Winthrop Miles, 1946</creditLine>
		<geographyType>Made in</geographyType>
		<city>East Cambridge</city>
		<state>Massachusetts</state>
		<county/>
		<country>United States</country>
		<region>New England</region>
		<subregion/>
		<locale/>
		<locus/>
		<excavation/>
		<river/>
		<classification/>
		<rightsAndReproduction/>
		<linkResource/>
		<metadataDate>2022-02-09T04:42:08.947Z</metadataDate>
		<repository>Metropolitan Museum of Art, New York, NY</repository>
		<objectURL>https://www.metmuseum.org/art/collection/search/40</objectURL>
		<tags/>
		<objectWikidata_URL/>
		<isTimelineWork>False</isTimelineWork>
		<GalleryNumber>774</GalleryNumber>
	</item>
</root>

2022-04-08 21:19:07,763 : INFO -> generated xml file at /home/sachin/Desktop/Month-1-Python/Week_1/generate_xml_from_api/generated_metmuseum_objects.xml
